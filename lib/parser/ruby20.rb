# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby20 < Parser::Base

module_eval(<<'...end ruby20.y/module_eval...', 'ruby20.y', 2317)

  def version
    20
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby20.y/module_eval...
##### State transition tables begin ###

clist = [
'-289,265,-103,-99,-485,-100,-486,-289,-289,-289,211,212,713,-289,-289',
'605,-289,214,642,-98,-104,607,563,-84,-286,642,584,440,215,-70,592,971',
'-105,-101,569,684,-289,-289,-102,-289,-289,-289,-289,-289,-101,563,-100',
'563,563,257,713,832,803,641,211,212,258,-98,215,-99,641,826,642,-106',
'-286,-103,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289',
'-289,-289,-106,604,-289,-289,-289,-564,625,606,264,215,-289,563,-94',
'-289,594,593,597,641,-289,803,-289,569,-289,-289,215,-289,-289,-289',
'-289,-289,-471,-289,-90,-289,-91,-563,110,-471,-471,-471,-103,109,-471',
'-471,-471,-103,-471,-289,-89,-95,-289,-289,583,-95,-471,-289,-471,-471',
'-471,-104,110,-96,-92,837,683,109,-471,-471,215,-471,-471,-471,-471',
'-471,110,110,-102,713,-94,109,109,-102,-101,110,-100,110,110,-101,109',
'-100,109,109,-97,-92,-94,215,-471,-471,-471,-471,-471,-471,-471,-471',
'-471,-471,-471,-471,-471,-471,-102,265,-471,-471,-471,-476,-471,-471',
'-94,642,-471,-94,-476,-471,-471,265,-471,-94,-471,110,-471,265,-471',
'-471,109,-471,-471,-471,-471,-471,511,-471,702,-471,542,541,540,393',
'543,592,211,212,395,394,641,396,769,-471,-567,-92,-471,-471,-471,-471',
'-474,-471,575,-471,620,-471,576,-474,-474,-474,110,-563,-474,-474,-474',
'109,-474,110,211,212,832,803,109,-96,-474,260,-474,-474,-474,-105,524',
'260,803,526,264,-92,-474,-474,-92,-474,-474,-474,-474,-474,-92,-103',
'-567,110,264,594,593,-92,109,-567,264,-93,836,-101,-563,747,948,768',
'-567,621,211,212,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474',
'-474,-474,-474,110,-567,-474,-474,-474,109,-474,-474,-479,592,-474,215',
'-560,-474,-474,-479,-474,215,-474,209,-474,592,-474,-474,855,-474,-474',
'-474,-474,-474,-94,-474,215,-474,-101,702,-103,542,541,540,592,543,803',
'524,592,-486,526,-474,-561,592,-474,-474,-474,-474,-567,-474,235,-474',
'511,-474,110,-567,-567,-567,-471,109,-97,-567,-567,235,-567,-471,-106',
'594,593,524,-560,-100,523,-567,-471,-478,-567,745,110,594,593,603,-478',
'109,-567,-567,-90,-567,-567,-567,-567,-567,-99,-560,-474,671,-485,260',
'594,593,599,-474,594,593,595,-105,-561,594,593,608,-474,828,559,558',
'-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567',
'-567,-561,-567,-567,-567,524,626,-567,526,260,-567,215,-563,-567,592',
'-89,-567,215,-567,671,-567,-98,-567,-567,-409,-567,-567,-567,-567,-567',
'-289,-567,-567,-567,754,-567,796,-289,-289,-289,110,-482,-289,-289,-289',
'109,-289,-567,-482,845,-567,-567,235,-93,235,-567,-289,-289,-289,-102',
'110,-290,486,79,484,109,-289,-289,-290,-289,-289,-289,-289,-289,439',
'80,-409,-290,594,593,590,-91,254,-409,232,81,232,-100,234,233,234,233',
'-409,230,231,773,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289',
'-289,-289,-289,-265,-409,-289,-289,-289,215,771,-289,502,215,-289,441',
'235,-289,-289,503,-289,854,-289,442,-289,214,-289,-289,501,-289,-289',
'-289,-289,-289,549,-289,702,-289,542,541,540,473,543,702,551,542,541',
'540,232,543,473,-289,234,233,-289,-289,-289,-289,-567,-289,473,-289',
'313,-104,482,-567,-567,-567,-480,785,-567,-567,-567,698,-567,-480,484',
'559,558,551,698,-481,552,-567,-567,-567,-567,312,-481,701,506,507,211',
'212,-567,-567,-474,-567,-567,-567,-567,-567,702,-474,542,541,540,207',
'543,211,212,486,559,558,208,755,702,552,542,541,540,857,543,206,-567',
'-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,-567,689',
'698,-567,-567,-567,579,770,-567,314,315,-567,860,932,-567,-567,698,-567',
'862,-567,864,-567,580,-567,-567,701,-567,-567,-567,-567,-567,-279,-567',
'-567,-567,866,215,257,-279,702,868,542,541,540,258,543,869,-279,-567',
'493,-471,-567,-567,-567,-567,872,-567,-471,-567,-264,-102,286,69,70',
'71,9,57,-477,874,875,63,64,671,749,-477,67,698,65,66,68,30,31,72,73',
'877,899,748,-263,881,29,28,27,98,97,99,100,739,740,19,883,741,104,105',
'630,8,45,288,10,102,101,103,92,56,94,93,95,884,96,104,105,885,90,91',
'42,43,41,235,239,244,245,246,241,243,251,252,247,248,436,228,229,571',
'886,249,250,437,40,689,572,33,888,890,58,59,438,892,60,570,35,232,894',
'238,44,234,233,894,230,231,242,240,236,20,237,215,744,900,89,79,82,83',
'-483,84,86,85,87,-69,902,-483,514,80,88,254,253,-568,-240,515,-483,62',
'904,81,-568,-568,-568,215,438,-568,-568,-568,235,-568,-289,113,114,115',
'116,117,383,-289,-568,-568,-568,-568,-564,496,249,250,-289,210,497,-568',
'-568,716,-568,-568,-568,-568,-568,910,569,-279,232,709,238,913,234,233',
'-279,230,231,215,916,236,-266,237,707,-279,706,205,705,-568,-568,-568',
'-568,-568,-568,-568,-568,-568,-568,-568,-568,-568,-568,696,579,-568',
'-568,-568,235,694,-568,578,692,-568,690,926,-568,-568,689,-568,580,-568',
'204,-568,686,-568,-568,933,-568,-568,-568,-568,-568,934,-568,-568,-568',
'203,504,680,232,678,677,269,234,233,215,230,231,260,-568,671,-484,-568',
'-568,-568,-568,950,-568,-484,-568,286,69,70,71,9,57,517,-484,579,63',
'64,952,953,508,67,932,65,66,68,30,31,72,73,958,580,215,689,961,29,28',
'27,98,97,99,100,963,965,19,967,967,660,-84,615,8,45,288,10,102,101,103',
'92,56,94,93,95,215,96,104,105,512,90,91,42,43,41,235,239,244,245,246',
'241,243,251,252,247,248,-289,228,229,-332,513,249,250,-289,40,235,-332',
'33,-564,215,58,59,-289,978,60,-332,35,232,215,238,44,234,233,979,230',
'231,242,240,236,20,237,894,894,894,89,79,82,83,-290,84,86,85,87,984',
'215,-290,976,80,88,950,253,-569,235,977,-290,62,118,81,-569,-569,-569',
'235,975,-569,-569,-569,235,-569,-289,113,114,115,116,117,235,-289,-569',
'-569,-569,-569,-564,235,249,250,-289,527,528,-569,-569,632,-569,-569',
'-569,-569,-569,629,-564,-483,232,-563,238,677,234,233,-483,230,231,106',
'486,236,260,237,619,-483,618,215,950,-569,-569,-569,-569,-569,-569,-569',
'-569,-569,-569,-569,-569,-569,-569,614,-290,-569,-569,-569,-484,1003',
'-569,-290,1004,-569,1005,-484,-569,-569,967,-569,-290,-569,967,-569',
'-484,-569,-569,967,-569,-569,-569,-569,-569,215,-569,-569,-569,702,-263',
'542,541,540,929,543,542,541,540,612,543,609,-569,574,894,-569,-569,-569',
'-569,950,-569,573,-569,286,69,70,71,9,57,385,967,,63,64,,,698,67,,65',
'66,68,30,31,72,73,113,114,115,116,117,29,28,27,98,97,99,100,,702,19',
'542,541,540,,543,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,235,-586,-586,-586,-586,241,243,,698,-586,-586,,,,,',
'249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,242,240',
'236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,5,69,70,71,9,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,702',
'19,542,541,540,,543,8,45,7,10,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,235,239,244,245,246,241,243,,698,247,248,,,,,,249,250',
',40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,242,240,236,20',
'237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,929,19,542',
'541,540,,543,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105,,90',
'91,42,43,41,235,239,244,245,246,241,243,251,252,247,248,,-586,-586,',
',249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,242',
'240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9',
'57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100',
',,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
'42,43,41,235,-586,-586,-586,-586,241,243,,,-586,-586,,,,,,249,250,,40',
',,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,242,240,236,20,237',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45',
'288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,-586',
'-586,-586,-586,241,243,,,-586,-586,,,,,,249,250,,40,,,33,,,58,59,,,60',
',35,232,,238,44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,-586,-586,-586,-586',
'241,243,,,-586,-586,,,,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238',
'44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249,250,,40,,,33',
',,58,59,,,60,,35,232,,238,44,234,233,,230,231,,,236,20,237,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,',
',,249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,,,236',
'20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,',
',,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
'235,239,244,245,246,241,243,251,,247,248,,,,,,249,250,,40,,,290,,,58',
'59,,,60,,35,232,,238,44,234,233,,230,231,242,240,236,20,237,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,-586,-586,-586',
'-586,241,243,,,-586,-586,,,,,,249,250,,40,,,33,,,58,59,,,60,,35,232',
',238,44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251',
'252,247,248,,-586,-586,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238',
'44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,235,-586,-586,-586,-586,241,243,,',
'-586,-586,,,,,,249,250,,40,,,290,,,58,59,,,60,,35,232,,238,44,234,233',
',230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286',
'69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249,250,,40,,,33,,,58,59,,,60',
',35,232,,,44,234,233,,230,231,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,',
',,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249,250,,40,,,33',
',,58,59,,,60,,35,232,,238,44,234,233,,230,231,,,,20,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,,,,,,,,,,,,,,,,249',
'250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231,,,,20,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,',
',,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45',
'288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,',
',,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,40,,,290,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92',
'56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,',
',58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95',
',96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60',
',35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70',
'71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97',
'99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45',
'288,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,',
',,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,5,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,7,10,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59',
',,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,286',
'69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44',
',,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,5,69,70,71,9,57,62',
',81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,8,45,7,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288',
'10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,',
',,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,286,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,630,8,45,288,10,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251',
'252,247,248,,228,229,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44',
'234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,253,-280,,,,62,,81,-280,-280,-280,,,-280,-280,-280,,-280,,,,',
',,,,,-280,-280,-280,,,,,,,,-280,-280,,-280,-280,-280,-280,-280,,,,,',
',,,,,,,,,,,,,,,,,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280',
'-280,-280,-280,,,-280,-280,-280,,,-280,,,-280,,,-280,-280,,-280,,-280',
',-280,,-280,-280,,-280,-280,-280,-280,-280,,-280,,-280,,,,,,,,,,,,,',
'-280,,,-280,-280,-280,-280,,-280,,-280,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,,10',
'102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,',
',,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306',
'72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92',
'56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,278,,,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73',
',,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94',
'93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,',
',,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,',
',,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92',
'56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,235,239,244,245,246,241,243,251,252,247,248,,228,229',
',,249,250,,220,,,226,,,58,59,,,60,,,232,,238,44,234,233,,230,231,242',
'240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,110,253,,,,109',
'62,,81,69,70,71,,57,,,,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301',
'302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,345,,,33,,,58,59,,,60,,35,,',
',,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,',
'81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,303,,,102,101,103,350,56,94,93,351,,96,104,105,,90,91,,',
'309,,,,,,,,,,,,,,,,,357,,,352,,,226,,,58,59,,,60,,,,,,,,,,,,,,,,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303',
',,102,101,103,350,56,94,93,351,,96,104,105,,90,91,,,309,,,,,,,,,,,,',
',,,,,,,352,,,226,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,19,,,,,,8,45,7,10,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,235,239,244,245,246,241,243,251,252,247,248,,228',
'229,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238,44,234,233,,230,231',
'242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,253,,,,385',
'62,,81,69,70,71,,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,',
',,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,',
',,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92',
'56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,9,57,62,,81',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,',
',,,8,45,,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,',
',,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220',
',,226,,,58,59,,,60,,401,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98',
'97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,278,,276',
',44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71',
',57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97',
'99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
'42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,401,,,,44,,,,,,',
',,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63',
'64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227',
',,,,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,,,309,,,,',
',,,,,,,,,,,,,,,299,,,295,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92',
'56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,401,',
',,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57',
'62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100',
',,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95',
',96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60',
',,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71',
',57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99',
'100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42',
'43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,215,69,70,71,,57,62,,81,63,64',
',,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,',
',,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,',
',,,,,,,,,,,,,299,,,295,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,,,309,235,239,244,245,246,241,243,251,252,247,248,,228,229,,',
'249,250,,299,,,226,,,58,59,,,60,,,232,,238,,234,233,,230,231,242,240',
'236,,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,253,,311,,,62,,81,69',
'70,71,,57,,,,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98',
'97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,',
'90,91,,,309,,,,,,,,,,,,,,,,,,,,299,,,295,,,58,59,,,60,,294,,,,,,,,,',
',,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,',
',,,,,,,,,,,220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,',
',220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,',
'29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280',
'96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60',
',278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,',
'227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,',
',,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,',
',,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,',
',,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220',
',,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226',
',,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,215,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,',
',,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95',
',96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60',
',,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71',
',57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99',
'100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42',
'43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,',
',,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301',
'302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,',
',,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,',
'57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97',
'99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
'42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,',
',,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,',
',,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,',
',220,,,226,,,58,59,,,60,,654,,276,,44,,,281,,,,,,225,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69',
'70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308',
'98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105',
',90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,752,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,',
',,,,,871,,,226,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,',
'29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280',
'96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60',
',278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,278,',
',,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57',
'62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99',
'100,,,227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
',,309,235,239,244,245,246,241,243,251,252,247,248,,228,229,,,249,250',
',299,,,226,,,58,59,,,60,,,232,,238,,234,233,,230,231,242,240,236,,237',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,253,,499,,,62,,81,69,70,71,,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,',
',,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59',
',,60,,654,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
'69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42',
'43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,281,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,',
',,45,,,102,101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,',
',,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,654,,,,44,,,281,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73',
',,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94',
'93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
'69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303',
',,102,101,103,92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,',
',,,,,299,,,295,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93',
'95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,299,,,295,,,58,59,,,60',
',,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57',
'62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99',
'100,,,227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
',,309,,,,,,,,,,,,,,,,,,,,299,,,295,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,',
',,,,,220,,,226,,,58,59,,,60,,,,276,,44,,,281,,,,,,225,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,69,70,71,9,57,62,,81,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,8,45,288,10,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243',
'251,252,247,248,,228,229,,,249,250,,40,,,33,,,58,59,,,60,,35,232,,238',
'44,234,233,,230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,253,,,,385,62,,81,69,70,71,,57,,,,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,',
',,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93',
'95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58',
'59,,,60,,,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301',
'302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,517,,58,59,,,60',
',,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71',
',57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97',
'99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91',
'42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,',
',102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,',
',,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306',
'72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92',
'56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,654,,276,,44,,,281,,,,,,225,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72',
'73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56',
'94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,',
'58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302',
'308,98,97,99,100,,,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104',
'105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44',
',,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62',
',81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301,302,308,98,97,99,100',
',,227,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102',
'101,103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,',
',,,,,220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68',
'305,306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,303,,,102,101',
'103,92,56,94,93,95,,96,104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,871,',
',226,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305,306,72,73,,,,,,301',
'302,308,98,97,99,100,,,227,,,,,,,303,,,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,,,309,,,,,,,,,,,,,,,,,,,,940,,,226,,,58,59,,,60,,,,,',
',,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,9,57,62,',
'81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19',
',,,,,8,45,7,10,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41',
',,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,227,,,,,,,45,,,102,101',
'103,92,56,94,93,95,280,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,',
',220,,,226,,,58,59,,,60,,278,,276,,44,,,281,,,,,,225,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,305',
'306,72,73,,,,,,301,302,308,98,97,99,100,,,227,,,,,,,45,,,102,101,103',
'92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,',
'226,,,58,59,,,60,,,,,,44,,,,,,,,,225,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,',
'29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96',
'104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57',
'62,,81,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100',
',,19,,,,,,,45,,,102,101,103,92,56,94,93,95,,96,104,105,,90,91,42,43',
'41,,,,,,,,,,,,,,,,,,,,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102',
'101,103,92,56,94,93,95,,96,104,105,,90,91,42,43,41,,,,,,,,,,,,,,,,,',
',,220,,,226,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,69,70,71,,57,62,,81,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,98,97,99,100,,,19,,,,,,,45,,,102,101,103,92,56,94,93,95',
',96,104,105,,90,91,42,43,41,235,239,244,245,246,241,243,251,252,247',
'248,,228,229,,,249,250,,220,,,226,,,58,59,,,60,,,232,,238,44,234,233',
',230,231,242,240,236,20,237,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,253',
'-246,,,,62,,81,-246,-246,-246,,,-246,-246,-246,784,-246,542,541,540',
'785,543,,,,-246,-246,,,,551,,,,,,-246,-246,,-246,-246,-246,-246,-246',
',,,,,,,,547,,,,,,,,,556,555,559,558,,,,552,,,,,,,,,-246,,-296,,,,,-246',
',-296,-296,-296,260,-246,-296,-296,-296,215,-296,,,,,,,,,,-296,-296',
',,,,,-246,-246,,-296,-296,,-296,-296,-296,-296,-296,,,,,-246,,,-246',
',,,,-246,,,,,,,,,,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296',
'-296,-296,-296,-296,,,-296,-296,-296,,,-296,,269,-296,,,-296,-296,,-296',
',-296,,-296,,-296,-296,,-296,-296,-296,-296,-296,,-296,-246,-296,,,',
',,-246,-246,-246,,,-246,-246,-246,-296,-246,,-296,-296,,-296,,-296,',
'-246,-246,-246,,,,,,,,,-246,-246,,-246,-246,-246,-246,-246,,,,,,,,,',
',,,,,,,,,,,,,-246,-246,-246,-246,-246,-246,-246,-246,-246,-246,-246',
'-246,-246,-246,,,-246,-246,-246,,,-246,,260,-246,,,-246,-246,,-246,',
'-246,,-246,,-246,-246,,-246,-246,-246,-246,-246,,-246,-246,-246,,,,',
',,,,,,,,,-246,,-408,-246,-246,,-246,,-246,-408,-408,-408,,,-408,-408',
'-408,,-408,,,,,,,,,-408,-408,-408,,,,,,,,,-408,-408,,-408,-408,-408',
'-408,-408,,,,,,,,,,,,,,,,,,,,,,,-408,-408,-408,-408,-408,-408,-408,-408',
'-408,-408,-408,-408,-408,-408,,,-408,-408,-408,,,-408,,260,-408,,,-408',
'-408,,-408,,-408,,-408,,-408,-408,,-408,-408,-408,-408,-408,,-408,-408',
'-408,,,,,,,,,,,,,,-408,,,-408,-408,,-408,,-408,170,181,171,194,167,187',
'177,176,197,198,192,175,174,169,195,199,200,179,168,182,186,188,180',
'173,,,,189,196,191,190,183,193,178,166,185,184,,,,,,165,172,163,164',
'160,161,162,121,123,,,122,,,,,,,,154,155,,151,133,134,135,142,139,141',
',,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148,147,,132,153,150,149,158',
'145,146,140,138,130,152,131,,,159,89,,,,,,,,,,,,,,88,170,181,171,194',
'167,187,177,176,197,198,192,175,174,169,195,199,200,179,168,182,186',
'188,180,173,,,,189,196,191,190,183,193,178,166,185,184,,,,,,165,172',
'163,164,160,161,162,121,123,,,122,,,,,,,,154,155,,151,133,134,135,142',
'139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148,147,,132,153,150',
'149,158,145,146,140,138,130,152,131,,,159,89,,,,,,,,,,,,,,88,170,181',
'171,194,167,187,177,176,197,198,192,175,174,169,195,199,200,179,168',
'182,186,188,180,173,,,,189,196,191,190,183,193,178,166,185,184,,,,,',
'165,172,163,164,160,161,162,121,123,120,,122,,,,,,,,154,155,,151,133',
'134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148,147',
',132,153,150,149,158,145,146,140,138,130,152,131,,,159,89,,,,,,,,,,',
',,,88,170,181,171,194,167,187,177,176,197,198,192,175,174,169,195,199',
'200,179,168,182,186,188,180,173,,,,189,196,191,190,183,193,178,166,185',
'184,,,,,,165,172,163,164,160,161,162,121,123,,,122,,,,,,,,154,155,,151',
'133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148',
'147,,132,153,150,149,158,145,146,140,138,130,152,131,,,159,89,,,,,,',
',,,,,,,88,170,181,171,194,167,187,177,176,197,198,192,175,174,169,195',
'199,200,179,168,182,186,188,180,173,,,,189,196,191,368,367,369,366,166',
'185,184,,,,,,165,172,163,164,363,364,365,361,123,94,93,362,,96,,,,,',
'154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,',
',,,373,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131',
',,159,170,181,171,194,167,187,177,176,197,198,192,175,174,169,195,199',
'200,179,168,182,186,188,180,173,,,,189,196,191,190,183,193,178,166,185',
'184,,,,,,165,172,163,164,160,161,162,121,123,,,122,,,,,,,,154,155,,151',
'133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148',
'147,,132,153,150,149,158,145,146,140,138,130,152,131,,,159,235,239,244',
'245,246,241,243,251,252,247,248,,228,229,,,249,250,,,784,,542,541,540',
'785,543,,,,,,232,,238,551,234,233,,230,231,242,240,236,,237,235,239',
'244,245,246,241,243,251,252,247,248,547,228,229,,,249,250,,253,556,555',
'559,558,,,,552,,,,,232,,238,,234,233,,230,231,242,240,236,,237,235,239',
'244,245,246,241,243,251,252,247,248,,228,229,,,249,250,,253,702,,542',
'541,540,549,543,,,,,,232,,238,551,234,233,,230,231,242,240,236,,237',
'235,239,244,245,246,241,243,251,252,247,248,547,228,229,,,249,250,,253',
',,559,558,,,,552,,,,,232,,238,,234,233,,230,231,242,240,236,,237,235',
'239,244,245,246,241,243,251,252,247,248,,228,229,,,249,250,,253,545',
',542,541,540,549,543,,,,,,232,,238,551,234,233,,230,231,242,240,236',
',237,235,239,244,245,246,241,243,251,252,247,248,547,228,229,,,249,250',
',253,556,555,559,558,,,,552,,,,,232,,238,,234,233,,230,231,242,240,236',
',237,235,239,244,245,246,241,243,251,252,247,248,,228,229,,,249,250',
'215,253,545,,542,541,540,549,543,,,,,,232,,238,551,234,233,,230,231',
'242,240,236,,237,235,239,244,245,246,241,243,251,252,247,248,547,228',
'229,,,249,250,,253,556,555,559,558,,,,552,,,,,232,,238,,234,233,,230',
'231,242,240,236,,237,,,,,,471,413,,,472,,,,,,,,154,155,253,151,133,134',
'135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147',
',132,153,150,149,158,145,146,140,138,130,152,131,721,420,159,,722,,',
',,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144',
',,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152',
'131,724,420,159,,725,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136',
'137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158',
'145,146,140,138,130,152,131,635,420,159,,636,,,,,,,,154,155,,151,133',
'134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148',
'147,,132,153,150,149,158,145,146,140,138,130,152,131,996,413,159,,997',
',,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143',
'144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130',
'152,131,635,420,159,,636,,,,,,,,154,155,,151,133,134,135,142,139,141',
',,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149',
'158,145,146,140,138,130,152,131,633,413,159,,634,,,,,,,,154,155,,151',
'133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,',
',148,147,,132,153,150,149,158,145,146,140,138,130,152,131,998,420,159',
',999,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157',
'143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138',
'130,152,131,471,413,159,,472,,,,,,,,154,155,,151,133,134,135,142,139',
'141,,,136,137,,,,156,157,143,144,,,,,,,,,,,,,,148,147,,132,153,150,149',
'158,145,146,140,138,130,152,131,719,413,159,,720,,,,,,,,154,155,,151',
'133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,',
',148,147,,132,153,150,149,158,145,146,140,138,130,152,131,416,420,159',
',415,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156,157',
'143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140,138',
'130,152,131,667,420,159,,668,,,,,,,,154,155,,151,133,134,135,142,139',
'141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150',
'149,158,145,146,140,138,130,152,131,409,413,159,,410,,,,,,,,154,155',
',151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260,',
',,,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131,664,413',
'159,,665,,,,,,,,154,155,,151,133,134,135,142,139,141,,,136,137,,,,156',
'157,143,144,,,,,,260,,,,,,,,148,147,,132,153,150,149,158,145,146,140',
'138,130,152,131,973,420,159,,972,,,,,,,,154,155,,151,133,134,135,142',
'139,141,,,136,137,,,,156,157,143,144,,,,,,260,,,,,,,,148,147,,132,153',
'150,149,158,145,146,140,138,130,152,131,633,413,159,,634,,,,,,,,154',
'155,,151,133,134,135,142,139,141,,,136,137,,,,156,157,143,144,,,,,,260',
',,,,,,,148,147,,132,153,150,149,158,145,146,140,138,130,152,131,,784',
'159,542,541,540,785,543,702,,542,541,540,785,543,,551,,,,,,545,551,542',
'541,540,549,543,,,,,,,,,551,547,,,,,,,547,,556,555,559,558,,,,552,,559',
'558,,547,,552,,,,,,,556,555,559,558,,,545,552,542,541,540,549,543,702',
',542,541,540,549,543,,551,,,,,,545,551,542,541,540,549,543,702,,542',
'541,540,785,543,,551,547,734,,,,,551,547,,556,555,559,558,,,,552,,559',
'558,,547,531,552,,,,,547,,556,555,559,558,,,,552,,559,558,,,702,552',
'542,541,540,549,543,702,,542,541,540,549,543,702,551,542,541,540,549',
'543,,551,,,,,,545,551,542,541,540,549,543,,,547,,,,,,551,547,,,,559',
'558,,547,,552,,559,558,,,,552,,559,558,,547,,552,,,,,,,556,555,559,558',
',,702,552,542,541,540,785,543,702,,542,541,540,785,543,,551,,,,,,545',
'551,542,541,540,549,543,,,,,,,,,551,547,,,,,,,547,,,,559,558,,,,552',
',559,558,,547,734,552,,,,,,,556,555,559,558,,,784,552,542,541,540,785',
'543,,545,,542,541,540,549,543,551,,,,,,,,551,,702,,542,541,540,785,543',
',,,,,547,,,551,,,,,547,556,555,559,558,,,,552,556,555,559,558,,,,552',
'547,,,,,,,,,,,559,558,,,,552' ]
        racc_action_table = arr = ::Array.new(24921, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'415,645,997,343,218,839,219,415,415,415,589,589,566,415,415,380,415',
'19,646,342,722,381,717,659,58,477,356,221,927,659,377,927,573,719,340',
'530,415,415,998,415,415,415,415,415,996,335,1010,880,336,371,840,986',
'986,646,675,675,371,218,19,219,477,700,469,346,58,720,415,415,415,415',
'415,415,415,415,415,415,415,415,415,415,221,380,415,415,415,722,415',
'381,645,685,415,903,665,415,377,377,377,469,415,908,415,908,415,415',
'589,415,415,415,415,415,92,415,343,415,839,998,566,92,92,92,997,566',
'92,92,92,997,92,415,342,722,415,415,356,415,92,415,92,92,92,415,717',
'573,719,717,530,717,92,92,675,92,92,92,92,92,840,356,998,565,665,840',
'356,998,996,335,1010,880,336,996,335,1010,880,336,346,664,720,703,92',
'92,92,92,92,92,92,92,92,92,92,92,92,92,721,61,92,92,92,367,92,92,665',
'478,92,665,367,92,92,304,92,665,92,903,92,26,92,92,903,92,92,92,92,92',
'313,92,899,92,899,899,899,120,899,602,585,585,120,120,478,201,634,92',
'724,664,92,92,92,92,95,92,352,92,409,92,352,95,95,95,339,721,95,95,95',
'339,95,565,433,433,708,708,565,313,95,304,95,95,95,313,681,26,710,681',
'61,664,95,95,664,95,95,95,95,95,664,634,724,843,304,602,602,409,843',
'724,26,721,715,409,724,602,899,633,724,410,520,520,95,95,95,95,95,95',
'95,95,95,95,95,95,95,95,585,724,95,95,95,585,95,95,366,600,95,679,350',
'95,95,366,95,718,95,15,95,379,95,95,772,95,95,95,95,95,410,95,433,95',
'633,701,410,701,701,701,378,701,676,329,376,39,329,95,351,382,95,95',
'95,95,416,95,674,95,439,95,584,416,416,416,350,584,15,416,416,673,416',
'350,15,600,600,325,350,772,325,416,350,369,667,600,284,379,379,379,369',
'284,416,416,39,416,416,416,416,416,39,350,351,670,38,669,378,378,378',
'351,376,376,376,439,351,382,382,382,351,701,689,689,416,416,416,416',
'416,416,416,416,416,416,416,416,416,416,667,351,416,416,416,326,416',
'667,326,666,416,663,667,416,375,38,667,727,416,661,416,38,416,416,798',
'416,416,416,416,416,636,416,416,416,616,667,658,636,636,636,3,365,636',
'636,636,3,636,416,365,732,416,416,446,416,464,416,636,636,636,416,735',
'576,653,77,651,735,636,636,576,636,636,636,636,636,220,77,798,576,375',
'375,375,616,644,798,446,77,464,616,446,446,464,464,798,464,464,639,636',
'636,636,636,636,636,636,636,636,636,636,636,636,636,751,798,636,636',
'636,45,636,636,298,637,636,222,445,636,636,298,636,756,636,223,636,227',
'636,636,298,636,636,636,636,636,686,636,900,636,900,900,900,627,900',
'547,686,547,547,547,445,547,259,636,445,445,636,636,636,636,635,636',
'622,636,40,636,273,635,635,635,364,857,635,635,635,900,635,364,274,686',
'686,857,547,363,686,635,635,635,635,37,363,547,309,309,17,17,635,635',
'362,635,635,635,635,635,950,362,950,950,950,14,950,334,334,277,857,857',
'14,617,698,857,698,698,698,774,698,14,635,635,635,635,635,635,635,635',
'635,635,635,635,635,635,775,950,635,635,635,931,635,635,41,41,635,777',
'931,635,635,698,635,778,635,779,635,931,635,635,698,635,635,635,635',
'635,300,635,635,635,781,782,24,300,826,783,826,826,826,24,826,784,300',
'635,288,361,635,635,635,635,788,635,361,635,613,635,791,791,791,791',
'791,791,368,792,793,791,791,797,607,368,791,826,791,791,791,791,791',
'791,791,801,826,605,804,805,791,791,791,791,791,791,791,593,593,791',
'808,593,593,593,428,791,791,791,791,791,791,791,791,791,791,791,791',
'810,791,791,791,811,791,791,791,791,791,428,428,428,428,428,428,428',
'428,428,428,428,217,428,428,344,812,428,428,217,791,813,344,791,817',
'818,791,791,217,820,791,344,791,428,821,428,791,428,428,823,428,428',
'428,428,428,791,428,825,597,827,791,791,791,791,937,791,791,791,791',
'289,830,937,316,791,791,22,428,420,428,316,937,791,833,791,420,420,420',
'291,316,420,420,420,458,420,999,287,287,287,287,287,106,999,420,420',
'420,420,999,292,458,458,999,16,293,420,420,568,420,420,420,420,420,842',
'567,941,458,562,458,846,458,458,941,458,458,847,850,458,851,458,560',
'941,557,13,553,420,420,420,420,420,420,420,420,420,420,420,420,420,420',
'545,354,420,420,420,465,538,420,354,537,420,536,867,420,420,534,420',
'354,420,12,420,533,420,420,871,420,420,420,420,420,873,420,420,420,10',
'299,521,465,519,518,302,465,465,303,465,465,308,420,509,297,420,420',
'420,420,901,420,297,420,877,877,877,877,877,877,505,297,870,877,877',
'905,906,310,877,870,877,877,877,877,877,877,877,912,870,500,917,920',
'877,877,877,877,877,877,877,921,922,877,923,925,498,495,404,877,877',
'877,877,877,877,877,877,877,877,877,877,494,877,877,877,314,877,877',
'877,877,877,404,404,404,404,404,404,404,404,404,404,404,668,404,404',
'46,315,404,404,668,877,318,46,877,668,323,877,877,668,940,877,46,877',
'404,479,404,877,404,404,943,404,404,404,404,404,877,404,944,945,946',
'877,877,877,877,504,877,877,877,877,947,475,504,939,877,877,949,404',
'421,450,939,504,877,7,877,421,421,421,449,939,421,421,421,457,421,725',
'6,6,6,6,6,448,725,421,421,421,421,725,447,457,457,725,327,328,421,421',
'435,421,421,421,421,421,425,972,296,457,973,457,974,457,457,296,457',
'457,1,330,457,417,457,408,296,407,405,985,421,421,421,421,421,421,421',
'421,421,421,421,421,421,421,402,978,421,421,421,938,987,421,978,988',
'421,989,938,421,421,990,421,978,421,991,421,938,421,421,992,421,421',
'421,421,421,995,421,421,421,828,399,828,828,828,971,828,971,971,971',
'397,971,391,421,347,1000,421,421,421,421,1001,421,345,421,321,321,321',
'321,321,321,341,1012,,321,321,,,828,321,,321,321,321,321,321,321,321',
'492,492,492,492,492,321,321,321,321,321,321,321,,948,321,948,948,948',
',948,321,321,321,321,321,321,321,321,321,321,321,321,,321,321,321,,321',
'321,321,321,321,461,461,461,461,461,461,461,,948,461,461,,,,,,461,461',
',321,,,321,,,321,321,,,321,,321,461,,461,321,461,461,,461,461,461,461',
'461,321,461,,,,321,321,321,321,,321,321,321,321,,,,,321,321,493,493',
'493,493,493,493,321,,321,493,493,,,,493,,493,493,493,493,493,493,493',
',,,,,493,493,493,493,493,493,493,,984,493,984,984,984,,984,493,493,493',
'493,493,493,493,493,493,493,493,493,,493,493,493,,493,493,493,493,493',
'466,466,466,466,466,466,466,,984,466,466,,,,,,466,466,,493,,,493,,,493',
'493,,,493,,493,466,,466,493,466,466,,466,466,466,466,466,493,466,,,',
'493,493,493,493,,493,493,493,493,,,,,493,493,844,844,844,844,844,844',
'493,,493,844,844,,,,844,,844,844,844,844,844,844,844,,,,,,844,844,844',
'844,844,844,844,,868,844,868,868,868,,868,844,844,844,844,844,844,844',
'844,844,844,844,844,,844,844,844,,844,844,844,844,844,444,444,444,444',
'444,444,444,444,444,444,444,,444,444,,,444,444,,844,,,844,,,844,844',
',,844,,844,444,,444,844,444,444,,444,444,444,444,444,844,444,,,,844',
'844,844,844,,844,844,844,844,,,,,844,844,838,838,838,838,838,838,844',
',844,838,838,,,,838,,838,838,838,838,838,838,838,,,,,,838,838,838,838',
'838,838,838,,,838,,,,,,838,838,838,838,838,838,838,838,838,838,838,838',
',838,838,838,,838,838,838,838,838,462,462,462,462,462,462,462,,,462',
'462,,,,,,462,462,,838,,,838,,,838,838,,,838,,838,462,,462,838,462,462',
',462,462,462,462,462,838,462,,,,838,838,838,838,,838,838,838,838,,,',
',838,838,561,561,561,561,561,561,838,,838,561,561,,,,561,,561,561,561',
'561,561,561,561,,,,,,561,561,561,561,561,561,561,,,561,,,,,,561,561',
'561,561,561,561,561,561,561,561,561,561,,561,561,561,,561,561,561,561',
'561,463,463,463,463,463,463,463,,,463,463,,,,,,463,463,,561,,,561,,',
'561,561,,,561,,561,463,,463,561,463,463,,463,463,463,463,463,561,463',
',,,561,561,561,561,,561,561,561,561,,,,,561,561,835,835,835,835,835',
'835,561,,561,835,835,,,,835,,835,835,835,835,835,835,835,,,,,,835,835',
'835,835,835,835,835,,,835,,,,,,835,835,835,835,835,835,835,835,835,835',
'835,835,,835,835,835,,835,835,835,835,835,460,460,460,460,460,460,460',
',,460,460,,,,,,460,460,,835,,,835,,,835,835,,,835,,835,460,,460,835',
'460,460,,460,460,460,460,460,835,460,,,,835,835,835,835,,835,835,835',
'835,,,,,835,835,564,564,564,564,564,564,835,,835,564,564,,,,564,,564',
'564,564,564,564,564,564,,,,,,564,564,564,564,564,564,564,,,564,,,,,',
'564,564,564,564,564,564,564,564,564,564,564,564,,564,564,564,,564,564',
'564,564,564,456,,,,,,,,,,,,,,,,456,456,,564,,,564,,,564,564,,,564,,564',
'456,,456,564,456,456,,456,456,,,456,564,456,,,,564,564,564,564,,564',
'564,564,564,,,,,564,564,834,834,834,834,834,834,564,,564,834,834,,,',
'834,,834,834,834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,',
'834,,,,,,834,834,834,834,834,834,834,834,834,834,834,834,,834,834,834',
',834,834,834,834,834,455,,,,,,,,,,,,,,,,455,455,,834,,,834,,,834,834',
',,834,,834,455,,455,834,455,455,,455,455,,,455,834,455,,,,834,834,834',
'834,,834,834,834,834,,,,,834,834,295,295,295,295,295,295,834,,834,295',
'295,,,,295,,295,295,295,295,295,295,295,,,,,,295,295,295,295,295,295',
'295,,,295,,,,,,295,295,295,295,295,295,295,295,295,295,295,295,,295',
'295,295,,295,295,295,295,295,467,467,467,467,467,467,467,467,,467,467',
',,,,,467,467,,295,,,295,,,295,295,,,295,,295,467,,467,295,467,467,,467',
'467,467,467,467,295,467,,,,295,295,295,295,,295,295,295,295,,,,,295',
'295,803,803,803,803,803,803,295,,295,803,803,,,,803,,803,803,803,803',
'803,803,803,,,,,,803,803,803,803,803,803,803,,,803,,,,,,803,803,803',
'803,803,803,803,803,803,803,803,803,,803,803,803,,803,803,803,803,803',
'454,454,454,454,454,454,454,,,454,454,,,,,,454,454,,803,,,803,,,803',
'803,,,803,,803,454,,454,803,454,454,,454,454,454,454,454,803,454,,,',
'803,803,803,803,,803,803,803,803,,,,,803,803,936,936,936,936,936,936',
'803,,803,936,936,,,,936,,936,936,936,936,936,936,936,,,,,,936,936,936',
'936,936,936,936,,,936,,,,,,936,936,936,936,936,936,936,936,936,936,936',
'936,,936,936,936,,936,936,936,936,936,443,443,443,443,443,443,443,443',
'443,443,443,,443,443,,,443,443,,936,,,936,,,936,936,,,936,,936,443,',
'443,936,443,443,,443,443,443,443,443,936,443,,,,936,936,936,936,,936',
'936,936,936,,,,,936,936,290,290,290,290,290,290,936,,936,290,290,,,',
'290,,290,290,290,290,290,290,290,,,,,,290,290,290,290,290,290,290,,',
'290,,,,,,290,290,290,290,290,290,290,290,290,290,290,290,,290,290,290',
',290,290,290,290,290,459,459,459,459,459,459,459,,,459,459,,,,,,459',
'459,,290,,,290,,,290,290,,,290,,290,459,,459,290,459,459,,459,459,459',
'459,459,290,459,,,,290,290,290,290,,290,290,290,290,,,,,290,290,586',
'586,586,586,586,586,290,,290,586,586,,,,586,,586,586,586,586,586,586',
'586,,,,,,586,586,586,586,586,586,586,,,586,,,,,,586,586,586,586,586',
'586,586,586,586,586,586,586,,586,586,586,,586,586,586,586,586,453,,',
',,,,,,,,,,,,,453,453,,586,,,586,,,586,586,,,586,,586,453,,,586,453,453',
',453,453,,,,586,,,,,586,586,586,586,,586,586,586,586,,,,,586,586,226',
'226,226,226,226,226,586,,586,226,226,,,,226,,226,226,226,226,226,226',
'226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,226,226,226,226,226',
'226,226,226,226,226,226,226,,226,226,226,,226,226,226,226,226,452,,',
',,,,,,,,,,,,,452,452,,226,,,226,,,226,226,,,226,,226,452,,452,226,452',
'452,,452,452,,,,226,,,,,226,226,226,226,,226,226,226,226,,,,,226,226',
'951,951,951,951,951,951,226,,226,951,951,,,,951,,951,951,951,951,951',
'951,951,,,,,,951,951,951,951,951,951,951,,,951,,,,,,951,951,951,951',
'951,951,951,951,951,951,951,951,,951,951,951,,951,951,951,951,951,451',
',,,,,,,,,,,,,,,451,451,,951,,,951,,,951,951,,,951,,951,451,,451,951',
'451,451,,451,451,,,,951,,,,,951,951,951,951,,951,951,951,951,,,,,951',
'951,957,957,957,957,957,957,951,,951,957,957,,,,957,,957,957,957,957',
'957,957,957,,,,,,957,957,957,957,957,957,957,,,957,,,,,,957,957,957',
'957,957,957,957,957,957,957,957,957,,957,957,957,,957,957,957,957,957',
',,,,,,,,,,,,,,,,,,,957,,,957,,,957,957,,,957,,957,,,,957,,,,,,,,,957',
',,,,957,957,957,957,,957,957,957,957,,,,,957,957,33,33,33,33,33,33,957',
',957,33,33,,,,33,,33,33,33,33,33,33,33,,,,,,33,33,33,33,33,33,33,,,33',
',,,,,33,33,33,33,33,33,33,33,33,33,33,33,,33,33,33,,33,33,33,33,33,',
',,,,,,,,,,,,,,,,,,33,,,33,,,33,33,,,33,,33,,,,33,,,,,,,,,33,,,,,33,33',
'33,33,,33,33,33,33,,,,,33,33,643,643,643,643,643,643,33,,33,643,643',
',,,643,,643,643,643,643,643,643,643,,,,,,643,643,643,643,643,643,643',
',,643,,,,,,643,643,643,643,643,643,643,643,643,643,643,643,,643,643',
'643,,643,643,643,643,643,,,,,,,,,,,,,,,,,,,,643,,,643,,,643,643,,,643',
',643,,,,643,,,,,,,,,643,,,,,643,643,643,643,,643,643,643,643,,,,,643',
'643,648,648,648,648,648,648,643,,643,648,648,,,,648,,648,648,648,648',
'648,648,648,,,,,,648,648,648,648,648,648,648,,,648,,,,,,648,648,648',
'648,648,648,648,648,648,648,648,648,,648,648,648,,648,648,648,648,648',
',,,,,,,,,,,,,,,,,,,648,,,648,,,648,648,,,648,,648,,,,648,,,,,,,,,648',
',,,,648,648,648,648,,648,648,648,648,,,,,648,648,649,649,649,649,649',
'649,648,,648,649,649,,,,649,,649,649,649,649,649,649,649,,,,,,649,649',
'649,649,649,649,649,,,649,,,,,,649,649,649,649,649,649,649,649,649,649',
'649,649,,649,649,649,,649,649,649,649,649,,,,,,,,,,,,,,,,,,,,649,,,649',
',,649,649,,,649,,649,,,,649,,,,,,,,,649,,,,,649,649,649,649,,649,649',
'649,649,,,,,649,649,203,203,203,203,203,203,649,,649,203,203,,,,203',
',203,203,203,203,203,203,203,,,,,,203,203,203,203,203,203,203,,,203',
',,,,,203,203,203,203,203,203,203,203,203,203,203,203,,203,203,203,,203',
'203,203,203,203,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,203,,,203,,203,,',
',203,,,,,,,,,203,,,,,203,203,203,203,,203,203,203,203,,,,,203,203,683',
'683,683,683,683,683,203,,203,683,683,,,,683,,683,683,683,683,683,683',
'683,,,,,,683,683,683,683,683,683,683,,,683,,,,,,683,683,683,683,683',
'683,683,683,683,683,683,683,,683,683,683,,683,683,683,683,683,,,,,,',
',,,,,,,,,,,,,683,,,683,,,683,683,,,683,,683,,,,683,,,,,,,,,683,,,,,683',
'683,683,683,,683,683,683,683,,,,,683,683,684,684,684,684,684,684,683',
',683,684,684,,,,684,,684,684,684,684,684,684,684,,,,,,684,684,684,684',
'684,684,684,,,684,,,,,,684,684,684,684,684,684,684,684,684,684,684,684',
',684,684,684,,684,684,684,684,684,,,,,,,,,,,,,,,,,,,,684,,,684,,,684',
'684,,,684,,684,,,,684,,,,,,,,,684,,,,,684,684,684,684,,684,684,684,684',
',,,,684,684,118,118,118,118,118,118,684,,684,118,118,,,,118,,118,118',
'118,118,118,118,118,,,,,,118,118,118,118,118,118,118,,,118,,,,,,118',
'118,118,118,118,118,118,118,118,118,118,118,,118,118,118,,118,118,118',
'118,118,,,,,,,,,,,,,,,,,,,,118,,,118,,,118,118,,,118,,118,,,,118,,,',
',,,,,118,,,,,118,118,118,118,,118,118,118,118,,,,,118,118,959,959,959',
'959,959,959,118,,118,959,959,,,,959,,959,959,959,959,959,959,959,,,',
',,959,959,959,959,959,959,959,,,959,,,,,,959,959,959,959,959,959,959',
'959,959,959,959,959,,959,959,959,,959,959,959,959,959,,,,,,,,,,,,,,',
',,,,,959,,,959,,,959,959,,,959,,959,,,,959,,,,,,,,,959,,,,,959,959,959',
'959,,959,959,959,959,,,,,959,959,0,0,0,0,0,0,959,,959,0,0,,,,0,,0,0',
'0,0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0',
',0,0,0,0,0,,,,,,,,,,,,,,,,,,,,0,,,0,,,0,0,,,0,,0,,,,0,,,,,,,,,0,,,,',
'0,0,0,0,,0,0,0,0,,,,,0,0,728,728,728,728,728,728,0,,0,728,728,,,,728',
',728,728,728,728,728,728,728,,,,,,728,728,728,728,728,728,728,,,728',
',,,,,728,728,728,728,728,728,728,728,728,728,728,728,,728,728,728,,728',
'728,728,728,728,,,,,,,,,,,,,,,,,,,,728,,,728,,,728,728,,,728,,728,,',
',728,,,,,,,,,728,,,,,728,728,728,728,,728,728,728,728,,,,,728,728,733',
'733,733,733,733,733,728,,728,733,733,,,,733,,733,733,733,733,733,733',
'733,,,,,,733,733,733,733,733,733,733,,,733,,,,,,733,733,733,733,733',
'733,733,733,733,733,733,733,,733,733,733,,733,733,733,733,733,,,,,,',
',,,,,,,,,,,,,733,,,733,,,733,733,,,733,,733,,,,733,,,,,,,,,733,,,,,733',
'733,733,733,,733,733,733,733,,,,,733,733,743,743,743,743,743,743,733',
',733,743,743,,,,743,,743,743,743,743,743,743,743,,,,,,743,743,743,743',
'743,743,743,,,743,,,,,638,743,743,743,743,743,743,743,743,743,743,743',
'743,,743,743,743,,743,743,743,743,743,638,638,638,638,638,638,638,638',
'638,638,638,,638,638,,,638,638,,743,,,743,,,743,743,,,743,,743,638,',
'638,743,638,638,,638,638,638,638,638,743,638,,,,743,743,743,743,,743',
'743,743,743,,,,,743,743,,638,56,,,,743,,743,56,56,56,,,56,56,56,,56',
',,,,,,,,,56,56,56,,,,,,,,56,56,,56,56,56,56,56,,,,,,,,,,,,,,,,,,,,,',
',56,56,56,56,56,56,56,56,56,56,56,56,56,56,,,56,56,56,,,56,,,56,,,56',
'56,,56,,56,,56,,56,56,,56,56,56,56,56,,56,,56,,,,,,,,,,,,,,56,,,56,56',
'56,56,,56,,56,286,286,286,286,286,,,,286,286,,,,286,,286,286,286,286',
'286,286,286,,,,,,286,286,286,286,286,286,286,,,286,,,,,,286,286,,286',
'286,286,286,286,286,286,286,286,,286,286,286,,286,286,286,286,286,,',
',,,,,,,,,,,,,,,,,286,,,286,,,286,286,,,286,,286,,,,286,,,,,,,,,286,',
',,,286,286,286,286,,286,286,286,286,,,,,286,286,,59,59,59,,59,286,,286',
'59,59,,,,59,,59,59,59,59,59,59,59,,,,,,59,59,59,59,59,59,59,,,59,,,',
',,,59,,,59,59,59,59,59,59,59,59,59,59,59,59,,59,59,59,59,59,,,,,,,,',
',,,,,,,,,,,59,,,59,,,59,59,,,59,,59,,,,59,,,59,,,,,,59,,,,,59,59,59',
'59,,59,59,59,59,,,,,59,59,,60,60,60,,60,59,,59,60,60,,,,60,,60,60,60',
'60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60,,,,,,,60,,,60,60,60,60,60',
'60,60,60,60,60,60,60,,60,60,60,60,60,,,,,,,,,,,,,,,,,,,,60,,,60,,,60',
'60,,,60,,,,,,60,,,60,,,,,,60,,,,,60,60,60,60,,60,60,60,60,,,,,60,60',
',729,729,729,,729,60,,60,729,729,,,,729,,729,729,729,729,729,729,729',
',,,,,729,729,729,729,729,729,729,,,729,,,,,,,729,,,729,729,729,729,729',
'729,729,729,,729,729,729,,729,729,729,729,729,,,,,,,,,,,,,,,,,,,,729',
',,729,,,729,729,,,729,,,,,,729,,,,,,,,,729,,,,,729,729,729,729,,729',
'729,729,729,,,,,729,729,,63,63,63,,63,729,,729,63,63,,,,63,,63,63,63',
'63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63',
'63,63,63,,63,63,63,,63,63,63,63,63,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,63',
',,63,,,,,,63,,,,,,,,,63,,,,,63,63,63,63,,63,63,63,63,,,,,63,63,,64,64',
'64,,64,63,,63,64,64,,,,64,,64,64,64,64,64,64,64,,,,,,64,64,64,64,64',
'64,64,,,64,,,,,,,64,,,64,64,64,64,64,64,64,64,,64,64,64,,64,64,64,64',
'64,,,,,,,,,,,,,,,,,,,,64,,,64,,,64,64,,,64,,,,,,64,,,,,,,,,64,,,,,64',
'64,64,64,,64,64,64,64,,,,,64,64,,67,67,67,,67,64,,64,67,67,,,,67,,67',
'67,67,67,67,67,67,,,,,,67,67,67,67,67,67,67,,,67,,,,,,,67,,,67,67,67',
'67,67,67,67,67,,67,67,67,,67,67,67,67,67,760,760,760,760,760,760,760',
'760,760,760,760,,760,760,,,760,760,,67,,,67,,,67,67,,,67,,,760,,760',
'67,760,760,,760,760,760,760,760,67,760,,,,67,67,67,67,,67,67,67,67,',
',,,67,67,67,760,,,,67,67,,67,68,68,68,,68,,,,68,68,,,,68,,68,68,68,68',
'68,68,68,,,,,,68,68,68,68,68,68,68,,,68,,,,,,,68,,,68,68,68,68,68,68',
'68,68,,68,68,68,,68,68,,,68,,,,,,,,,,,,,,,,,,,,68,,,68,,,68,68,,,68',
',68,,,,,,,,,,,,,,,,,,68,68,68,68,,68,68,68,68,,,,,68,68,,69,69,69,,69',
'68,,68,69,69,,,,69,,69,69,69,69,69,69,69,,,,,,69,69,69,69,69,69,69,',
',69,,,,,,,69,,,69,69,69,69,69,69,69,69,,69,69,69,,69,69,,,69,,,,,,,',
',,,,,,,,,69,,,69,,,69,,,69,69,,,69,,,,,,,,,,,,,,,,,,,,69,69,69,69,,69',
'69,69,69,,,,,69,69,,70,70,70,,70,69,,69,70,70,,,,70,,70,70,70,70,70',
'70,70,,,,,,70,70,70,70,70,70,70,,,70,,,,,,,70,,,70,70,70,70,70,70,70',
'70,,70,70,70,,70,70,,,70,,,,,,,,,,,,,,,,,,,,70,,,70,,,70,70,,,70,,,',
',,,,,,,,,,,,,,,,70,70,70,70,,70,70,70,70,,,,,70,70,,44,44,44,,44,70',
',70,44,44,,,,44,,44,44,44,44,44,44,44,,,,,,44,44,44,44,44,44,44,,,44',
',,,,,,44,,,44,44,44,44,44,44,44,44,,44,44,44,,44,44,44,44,44,,,,,,,',
',,,,,,,,,,,,44,,,44,,,44,44,,,44,,,,,,44,,,,,,,,,44,,,,,44,44,44,44',
',44,44,44,44,,,,,44,44,,723,723,723,,723,44,,44,723,723,,,,723,,723',
'723,723,723,723,723,723,,,,,,723,723,723,723,723,723,723,,,723,,,,,',
',723,,,723,723,723,723,723,723,723,723,,723,723,723,,723,723,723,723',
'723,,,,,,,,,,,,,,,,,,,,723,,,723,,,723,723,,,723,,,,,,723,,,,,,,,,723',
',,,,723,723,723,723,,723,723,723,723,,,,,723,723,,43,43,43,,43,723,',
'723,43,43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43,43,43,43,43,43,,,43',
',,,,,,43,,,43,43,43,43,43,43,43,43,,43,43,43,,43,43,43,43,43,,,,,,,',
',,,,,,,,,,,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,,,43,,,,,43,43,43,43',
',43,43,43,43,,,,,43,43,,42,42,42,,42,43,,43,42,42,,,,42,,42,42,42,42',
'42,42,42,,,,,,42,42,42,42,42,42,42,,,42,,,,,,,42,,,42,42,42,42,42,42',
'42,42,,42,42,42,,42,42,42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42,',
',42,,,,,,42,,,,,,,,,42,,,,,42,42,42,42,,42,42,42,42,,,,,42,42,,696,696',
'696,,696,42,,42,696,696,,,,696,,696,696,696,696,696,696,696,,,,,,696',
'696,696,696,696,696,696,,,696,,,,,,,696,,,696,696,696,696,696,696,696',
'696,,696,696,696,,696,696,696,696,696,,,,,,,,,,,,,,,,,,,,696,,,696,',
',696,696,,,696,,,,,,696,,,,,,,,,696,,,,,696,696,696,696,,696,696,696',
'696,,,,,696,696,,108,108,108,108,108,696,,696,108,108,,,,108,,108,108',
'108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,,108',
'108,108,108,108,108,108,108,108,108,108,108,,108,108,108,,108,108,108',
'108,108,271,271,271,271,271,271,271,271,271,271,271,,271,271,,,271,271',
',108,,,108,,,108,108,,,108,,108,271,,271,108,271,271,,271,271,271,271',
'271,108,271,,,,108,108,108,108,,108,108,108,108,,,,,108,108,,271,,,',
'108,108,,108,113,113,113,,113,,,,113,113,,,,113,,113,113,113,113,113',
'113,113,,,,,,113,113,113,113,113,113,113,,,113,,,,,,,113,,,113,113,113',
'113,113,113,113,113,,113,113,113,,113,113,113,113,113,,,,,,,,,,,,,,',
',,,,,113,,,113,,,113,113,,,113,,,,,,113,,,,,,,,,113,,,,,113,113,113',
'113,,113,113,113,113,,,,,113,113,,114,114,114,,114,113,,113,114,114',
',,,114,,114,114,114,114,114,114,114,,,,,,114,114,114,114,114,114,114',
',,114,,,,,,,114,,,114,114,114,114,114,114,114,114,,114,114,114,,114',
'114,114,114,114,,,,,,,,,,,,,,,,,,,,114,,,114,,,114,114,,,114,,,,,,114',
',,,,,,,,114,,,,,114,114,114,114,,114,114,114,114,,,,,114,114,,115,115',
'115,,115,114,,114,115,115,,,,115,,115,115,115,115,115,115,115,,,,,,115',
'115,115,115,115,115,115,,,115,,,,,,,115,,,115,115,115,115,115,115,115',
'115,,115,115,115,,115,115,115,115,115,,,,,,,,,,,,,,,,,,,,115,,,115,',
',115,115,,,115,,,,,,115,,,,,,,,,115,,,,,115,115,115,115,,115,115,115',
'115,,,,,115,115,,116,116,116,,116,115,,115,116,116,,,,116,,116,116,116',
'116,116,116,116,,,,,,116,116,116,116,116,116,116,,,116,,,,,,,116,,,116',
'116,116,116,116,116,116,116,,116,116,116,,116,116,116,116,116,,,,,,',
',,,,,,,,,,,,,116,,,116,,,116,116,,,116,,,,,,116,,,,,,,,,116,,,,,116',
'116,116,116,,116,116,116,116,,,,,116,116,,117,117,117,117,117,116,,116',
'117,117,,,,117,,117,117,117,117,117,117,117,,,,,,117,117,117,117,117',
'117,117,,,117,,,,,,117,117,,117,117,117,117,117,117,117,117,117,,117',
'117,117,,117,117,117,117,117,,,,,,,,,,,,,,,,,,,,117,,,117,,,117,117',
',,117,,117,,,,117,,,,,,,,,117,,,,,117,117,117,117,,117,117,117,117,',
',,,117,117,,754,754,754,,754,117,,117,754,754,,,,754,,754,754,754,754',
'754,754,754,,,,,,754,754,754,754,754,754,754,,,754,,,,,,,754,,,754,754',
'754,754,754,754,754,754,,754,754,754,,754,754,754,754,754,,,,,,,,,,',
',,,,,,,,,754,,,754,,,754,754,,,754,,,,,,754,,,,,,,,,754,,,,,754,754',
'754,754,,754,754,754,754,,,,,754,754,,768,768,768,,768,754,,754,768',
'768,,,,768,,768,768,768,768,768,768,768,,,,,,768,768,768,768,768,768',
'768,,,768,,,,,,,768,,,768,768,768,768,768,768,768,768,,768,768,768,',
'768,768,768,768,768,,,,,,,,,,,,,,,,,,,,768,,,768,,,768,768,,,768,,,',
',,768,,,,,,,,,768,,,,,768,768,768,768,,768,768,768,768,,,,,768,768,',
'769,769,769,,769,768,,768,769,769,,,,769,,769,769,769,769,769,769,769',
',,,,,769,769,769,769,769,769,769,,,769,,,,,,,769,,,769,769,769,769,769',
'769,769,769,,769,769,769,,769,769,769,769,769,,,,,,,,,,,,,,,,,,,,769',
',,769,,,769,769,,,769,,,,,,769,,,,,,,,,769,,,,,769,769,769,769,,769',
'769,769,769,,,,,769,769,,770,770,770,,770,769,,769,770,770,,,,770,,770',
'770,770,770,770,770,770,,,,,,770,770,770,770,770,770,770,,,770,,,,,',
',770,,,770,770,770,770,770,770,770,770,,770,770,770,,770,770,770,770',
'770,,,,,,,,,,,,,,,,,,,,770,,,770,,,770,770,,,770,,,,,,770,,,,,,,,,770',
',,,,770,770,770,770,,770,770,770,770,,,,,770,770,,204,204,204,,204,770',
',770,204,204,,,,204,,204,204,204,204,204,204,204,,,,,,204,204,204,204',
'204,204,204,,,204,,,,,,,204,,,204,204,204,204,204,204,204,204,,204,204',
'204,,204,204,204,204,204,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,204,,,204',
',204,,,,204,,,,,,,,,204,,,,,204,204,204,204,,204,204,204,204,,,,,204',
'204,,205,205,205,,205,204,,204,205,205,,,,205,,205,205,205,205,205,205',
'205,,,,,,205,205,205,205,205,205,205,,,205,,,,,,,205,,,205,205,205,205',
'205,205,205,205,,205,205,205,,205,205,205,205,205,,,,,,,,,,,,,,,,,,',
',205,,,205,,,205,205,,,205,,,,,,205,,,,,,,,,205,,,,,205,205,205,205',
',205,205,205,205,,,,,205,205,,206,206,206,,206,205,,205,206,206,,,,206',
',206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206,,,206',
',,,,,,206,,,206,206,206,206,206,206,206,206,206,206,206,206,,206,206',
'206,206,206,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,206,,,206,,206,,206,',
'206,,,206,,,,,,206,,,,,206,206,206,206,,206,206,206,206,,,,,206,206',
',677,677,677,,677,206,,206,677,677,,,,677,,677,677,677,677,677,677,677',
',,,,,677,677,677,677,677,677,677,,,677,,,,,,,677,,,677,677,677,677,677',
'677,677,677,,677,677,677,,677,677,677,677,677,,,,,,,,,,,,,,,,,,,,677',
',,677,,,677,677,,,677,,677,,,,677,,,,,,,,,677,,,,,677,677,677,677,,677',
'677,677,677,,,,,677,677,,671,671,671,,671,677,,677,671,671,,,,671,,671',
'671,671,671,671,671,671,,,,,,671,671,671,671,671,671,671,,,671,,,,,',
',671,,,671,671,671,671,671,671,671,671,,671,671,671,,671,671,,,671,',
',,,,,,,,,,,,,,,,,,671,,,671,,,671,671,,,671,,,,,,,,,,,,,,,,,,,,671,671',
'671,671,,671,671,671,671,,,,,671,671,,209,209,209,,209,671,,671,209',
'209,,,,209,,209,209,209,209,209,209,209,,,,,,209,209,209,209,209,209',
'209,,,209,,,,,,,209,,,209,209,209,209,209,209,209,209,,209,209,209,',
'209,209,209,209,209,,,,,,,,,,,,,,,,,,,,209,,,209,,,209,209,,,209,,,',
',,209,,,,,,,,,209,,,,,209,209,209,209,,209,209,209,209,,,,,209,209,',
'210,210,210,,210,209,,209,210,210,,,,210,,210,210,210,210,210,210,210',
',,,,,210,210,210,210,210,210,210,,,210,,,,,,,210,,,210,210,210,210,210',
'210,210,210,,210,210,210,,210,210,210,210,210,,,,,,,,,,,,,,,,,,,,210',
',,210,,,210,210,,,210,,210,,,,210,,,,,,,,,210,,,,,210,210,210,210,,210',
'210,210,210,,,,,210,210,,357,357,357,,357,210,,210,357,357,,,,357,,357',
'357,357,357,357,357,357,,,,,,357,357,357,357,357,357,357,,,357,,,,,',
',357,,,357,357,357,357,357,357,357,357,,357,357,357,,357,357,357,357',
'357,,,,,,,,,,,,,,,,,,,,357,,,357,,,357,357,,,357,,,,,,357,,,,,,,,,357',
',,,,357,357,357,357,,357,357,357,357,,,,,357,357,,212,212,212,,212,357',
',357,212,212,,,,212,,212,212,212,212,212,212,212,,,,,,212,212,212,212',
'212,212,212,,,212,,,,,,,212,,,212,212,212,212,212,212,212,212,,212,212',
'212,,212,212,212,212,212,,,,,,,,,,,,,,,,,,,,212,,,212,,,212,212,,,212',
',,,,,212,,,,,,,,,212,,,,,212,212,212,212,,212,212,212,212,,,,,212,212',
',213,213,213,,213,212,,212,213,213,,,,213,,213,213,213,213,213,213,213',
',,,,,213,213,213,213,213,213,213,,,213,,,,,,,213,,,213,213,213,213,213',
'213,213,213,,213,213,213,,213,213,213,213,213,,,,,,,,,,,,,,,,,,,,213',
',,213,,,213,213,,,213,,,,,,213,,,,,,,,,213,,,,,213,213,213,213,,213',
'213,213,213,,,,,213,213,,214,214,214,,214,213,,213,214,214,,,,214,,214',
'214,214,214,214,214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,',
',214,,,214,214,214,214,214,214,214,214,,214,214,214,,214,214,214,214',
'214,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,214,,,214,,,,,,214,,,,,,,,,214',
',,,,214,214,214,214,,214,214,214,214,,,,,214,214,214,660,660,660,,660',
'214,,214,660,660,,,,660,,660,660,660,660,660,660,660,,,,,,660,660,660',
'660,660,660,660,,,660,,,,,,,660,,,660,660,660,660,660,660,660,660,,660',
'660,660,,660,660,,,660,,,,,,,,,,,,,,,,,,,,660,,,660,,,660,660,,,660',
',,,,,,,,,,,,,,,,,,,660,660,660,660,,660,660,660,660,,,,,660,660,,654',
'654,654,,654,660,,660,654,654,,,,654,,654,654,654,654,654,654,654,,',
',,,654,654,654,654,654,654,654,,,654,,,,,,,654,,,654,654,654,654,654',
'654,654,654,,654,654,654,,654,654,654,654,654,,,,,,,,,,,,,,,,,,,,654',
',,654,,,654,654,,,654,,,,,,654,,,,,,,,,654,,,,,654,654,654,654,,654',
'654,654,654,,,,,654,654,,771,771,771,,771,654,,654,771,771,,,,771,,771',
'771,771,771,771,771,771,,,,,,771,771,771,771,771,771,771,,,771,,,,,',
',771,,,771,771,771,771,771,771,771,771,,771,771,771,,771,771,771,771',
'771,,,,,,,,,,,,,,,,,,,,771,,,771,,,771,771,,,771,,,,,,771,,,,,,,,,771',
',,,,771,771,771,771,,771,771,771,771,,,,,771,771,,35,35,35,,35,771,',
'771,35,35,,,,35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35,35,35,,,35',
',,,,,,35,,,35,35,35,35,35,35,35,35,,35,35,35,,35,35,,,35,765,765,765',
'765,765,765,765,765,765,765,765,,765,765,,,765,765,,35,,,35,,,35,35',
',,35,,,765,,765,,765,765,,765,765,765,765,765,,765,,,,35,35,35,35,,35',
'35,35,35,,,,,35,35,,765,,35,,,35,,35,34,34,34,,34,,,,34,34,,,,34,,34',
'34,34,34,34,34,34,,,,,,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34,34',
'34,34,34,34,34,,34,34,34,,34,34,,,34,,,,,,,,,,,,,,,,,,,,34,,,34,,,34',
'34,,,34,,34,,,,,,,,,,,,,,,,,,34,34,34,34,,34,34,34,34,,,,,34,34,,31',
'31,31,,31,34,,34,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31',
'31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31,31,31,31,31,31,31,,31,31',
'31,31,31,,,,,,,,,,,,,,,,,,,,31,,,31,,,31,31,,,31,,31,,31,,31,,,31,,',
',,,31,,,,,31,31,31,31,,31,31,31,31,,,,,31,31,,30,30,30,,30,31,,31,30',
'30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,',
'30,,,30,30,30,30,30,30,30,30,30,30,30,30,,30,30,30,30,30,,,,,,,,,,,',
',,,,,,,,30,,,30,,,30,30,,,30,,30,,30,,30,,,30,,,,,,30,,,,,30,30,30,30',
',30,30,30,30,,,,,30,30,,225,225,225,,225,30,,30,225,225,,,,225,,225',
'225,225,225,225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,',
',225,,,225,225,225,225,225,225,225,225,,225,225,225,,225,225,225,225',
'225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,225,,,225,,,,,,225,,,,,,,,,225',
',,,,225,225,225,225,,225,225,225,225,,,,,225,225,,29,29,29,,29,225,',
'225,29,29,,,,29,,29,29,29,29,29,29,29,,,,,,29,29,29,29,29,29,29,,,29',
',,,,,,29,,,29,29,29,29,29,29,29,29,29,29,29,29,,29,29,29,29,29,,,,,',
',,,,,,,,,,,,,,29,,,29,,,29,29,,,29,,29,,29,,29,,,29,,,,,,29,,,,,29,29',
'29,29,,29,29,29,29,,,,,29,29,,630,630,630,,630,29,,29,630,630,,,,630',
',630,630,630,630,630,630,630,,,,,,630,630,630,630,630,630,630,,,630',
',,,,,,630,,,630,630,630,630,630,630,630,630,,630,630,630,,630,630,630',
'630,630,,,,,,,,,,,,,,,,,,,,630,,,630,,,630,630,,,630,,,,,,630,,,,,,',
',,630,,,,,630,630,630,630,,630,630,630,630,,,,,630,630,,228,228,228',
',228,630,,630,228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228',
'228,228,228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228',
',228,228,228,,228,228,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228',
'228,,,228,,,,,,228,,,,,,,,,228,,,,,228,228,228,228,,228,228,228,228',
',,,,228,228,,229,229,229,,229,228,,228,229,229,,,,229,,229,229,229,229',
'229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229',
'229,229,229,229,229,229,,229,229,229,,229,229,229,229,229,,,,,,,,,,',
',,,,,,,,,229,,,229,,,229,229,,,229,,,,,,229,,,,,,,,,229,,,,,229,229',
'229,229,,229,229,229,229,,,,,229,229,,230,230,230,,230,229,,229,230',
'230,,,,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230',
'230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,230,,230,230,230,',
'230,230,230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,230,,,230,,,',
',,230,,,,,,,,,230,,,,,230,230,230,230,,230,230,230,230,,,,,230,230,',
'231,231,231,,231,230,,230,231,231,,,,231,,231,231,231,231,231,231,231',
',,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,231,231,231',
'231,231,231,,231,231,231,,231,231,231,231,231,,,,,,,,,,,,,,,,,,,,231',
',,231,,,231,231,,,231,,,,,,231,,,,,,,,,231,,,,,231,231,231,231,,231',
'231,231,231,,,,,231,231,,232,232,232,,232,231,,231,232,232,,,,232,,232',
'232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,',
',232,,,232,232,232,232,232,232,232,232,,232,232,232,,232,232,232,232',
'232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,232,,,232,,,,,,232,,,,,,,,,232',
',,,,232,232,232,232,,232,232,232,232,,,,,232,232,,233,233,233,,233,232',
',232,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233,233,233',
'233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233,,233,233',
'233,,233,233,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,233,,,233',
',,,,,233,,,,,,,,,233,,,,,233,233,233,233,,233,233,233,233,,,,,233,233',
',234,234,234,,234,233,,233,234,234,,,,234,,234,234,234,234,234,234,234',
',,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234',
'234,234,234,,234,234,234,,234,234,234,234,234,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,234,,,234,,,,,,234,,,,,,,,,234,,,,,234,234,234,234,,234',
'234,234,234,,,,,234,234,,235,235,235,,235,234,,234,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,235,,235,235,235,,235,235,235,235',
'235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,,235',
',,,,235,235,235,235,,235,235,235,235,,,,,235,235,,236,236,236,,236,235',
',235,236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236',
'236,236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,,236,236',
'236,,236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,236,,,236',
',,,,,236,,,,,,,,,236,,,,,236,236,236,236,,236,236,236,236,,,,,236,236',
',237,237,237,,237,236,,236,237,237,,,,237,,237,237,237,237,237,237,237',
',,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237',
'237,237,237,,237,237,237,,237,237,237,237,237,,,,,,,,,,,,,,,,,,,,237',
',,237,,,237,237,,,237,,,,,,237,,,,,,,,,237,,,,,237,237,237,237,,237',
'237,237,237,,,,,237,237,,238,238,238,,238,237,,237,238,238,,,,238,,238',
'238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,',
',238,,,238,238,238,238,238,238,238,238,,238,238,238,,238,238,238,238',
'238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,238,,,238,,,,,,238,,,,,,,,,238',
',,,,238,238,238,238,,238,238,238,238,,,,,238,238,,239,239,239,,239,238',
',238,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239,239,239,239',
'239,239,239,,,239,,,,,,,239,,,239,239,239,239,239,239,239,239,,239,239',
'239,,239,239,239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,239,,,239',
',,,,,239,,,,,,,,,239,,,,,239,239,239,239,,239,239,239,239,,,,,239,239',
',240,240,240,,240,239,,239,240,240,,,,240,,240,240,240,240,240,240,240',
',,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240',
'240,240,240,,240,240,240,,240,240,240,240,240,,,,,,,,,,,,,,,,,,,,240',
',,240,,,240,240,,,240,,,,,,240,,,,,,,,,240,,,,,240,240,240,240,,240',
'240,240,240,,,,,240,240,,241,241,241,,241,240,,240,241,241,,,,241,,241',
'241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,',
',241,,,241,241,241,241,241,241,241,241,,241,241,241,,241,241,241,241',
'241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241,,,241,,,,,,241,,,,,,,,,241',
',,,,241,241,241,241,,241,241,241,241,,,,,241,241,,242,242,242,,242,241',
',241,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242',
'242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242,,242,242',
'242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,242,,,242',
',,,,,242,,,,,,,,,242,,,,,242,242,242,242,,242,242,242,242,,,,,242,242',
',243,243,243,,243,242,,242,243,243,,,,243,,243,243,243,243,243,243,243',
',,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,243,243,243',
'243,243,243,,243,243,243,,243,243,243,243,243,,,,,,,,,,,,,,,,,,,,243',
',,243,,,243,243,,,243,,,,,,243,,,,,,,,,243,,,,,243,243,243,243,,243',
'243,243,243,,,,,243,243,,244,244,244,,244,243,,243,244,244,,,,244,,244',
'244,244,244,244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,',
',244,,,244,244,244,244,244,244,244,244,,244,244,244,,244,244,244,244',
'244,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,244,,,244,,,,,,244,,,,,,,,,244',
',,,,244,244,244,244,,244,244,244,244,,,,,244,244,,245,245,245,,245,244',
',244,245,245,,,,245,,245,245,245,245,245,245,245,,,,,,245,245,245,245',
'245,245,245,,,245,,,,,,,245,,,245,245,245,245,245,245,245,245,,245,245',
'245,,245,245,245,245,245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245,,,245',
',,,,,245,,,,,,,,,245,,,,,245,245,245,245,,245,245,245,245,,,,,245,245',
',246,246,246,,246,245,,245,246,246,,,,246,,246,246,246,246,246,246,246',
',,,,,246,246,246,246,246,246,246,,,246,,,,,,,246,,,246,246,246,246,246',
'246,246,246,,246,246,246,,246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246',
',,246,,,246,246,,,246,,,,,,246,,,,,,,,,246,,,,,246,246,246,246,,246',
'246,246,246,,,,,246,246,,247,247,247,,247,246,,246,247,247,,,,247,,247',
'247,247,247,247,247,247,,,,,,247,247,247,247,247,247,247,,,247,,,,,',
',247,,,247,247,247,247,247,247,247,247,,247,247,247,,247,247,247,247',
'247,,,,,,,,,,,,,,,,,,,,247,,,247,,,247,247,,,247,,,,,,247,,,,,,,,,247',
',,,,247,247,247,247,,247,247,247,247,,,,,247,247,,248,248,248,,248,247',
',247,248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248,248,248,248',
'248,248,248,,,248,,,,,,,248,,,248,248,248,248,248,248,248,248,,248,248',
'248,,248,248,248,248,248,,,,,,,,,,,,,,,,,,,,248,,,248,,,248,248,,,248',
',,,,,248,,,,,,,,,248,,,,,248,248,248,248,,248,248,248,248,,,,,248,248',
',249,249,249,,249,248,,248,249,249,,,,249,,249,249,249,249,249,249,249',
',,,,,249,249,249,249,249,249,249,,,249,,,,,,,249,,,249,249,249,249,249',
'249,249,249,,249,249,249,,249,249,249,249,249,,,,,,,,,,,,,,,,,,,,249',
',,249,,,249,249,,,249,,,,,,249,,,,,,,,,249,,,,,249,249,249,249,,249',
'249,249,249,,,,,249,249,,250,250,250,,250,249,,249,250,250,,,,250,,250',
'250,250,250,250,250,250,,,,,,250,250,250,250,250,250,250,,,250,,,,,',
',250,,,250,250,250,250,250,250,250,250,,250,250,250,,250,250,250,250',
'250,,,,,,,,,,,,,,,,,,,,250,,,250,,,250,250,,,250,,,,,,250,,,,,,,,,250',
',,,,250,250,250,250,,250,250,250,250,,,,,250,250,,251,251,251,,251,250',
',250,251,251,,,,251,,251,251,251,251,251,251,251,,,,,,251,251,251,251',
'251,251,251,,,251,,,,,,,251,,,251,251,251,251,251,251,251,251,,251,251',
'251,,251,251,251,251,251,,,,,,,,,,,,,,,,,,,,251,,,251,,,251,251,,,251',
',,,,,251,,,,,,,,,251,,,,,251,251,251,251,,251,251,251,251,,,,,251,251',
',252,252,252,,252,251,,251,252,252,,,,252,,252,252,252,252,252,252,252',
',,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252,252,252',
'252,252,252,,252,252,252,,252,252,252,252,252,,,,,,,,,,,,,,,,,,,,252',
',,252,,,252,252,,,252,,,,,,252,,,,,,,,,252,,,,,252,252,252,252,,252',
'252,252,252,,,,,252,252,,253,253,253,,253,252,,252,253,253,,,,253,,253',
'253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,',
',253,,,253,253,253,253,253,253,253,253,,253,253,253,,253,253,253,253',
'253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,253,,,253,,,,,,253,,,,,,,,,253',
',,,,253,253,253,253,,253,253,253,253,,,,,253,253,,629,629,629,,629,253',
',253,629,629,,,,629,,629,629,629,629,629,629,629,,,,,,629,629,629,629',
'629,629,629,,,629,,,,,,,629,,,629,629,629,629,629,629,629,629,,629,629',
'629,,629,629,629,629,629,,,,,,,,,,,,,,,,,,,,629,,,629,,,629,629,,,629',
',,,,,629,,,,,,,,,629,,,,,629,629,629,629,,629,629,629,629,,,,,629,629',
',626,626,626,,626,629,,629,626,626,,,,626,,626,626,626,626,626,626,626',
',,,,,626,626,626,626,626,626,626,,,626,,,,,,,626,,,626,626,626,626,626',
'626,626,626,,626,626,626,,626,626,626,626,626,,,,,,,,,,,,,,,,,,,,626',
',,626,,,626,626,,,626,,,,,,626,,,,,,,,,626,,,,,626,626,626,626,,626',
'626,626,626,,,,,626,626,,260,260,260,,260,626,,626,260,260,,,,260,,260',
'260,260,260,260,260,260,,,,,,260,260,260,260,260,260,260,,,260,,,,,',
',260,,,260,260,260,260,260,260,260,260,260,260,260,260,,260,260,260',
'260,260,,,,,,,,,,,,,,,,,,,,260,,,260,,,260,260,,,260,,260,,260,,260',
',,260,,,,,,260,,,,,260,260,260,260,,260,260,260,260,,,,,260,260,,261',
'261,261,,261,260,,260,261,261,,,,261,,261,261,261,261,261,261,261,,',
',,,261,261,261,261,261,261,261,,,261,,,,,,,261,,,261,261,261,261,261',
'261,261,261,261,261,261,261,,261,261,261,261,261,,,,,,,,,,,,,,,,,,,',
'261,,,261,,,261,261,,,261,,261,,261,,261,,,261,,,,,,261,,,,,261,261',
'261,261,,261,261,261,261,,,,,261,261,,269,269,269,,269,261,,261,269',
'269,,,,269,,269,269,269,269,269,269,269,,,,,,269,269,269,269,269,269',
'269,,,269,,,,,,,269,,,269,269,269,269,269,269,269,269,269,269,269,269',
',269,269,269,269,269,,,,,,,,,,,,,,,,,,,,269,,,269,,,269,269,,,269,,269',
',269,,269,,,269,,,,,,269,,,,,269,269,269,269,,269,269,269,269,,,,,269',
'269,269,625,625,625,,625,269,,269,625,625,,,,625,,625,625,625,625,625',
'625,625,,,,,,625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,625',
'625,625,625,625,625,,625,625,625,,625,625,625,625,625,,,,,,,,,,,,,,',
',,,,,625,,,625,,,625,625,,,625,,,,,,625,,,,,,,,,625,,,,,625,625,625',
'625,,625,625,625,625,,,,,625,625,,621,621,621,,621,625,,625,621,621',
',,,621,,621,621,621,621,621,621,621,,,,,,621,621,621,621,621,621,621',
',,621,,,,,,,621,,,621,621,621,621,621,621,621,621,,621,621,621,,621',
'621,621,621,621,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,621,,,621,,,,,,621',
',,,,,,,,621,,,,,621,621,621,621,,621,621,621,621,,,,,621,621,,620,620',
'620,,620,621,,621,620,620,,,,620,,620,620,620,620,620,620,620,,,,,,620',
'620,620,620,620,620,620,,,620,,,,,,,620,,,620,620,620,620,620,620,620',
'620,,620,620,620,,620,620,620,620,620,,,,,,,,,,,,,,,,,,,,620,,,620,',
',620,620,,,620,,,,,,620,,,,,,,,,620,,,,,620,620,620,620,,620,620,620',
'620,,,,,620,620,,276,276,276,,276,620,,620,276,276,,,,276,,276,276,276',
'276,276,276,276,,,,,,276,276,276,276,276,276,276,,,276,,,,,,,276,,,276',
'276,276,276,276,276,276,276,,276,276,276,,276,276,276,276,276,,,,,,',
',,,,,,,,,,,,,276,,,276,,,276,276,,,276,,,,,,276,,,,,,,,,276,,,,,276',
'276,276,276,,276,276,276,276,,,,,276,276,,619,619,619,,619,276,,276',
'619,619,,,,619,,619,619,619,619,619,619,619,,,,,,619,619,619,619,619',
'619,619,,,619,,,,,,,619,,,619,619,619,619,619,619,619,619,619,619,619',
'619,,619,619,619,619,619,,,,,,,,,,,,,,,,,,,,619,,,619,,,619,619,,,619',
',,,619,,619,,,619,,,,,,619,,,,,619,619,619,619,,619,619,619,619,,,,',
'619,619,,278,278,278,,278,619,,619,278,278,,,,278,,278,278,278,278,278',
'278,278,,,,,,278,278,278,278,278,278,278,,,278,,,,,,,278,,,278,278,278',
'278,278,278,278,278,,278,278,278,,278,278,278,278,278,,,,,,,,,,,,,,',
',,,,,278,,,278,,,278,278,,,278,,,,,,278,,,,,,,,,278,,,,,278,278,278',
'278,,278,278,278,278,,,,,278,278,,280,280,280,,280,278,,278,280,280',
',,,280,,280,280,280,280,280,280,280,,,,,,280,280,280,280,280,280,280',
',,280,,,,,,,280,,,280,280,280,280,280,280,280,280,,280,280,280,,280',
'280,280,280,280,,,,,,,,,,,,,,,,,,,,280,,,280,,,280,280,,,280,,,,,,280',
',,,,,,,,280,,,,,280,280,280,280,,280,280,280,280,,,,,280,280,,281,281',
'281,,281,280,,280,281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281',
'281,281,281,281,281,281,,,281,,,,,,,281,,,281,281,281,281,281,281,281',
'281,,281,281,281,,281,281,281,281,281,,,,,,,,,,,,,,,,,,,,281,,,281,',
',281,281,,,281,,,,,,281,,,,,,,,,281,,,,,281,281,281,281,,281,281,281',
'281,,,,,281,281,,618,618,618,,618,281,,281,618,618,,,,618,,618,618,618',
'618,618,618,618,,,,,,618,618,618,618,618,618,618,,,618,,,,,,,618,,,618',
'618,618,618,618,618,618,618,618,618,618,618,,618,618,618,618,618,,,',
',,,,,,,,,,,,,,,,618,,,618,,,618,618,,,618,,618,,618,,618,,,618,,,,,',
'618,,,,,618,618,618,618,,618,618,618,618,,,,,618,618,,752,752,752,,752',
'618,,618,752,752,,,,752,,752,752,752,752,752,752,752,,,,,,752,752,752',
'752,752,752,752,,,752,,,,,,,752,,,752,752,752,752,752,752,752,752,,752',
'752,752,,752,752,752,752,752,,,,,,,,,,,,,,,,,,,,752,,,752,,,752,752',
',,752,,,,,,752,,,,,,,,,752,,,,,752,752,752,752,,752,752,752,752,,,,',
'752,752,,615,615,615,,615,752,,752,615,615,,,,615,,615,615,615,615,615',
'615,615,,,,,,615,615,615,615,615,615,615,,,615,,,,,,,615,,,615,615,615',
'615,615,615,615,615,,615,615,615,,615,615,615,615,615,,,,,,,,,,,,,,',
',,,,,615,,,615,,,615,615,,,615,,,,,,615,,,,,,,,,615,,,,,615,615,615',
'615,,615,615,615,615,,,,,615,615,,614,614,614,,614,615,,615,614,614',
',,,614,,614,614,614,614,614,614,614,,,,,,614,614,614,614,614,614,614',
',,614,,,,,,,614,,,614,614,614,614,614,614,614,614,,614,614,614,,614',
'614,614,614,614,,,,,,,,,,,,,,,,,,,,614,,,614,,,614,614,,,614,,614,,',
',614,,,,,,,,,614,,,,,614,614,614,614,,614,614,614,614,,,,,614,614,,773',
'773,773,,773,614,,614,773,773,,,,773,,773,773,773,773,773,773,773,,',
',,,773,773,773,773,773,773,773,,,773,,,,,,,773,,,773,773,773,773,773',
'773,773,773,,773,773,773,,773,773,773,773,773,,,,,,,,,,,,,,,,,,,,773',
',,773,,,773,773,,,773,,,,,,773,,,,,,,,,773,,,,,773,773,773,773,,773',
'773,773,773,,,,,773,773,,785,785,785,,785,773,,773,785,785,,,,785,,785',
'785,785,785,785,785,785,,,,,,785,785,785,785,785,785,785,,,785,,,,,',
',785,,,785,785,785,785,785,785,785,785,,785,785,785,,785,785,,,785,',
',,,,,,,,,,,,,,,,,,785,,,785,,,785,785,,,785,,,,,,,,,,,,,,,,,,,,785,785',
'785,785,,785,785,785,785,,,,,785,785,,580,580,580,,580,785,,785,580',
'580,,,,580,,580,580,580,580,580,580,580,,,,,,580,580,580,580,580,580',
'580,,,580,,,,,,,580,,,580,580,580,580,580,580,580,580,580,580,580,580',
',580,580,580,580,580,,,,,,,,,,,,,,,,,,,,580,,,580,,,580,580,,,580,,580',
',580,,580,,,580,,,,,,580,,,,,580,580,580,580,,580,580,580,580,,,,,580',
'580,,570,570,570,,570,580,,580,570,570,,,,570,,570,570,570,570,570,570',
'570,,,,,,570,570,570,570,570,570,570,,,570,,,,,,,570,,,570,570,570,570',
'570,570,570,570,570,570,570,570,,570,570,570,570,570,,,,,,,,,,,,,,,',
',,,,570,,,570,,,570,570,,,570,,570,,570,,570,,,570,,,,,,570,,,,,570',
'570,570,570,,570,570,570,570,,,,,570,570,,569,569,569,,569,570,,570',
'569,569,,,,569,,569,569,569,569,569,569,569,,,,,,569,569,569,569,569',
'569,569,,,569,,,,,,,569,,,569,569,569,569,569,569,569,569,,569,569,569',
',569,569,569,569,569,,,,,,,,,,,,,,,,,,,,569,,,569,,,569,569,,,569,,569',
',,,569,,,,,,,,,569,,,,,569,569,569,569,,569,569,569,569,,,,,569,569',
',294,294,294,,294,569,,569,294,294,,,,294,,294,294,294,294,294,294,294',
',,,,,294,294,294,294,294,294,294,,,294,,,,,,,294,,,294,294,294,294,294',
'294,294,294,,294,294,294,,294,294,,,294,423,423,423,423,423,423,423',
'423,423,423,423,,423,423,,,423,423,,294,,,294,,,294,294,,,294,,,423',
',423,,423,423,,423,423,423,423,423,,423,,,,294,294,294,294,,294,294',
'294,294,,,,,294,294,,423,,294,,,294,,294,832,832,832,,832,,,,832,832',
',,,832,,832,832,832,832,832,832,832,,,,,,832,832,832,832,832,832,832',
',,832,,,,,,,832,,,832,832,832,832,832,832,832,832,,832,832,832,,832',
'832,832,832,832,,,,,,,,,,,,,,,,,,,,832,,,832,,,832,832,,,832,,,,,,832',
',,,,,,,,832,,,,,832,832,832,832,,832,832,832,832,,,,,832,832,,20,20',
'20,,20,832,,832,20,20,,,,20,,20,20,20,20,20,20,20,,,,,,20,20,20,20,20',
'20,20,,,20,,,,,,,20,,,20,20,20,20,20,20,20,20,,20,20,20,,20,20,20,20',
'20,,,,,,,,,,,,,,,,,,,,20,,,20,,,20,20,,,20,,,,,,20,,,,,,,,,20,,,,,20',
'20,20,20,,20,20,20,20,,,,,20,20,,837,837,837,,837,20,,20,837,837,,,',
'837,,837,837,837,837,837,837,837,,,,,,837,837,837,837,837,837,837,,',
'837,,,,,,,837,,,837,837,837,837,837,837,837,837,,837,837,837,,837,837',
'837,837,837,,,,,,,,,,,,,,,,,,,,837,,,837,,,837,837,,,837,,837,,,,837',
',,,,,,,,837,,,,,837,837,837,837,,837,837,837,837,,,,,837,837,,549,549',
'549,,549,837,,837,549,549,,,,549,,549,549,549,549,549,549,549,,,,,,549',
'549,549,549,549,549,549,,,549,,,,,,,549,,,549,549,549,549,549,549,549',
'549,,549,549,549,,549,549,549,549,549,,,,,,,,,,,,,,,,,,,,549,,,549,',
',549,549,,,549,,,,,,549,,,,,,,,,549,,,,,549,549,549,549,,549,549,549',
'549,,,,,549,549,,526,526,526,,526,549,,549,526,526,,,,526,,526,526,526',
'526,526,526,526,,,,,,526,526,526,526,526,526,526,,,526,,,,,,,526,,,526',
'526,526,526,526,526,526,526,526,526,526,526,,526,526,526,526,526,,,',
',,,,,,,,,,,,,,,,526,,,526,,,526,526,,,526,,,,,,526,,,526,,,,,,526,,',
',,526,526,526,526,,526,526,526,526,,,,,526,526,,523,523,523,,523,526',
',526,523,523,,,,523,,523,523,523,523,523,523,523,,,,,,523,523,523,523',
'523,523,523,,,523,,,,,,,523,,,523,523,523,523,523,523,523,523,523,523',
'523,523,,523,523,523,523,523,,,,,,,,,,,,,,,,,,,,523,,,523,,,523,523',
',,523,,523,,,,523,,,523,,,,,,523,,,,,523,523,523,523,,523,523,523,523',
',,,,523,523,,517,517,517,,517,523,,523,517,517,,,,517,,517,517,517,517',
'517,517,517,,,,,,517,517,517,517,517,517,517,,,517,,,,,,,517,,,517,517',
'517,517,517,517,517,517,,517,517,517,,517,517,517,517,517,,,,,,,,,,',
',,,,,,,,,517,,,517,,,517,517,,,517,,,,,,517,,,,,,,,,517,,,,,517,517',
'517,517,,517,517,517,517,,,,,517,517,,513,513,513,,513,517,,517,513',
'513,,,,513,,513,513,513,513,513,513,513,,,,,,513,513,513,513,513,513',
'513,,,513,,,,,,,513,,,513,513,513,513,513,513,513,513,,513,513,513,',
'513,513,513,513,513,,,,,,,,,,,,,,,,,,,,513,,,513,,,513,513,,,513,,,',
',,513,,,,,,,,,513,,,,,513,513,513,513,,513,513,513,513,,,,,513,513,',
'512,512,512,,512,513,,513,512,512,,,,512,,512,512,512,512,512,512,512',
',,,,,512,512,512,512,512,512,512,,,512,,,,,,,512,,,512,512,512,512,512',
'512,512,512,,512,512,512,,512,512,512,512,512,,,,,,,,,,,,,,,,,,,,512',
',,512,,,512,512,,,512,,,,,,512,,,,,,,,,512,,,,,512,512,512,512,,512',
'512,512,512,,,,,512,512,,511,511,511,,511,512,,512,511,511,,,,511,,511',
'511,511,511,511,511,511,,,,,,511,511,511,511,511,511,511,,,511,,,,,',
',511,,,511,511,511,511,511,511,511,511,,511,511,511,,511,511,511,511',
'511,,,,,,,,,,,,,,,,,,,,511,,,511,,,511,511,,,511,,,,,,511,,,,,,,,,511',
',,,,511,511,511,511,,511,511,511,511,,,,,511,511,,508,508,508,,508,511',
',511,508,508,,,,508,,508,508,508,508,508,508,508,,,,,,508,508,508,508',
'508,508,508,,,508,,,,,,,508,,,508,508,508,508,508,508,508,508,,508,508',
'508,,508,508,,,508,,,,,,,,,,,,,,,,,,,,508,,,508,,,508,508,,,508,,,,',
',,,,,,,,,,,,,,,508,508,508,508,,508,508,508,508,,,,,508,508,,501,501',
'501,,501,508,,508,501,501,,,,501,,501,501,501,501,501,501,501,,,,,,501',
'501,501,501,501,501,501,,,501,,,,,,,501,,,501,501,501,501,501,501,501',
'501,501,501,501,501,,501,501,501,501,501,,,,,,,,,,,,,,,,,,,,501,,,501',
',,501,501,,,501,,501,,501,,501,,,501,,,,,,501,,,,,501,501,501,501,,501',
'501,501,501,,,,,501,501,,311,311,311,,311,501,,501,311,311,,,,311,,311',
'311,311,311,311,311,311,,,,,,311,311,311,311,311,311,311,,,311,,,,,',
',311,,,311,311,311,311,311,311,311,311,,311,311,311,,311,311,,,311,',
',,,,,,,,,,,,,,,,,,311,,,311,,,311,311,,,311,,,,,,,,,,,,,,,,,,,,311,311',
'311,311,,311,311,311,311,,,,,311,311,,499,499,499,,499,311,,311,499',
'499,,,,499,,499,499,499,499,499,499,499,,,,,,499,499,499,499,499,499',
'499,,,499,,,,,,,499,,,499,499,499,499,499,499,499,499,,499,499,499,',
'499,499,,,499,,,,,,,,,,,,,,,,,,,,499,,,499,,,499,499,,,499,,,,,,,,,',
',,,,,,,,,,499,499,499,499,,499,499,499,499,,,,,499,499,,854,854,854',
',854,499,,499,854,854,,,,854,,854,854,854,854,854,854,854,,,,,,854,854',
'854,854,854,854,854,,,854,,,,,,,854,,,854,854,854,854,854,854,854,854',
'854,854,854,854,,854,854,854,854,854,,,,,,,,,,,,,,,,,,,,854,,,854,,',
'854,854,,,854,,,,854,,854,,,854,,,,,,854,,,,,854,854,854,854,,854,854',
'854,854,,,,,854,854,,491,491,491,491,491,854,,854,491,491,,,,491,,491',
'491,491,491,491,491,491,,,,,,491,491,491,491,491,491,491,,,491,,,,,',
'491,491,491,491,491,491,491,491,491,491,491,491,,491,491,491,,491,491',
'491,491,491,21,21,21,21,21,21,21,21,21,21,21,,21,21,,,21,21,,491,,,491',
',,491,491,,,491,,491,21,,21,491,21,21,,21,21,21,21,21,491,21,,,,491',
'491,491,491,,491,491,491,491,,,,,491,491,,21,,,,491,491,,491,486,486',
'486,,486,,,,486,486,,,,486,,486,486,486,486,486,486,486,,,,,,486,486',
'486,486,486,486,486,,,486,,,,,,,486,,,486,486,486,486,486,486,486,486',
',486,486,486,,486,486,486,486,486,,,,,,,,,,,,,,,,,,,,486,,,486,,,486',
'486,,,486,,,,,,486,,,,,,,,,486,,,,,486,486,486,486,,486,486,486,486',
',,,,486,486,,484,484,484,,484,486,,486,484,484,,,,484,,484,484,484,484',
'484,484,484,,,,,,484,484,484,484,484,484,484,,,484,,,,,,,484,,,484,484',
'484,484,484,484,484,484,484,484,484,484,,484,484,484,484,484,,,,,,,',
',,,,,,,,,,,,484,,,484,,,484,484,,,484,,,,484,,484,,,484,,,,,,484,,,',
',484,484,484,484,,484,484,484,484,,,,,484,484,,320,320,320,,320,484',
',484,320,320,,,,320,,320,320,320,320,320,320,320,,,,,,320,320,320,320',
'320,320,320,,,320,,,,,,,320,,,320,320,320,320,320,320,320,320,,320,320',
'320,,320,320,320,320,320,,,,,,,,,,,,,,,,,,,,320,,,320,320,,320,320,',
',320,,,,,,320,,,,,,,,,320,,,,,320,320,320,320,,320,320,320,320,,,,,320',
'320,,855,855,855,,855,320,,320,855,855,,,,855,,855,855,855,855,855,855',
'855,,,,,,855,855,855,855,855,855,855,,,855,,,,,,,855,,,855,855,855,855',
'855,855,855,855,,855,855,855,,855,855,855,855,855,,,,,,,,,,,,,,,,,,',
',855,,,855,,,855,855,,,855,,,,,,855,,,,,,,,,855,,,,,855,855,855,855',
',855,855,855,855,,,,,855,855,,322,322,322,,322,855,,855,322,322,,,,322',
',322,322,322,322,322,322,322,,,,,,322,322,322,322,322,322,322,,,322',
',,,,,,322,,,322,322,322,322,322,322,322,322,,322,322,322,,322,322,322',
'322,322,,,,,,,,,,,,,,,,,,,,322,,,322,,,322,322,,,322,,,,,,322,,,,,,',
',,322,,,,,322,322,322,322,,322,322,322,322,,,,,322,322,,482,482,482',
',482,322,,322,482,482,,,,482,,482,482,482,482,482,482,482,,,,,,482,482',
'482,482,482,482,482,,,482,,,,,,,482,,,482,482,482,482,482,482,482,482',
'482,482,482,482,,482,482,482,482,482,,,,,,,,,,,,,,,,,,,,482,,,482,,',
'482,482,,,482,,482,,482,,482,,,482,,,,,,482,,,,,482,482,482,482,,482',
'482,482,482,,,,,482,482,,442,442,442,,442,482,,482,442,442,,,,442,,442',
'442,442,442,442,442,442,,,,,,442,442,442,442,442,442,442,,,442,,,,,',
',442,,,442,442,442,442,442,442,442,442,,442,442,442,,442,442,442,442',
'442,,,,,,,,,,,,,,,,,,,,442,,,442,,,442,442,,,442,,,,,,442,,,,,,,,,442',
',,,,442,442,442,442,,442,442,442,442,,,,,442,442,,441,441,441,,441,442',
',442,441,441,,,,441,,441,441,441,441,441,441,441,,,,,,441,441,441,441',
'441,441,441,,,441,,,,,,,441,,,441,441,441,441,441,441,441,441,,441,441',
'441,,441,441,441,441,441,,,,,,,,,,,,,,,,,,,,441,,,441,,,441,441,,,441',
',,,,,441,,,,,,,,,441,,,,,441,441,441,441,,441,441,441,441,,,,,441,441',
',440,440,440,,440,441,,441,440,440,,,,440,,440,440,440,440,440,440,440',
',,,,,440,440,440,440,440,440,440,,,440,,,,,,,440,,,440,440,440,440,440',
'440,440,440,,440,440,440,,440,440,440,440,440,,,,,,,,,,,,,,,,,,,,440',
',,440,,,440,440,,,440,,,,,,440,,,,,,,,,440,,,,,440,440,440,440,,440',
'440,440,440,,,,,440,440,,438,438,438,,438,440,,440,438,438,,,,438,,438',
'438,438,438,438,438,438,,,,,,438,438,438,438,438,438,438,,,438,,,,,',
',438,,,438,438,438,438,438,438,438,438,438,438,438,438,,438,438,438',
'438,438,,,,,,,,,,,,,,,,,,,,438,,,438,,,438,438,,,438,,438,,438,,438',
',,438,,,,,,438,,,,,438,438,438,438,,438,438,438,438,,,,,438,438,,869',
'869,869,,869,438,,438,869,869,,,,869,,869,869,869,869,869,869,869,,',
',,,869,869,869,869,869,869,869,,,869,,,,,,,869,,,869,869,869,869,869',
'869,869,869,,869,869,869,,869,869,,,869,,,,,,,,,,,,,,,,,,,,869,,,869',
',,869,869,,,869,,,,,,,,,,,,,,,,,,,,869,869,869,869,,869,869,869,869',
',,,,869,869,,881,881,881,,881,869,,869,881,881,,,,881,,881,881,881,881',
'881,881,881,,,,,,881,881,881,881,881,881,881,,,881,,,,,,,881,,,881,881',
'881,881,881,881,881,881,,881,881,881,,881,881,,,881,,,,,,,,,,,,,,,,',
',,,881,,,881,,,881,881,,,881,,,,,,,,,,,,,,,,,,,,881,881,881,881,,881',
'881,881,881,,,,,881,881,,5,5,5,5,5,881,,881,5,5,,,,5,,5,5,5,5,5,5,5',
',,,,,5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5',
'5,,,,,,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,,5,,,,,5,5,5,5,',
'5,5,5,5,,,,,5,5,,975,975,975,,975,5,,5,975,975,,,,975,,975,975,975,975',
'975,975,975,,,,,,975,975,975,975,975,975,975,,,975,,,,,,,975,,,975,975',
'975,975,975,975,975,975,975,975,975,975,,975,975,975,975,975,,,,,,,',
',,,,,,,,,,,,975,,,975,,,975,975,,,975,,975,,975,,975,,,975,,,,,,975',
',,,,975,975,975,975,,975,975,975,975,,,,,975,975,,401,401,401,,401,975',
',975,401,401,,,,401,,401,401,401,401,401,401,401,,,,,,401,401,401,401',
'401,401,401,,,401,,,,,,,401,,,401,401,401,401,401,401,401,401,,401,401',
'401,,401,401,401,401,401,,,,,,,,,,,,,,,,,,,,401,,,401,,,401,401,,,401',
',,,,,401,,,,,,,,,401,,,,,401,401,401,401,,401,401,401,401,,,,,401,401',
',373,373,373,,373,401,,401,373,373,,,,373,,373,373,373,373,373,373,373',
',,,,,373,373,373,373,373,373,373,,,373,,,,,,,373,,,373,373,373,373,373',
'373,373,373,,373,373,373,,373,373,373,373,373,,,,,,,,,,,,,,,,,,,,373',
',,373,,,373,373,,,373,,,,,,373,,,,,,,,,373,,,,,373,373,373,373,,373',
'373,373,373,,,,,373,373,,337,337,337,,337,373,,373,337,337,,,,337,,337',
'337,337,337,337,337,337,,,,,,337,337,337,337,337,337,337,,,337,,,,,',
',337,,,337,337,337,337,337,337,337,337,,337,337,337,,337,337,337,337',
'337,,,,,,,,,,,,,,,,,,,,337,,,337,,,337,337,,,337,,,,,,337,,,,,,,,,337',
',,,,337,337,337,337,,337,337,337,337,,,,,337,337,,338,338,338,,338,337',
',337,338,338,,,,338,,338,338,338,338,338,338,338,,,,,,338,338,338,338',
'338,338,338,,,338,,,,,,,338,,,338,338,338,338,338,338,338,338,,338,338',
'338,,338,338,338,338,338,,,,,,,,,,,,,,,,,,,,338,,,338,,,338,338,,,338',
',,,,,338,,,,,,,,,338,,,,,338,338,338,338,,338,338,338,338,,,,,338,338',
',211,211,211,,211,338,,338,211,211,,,,211,,211,211,211,211,211,211,211',
',,,,,211,211,211,211,211,211,211,,,211,,,,,,,211,,,211,211,211,211,211',
'211,211,211,,211,211,211,,211,211,211,211,211,763,763,763,763,763,763',
'763,763,763,763,763,,763,763,,,763,763,,211,,,211,,,211,211,,,211,,',
'763,,763,211,763,763,,763,763,763,763,763,211,763,,,,211,211,211,211',
',211,211,211,211,,,,,211,211,,763,470,,,,211,,211,470,470,470,,,470',
'470,470,641,470,641,641,641,641,641,,,,470,470,,,,641,,,,,,470,470,',
'470,470,470,470,470,,,,,,,,,641,,,,,,,,,641,641,641,641,,,,641,,,,,',
',,,470,,28,,,,,470,,28,28,28,470,470,28,28,28,641,28,,,,,,,,,,28,28',
',,,,,470,470,,28,28,,28,28,28,28,28,,,,,470,,,470,,,,,470,,,,,,,,,,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,28',
',28,,28,,28,,28,28,,28,28,28,28,28,,28,411,28,,,,,,411,411,411,,,411',
'411,411,28,411,,28,28,,28,,28,,411,411,411,,,,,,,,,411,411,,411,411',
'411,411,411,,,,,,,,,,,,,,,,,,,,,,,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,,,411,411,411,,,411,,411,411,,,411,411,,411,,411',
',411,,411,411,,411,411,411,411,411,,411,411,411,,,,,,,,,,,,,,411,,27',
'411,411,,411,,411,27,27,27,,,27,27,27,,27,,,,,,,,,27,27,27,,,,,,,,,27',
'27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27',
'27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,27,,27,,27,,27,,27,27,,27',
'27,27,27,27,,27,27,27,,,,,,,,,,,,,,27,,,27,27,,27,,27,611,611,611,611',
'611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611',
'611,611,611,,,,611,611,611,611,611,611,611,611,611,611,,,,,,611,611',
'611,611,611,611,611,611,611,,,611,,,,,,,,611,611,,611,611,611,611,611',
'611,611,,,611,611,,,,611,611,611,611,,,,,,,,,,,,,,611,611,,611,611,611',
'611,611,611,611,611,611,611,611,611,,,611,611,,,,,,,,,,,,,,611,392,392',
'392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392',
'392,392,392,392,392,,,,392,392,392,392,392,392,392,392,392,392,,,,,',
'392,392,392,392,392,392,392,392,392,,,392,,,,,,,,392,392,,392,392,392',
'392,392,392,392,,,392,392,,,,392,392,392,392,,,,,,,,,,,,,,392,392,,392',
'392,392,392,392,392,392,392,392,392,392,392,,,392,392,,,,,,,,,,,,,,392',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8',
'8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8',
'8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,,,,,8,9',
'9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9',
',,,,,9,9,9,9,9,9,9,9,9,,,9,,,,,,,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9',
'9,,,,,,,,,,,,,,9,9,,9,9,9,9,9,9,9,9,9,9,9,9,,,9,9,,,,,,,,,,,,,,9,71',
'71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71',
',,,71,71,71,71,71,71,71,71,71,71,,,,,,71,71,71,71,71,71,71,71,71,71',
'71,71,,71,,,,,,71,71,,71,71,71,71,71,71,71,,,71,71,,,,71,71,71,71,,',
',,,71,,,,,,,,71,71,,71,71,71,71,71,71,71,71,71,71,71,71,,,71,736,736',
'736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736',
'736,736,736,736,736,,,,736,736,736,736,736,736,736,736,736,736,,,,,',
'736,736,736,736,736,736,736,736,736,,,736,,,,,,,,736,736,,736,736,736',
'736,736,736,736,,,736,736,,,,736,736,736,736,,,,,,,,,,,,,,736,736,,736',
'736,736,736,736,736,736,736,736,736,736,736,,,736,516,516,516,516,516',
'516,516,516,516,516,516,,516,516,,,516,516,,,860,,860,860,860,860,860',
',,,,,516,,516,860,516,516,,516,516,516,516,516,,516,758,758,758,758',
'758,758,758,758,758,758,758,860,758,758,,,758,758,,516,860,860,860,860',
',,,860,,,,,758,,758,,758,758,,758,758,758,758,758,,758,856,856,856,856',
'856,856,856,856,856,856,856,,856,856,,,856,856,,758,694,,694,694,694',
'694,694,,,,,,856,,856,694,856,856,,856,856,856,856,856,,856,753,753',
'753,753,753,753,753,753,753,753,753,694,753,753,,,753,753,,856,,,694',
'694,,,,694,,,,,753,,753,,753,753,,753,753,753,753,753,,753,767,767,767',
'767,767,767,767,767,767,767,767,,767,767,,,767,767,,753,692,,692,692',
'692,692,692,,,,,,767,,767,692,767,767,,767,767,767,767,767,,767,468',
'468,468,468,468,468,468,468,468,468,468,692,468,468,,,468,468,,767,692',
'692,692,692,,,,692,,,,,468,,468,,468,468,,468,468,468,468,468,,468,672',
'672,672,672,672,672,672,672,672,672,672,,672,672,,,672,672,468,468,690',
',690,690,690,690,690,,,,,,672,,672,690,672,672,,672,672,672,672,672',
',672,853,853,853,853,853,853,853,853,853,853,853,690,853,853,,,853,853',
',672,690,690,690,690,,,,690,,,,,853,,853,,853,853,,853,853,853,853,853',
',853,,,,,,579,579,,,579,,,,,,,,579,579,853,579,579,579,579,579,579,579',
',,579,579,,,,579,579,579,579,,,,,,579,,,,,,,,579,579,,579,579,579,579',
'579,579,579,579,579,579,579,579,572,572,579,,572,,,,,,,,572,572,,572',
'572,572,572,572,572,572,,,572,572,,,,572,572,572,572,,,,,,572,,,,,,',
',572,572,,572,572,572,572,572,572,572,572,572,572,572,572,578,578,572',
',578,,,,,,,,578,578,,578,578,578,578,578,578,578,,,578,578,,,,578,578',
'578,578,,,,,,578,,,,,,,,578,578,,578,578,578,578,578,578,578,578,578',
'578,578,578,437,437,578,,437,,,,,,,,437,437,,437,437,437,437,437,437',
'437,,,437,437,,,,437,437,437,437,,,,,,437,,,,,,,,437,437,,437,437,437',
'437,437,437,437,437,437,437,437,437,976,976,437,,976,,,,,,,,976,976',
',976,976,976,976,976,976,976,,,976,976,,,,976,976,976,976,,,,,,976,',
',,,,,,976,976,,976,976,976,976,976,976,976,976,976,976,976,976,515,515',
'976,,515,,,,,,,,515,515,,515,515,515,515,515,515,515,,,515,515,,,,515',
'515,515,515,,,,,,515,,,,,,,,515,515,,515,515,515,515,515,515,515,515',
'515,515,515,515,514,514,515,,514,,,,,,,,514,514,,514,514,514,514,514',
'514,514,,,514,514,,,,514,514,514,514,,,,,,514,,,,,,,,514,514,,514,514',
'514,514,514,514,514,514,514,514,514,514,977,977,514,,977,,,,,,,,977',
'977,,977,977,977,977,977,977,977,,,977,977,,,,977,977,977,977,,,,,,977',
',,,,,,,977,977,,977,977,977,977,977,977,977,977,977,977,977,977,256',
'256,977,,256,,,,,,,,256,256,,256,256,256,256,256,256,256,,,256,256,',
',,256,256,256,256,,,,,,,,,,,,,,256,256,,256,256,256,256,256,256,256',
'256,256,256,256,256,571,571,256,,571,,,,,,,,571,571,,571,571,571,571',
'571,571,571,,,571,571,,,,571,571,571,571,,,,,,571,,,,,,,,571,571,,571',
'571,571,571,571,571,571,571,571,571,571,571,208,208,571,,208,,,,,,,',
'208,208,,208,208,208,208,208,208,208,,,208,208,,,,208,208,208,208,,',
',,,208,,,,,,,,208,208,,208,208,208,208,208,208,208,208,208,208,208,208',
'503,503,208,,503,,,,,,,,503,503,,503,503,503,503,503,503,503,,,503,503',
',,,503,503,503,503,,,,,,503,,,,,,,,503,503,,503,503,503,503,503,503',
'503,503,503,503,503,503,207,207,503,,207,,,,,,,,207,207,,207,207,207',
'207,207,207,207,,,207,207,,,,207,207,207,207,,,,,,207,,,,,,,,207,207',
',207,207,207,207,207,207,207,207,207,207,207,207,502,502,207,,502,,',
',,,,,502,502,,502,502,502,502,502,502,502,,,502,502,,,,502,502,502,502',
',,,,,502,,,,,,,,502,502,,502,502,502,502,502,502,502,502,502,502,502',
'502,932,932,502,,932,,,,,,,,932,932,,932,932,932,932,932,932,932,,,932',
'932,,,,932,932,932,932,,,,,,932,,,,,,,,932,932,,932,932,932,932,932',
'932,932,932,932,932,932,932,436,436,932,,436,,,,,,,,436,436,,436,436',
'436,436,436,436,436,,,436,436,,,,436,436,436,436,,,,,,436,,,,,,,,436',
'436,,436,436,436,436,436,436,436,436,436,436,436,436,,862,436,862,862',
'862,862,862,1005,,1005,1005,1005,1005,1005,,862,,,,,,734,1005,734,734',
'734,734,734,,,,,,,,,734,862,,,,,,,1005,,862,862,862,862,,,,862,,1005',
'1005,,734,,1005,,,,,,,734,734,734,734,,,915,734,915,915,915,915,915',
'979,,979,979,979,979,979,,915,,,,,,333,979,333,333,333,333,333,967,',
'967,967,967,967,967,,333,915,915,,,,,967,979,,915,915,915,915,,,,915',
',979,979,,333,333,979,,,,,967,,333,333,333,333,,,,333,,967,967,,,894',
'967,894,894,894,894,894,892,,892,892,892,892,892,890,894,890,890,890',
'890,890,,892,,,,,,888,890,888,888,888,888,888,,,894,,,,,,888,892,,,',
'894,894,,890,,894,,892,892,,,,892,,890,890,,888,,890,,,,,,,888,888,888',
'888,,,963,888,963,963,963,963,963,864,,864,864,864,864,864,,963,,,,',
',587,864,587,587,587,587,587,,,,,,,,,587,963,,,,,,,864,,,,963,963,,',
',963,,864,864,,587,587,864,,,,,,,587,587,587,587,,,961,587,961,961,961',
'961,961,,531,,531,531,531,531,531,961,,,,,,,,531,,965,,965,965,965,965',
'965,,,,,,961,,,965,,,,,531,961,961,961,961,,,,961,531,531,531,531,,',
',531,965,,,,,,,,,,,965,965,,,,965' ]
        racc_action_check = arr = ::Array.new(24921, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  4524,  1218,   nil,   368,   nil, 21086,  1141,  1055, 22702, 22830,
   895,   nil,   853,   871,   594,   257,   788,   620,   nil,   -72,
 17595, 19401,   864,   nil,   661,   nil,   186, 22312, 22071, 10879,
 10621, 10492,   nil,  3363, 10363, 10226,   nil,   518,   340,   283,
   571,   649,  6864,  6735,  6477,   443,  1033,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  5043,   nil,   -66,  5308,
  5437,   166,   nil,  5695,  5824,   nil,   nil,  5953,  6090,  6219,
  6348, 22958,   nil,   nil,   nil,   nil,   nil,   405,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   110,   nil,   nil,   244,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   916,   nil,  7122,   nil,
   nil,   nil,   nil,  7259,  7388,  7517,  7646,  7775,  4266,   nil,
   174,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   102,   nil,  3879,  8420,  8549,  8678, 24240, 24118,  9065,
  9194, 21860,  9452,  9581,  9710,   nil,   nil,   761,   -82,   -80,
   477,   -59,   440,   501,   nil, 10750,  2976,   500, 11137, 11266,
 11395, 11524, 11653, 11782, 11911, 12040, 12169, 12298, 12427, 12556,
 12685, 12814, 12943, 13072, 13201, 13330, 13459, 13588, 13717, 13846,
 13975, 14104, 14233, 14362,   nil,   nil, 23996,   nil,   nil,   518,
 14749, 14878,   nil,   nil,   nil,   nil,   nil,   nil,   nil, 15007,
   nil,  7122,   nil,   495,   507,   nil, 15523,   588, 15781,   nil,
 15910, 16039,   nil,   nil,   278,   nil,  5179,   872,   638,   746,
  2718,   773,   833,   795, 17329,  2331,  1131,   945,   499,   953,
   655,   nil,   924,   886,   180,   nil,   nil,   nil,   930,   593,
   911, 19014,   nil,   134,  1024,  1045,   811,   nil,  1050,   nil,
 19796,  1299, 20054,   990,   nil,   269,   333,  1102,  1084,   237,
  1132,   nil,   nil, 24579,   637,    33,    36, 21602, 21731,   124,
    18,  1171,    -5,   -21,   764,  1243,    39,  1266,   nil,   nil,
   311,   347,   195,   nil,   897,   nil,    25,  9323,   nil,   nil,
   nil,   674,   583,   568,   555,   422,   255,   118,   691,   328,
   nil,   -28,   nil, 21473,   nil,   412,   308,   -30,   304,   285,
   -45,   -39,   313,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1175, 22574,   nil,   nil,   nil,   nil,  1173,   nil,  1144,
   nil, 21344,  1109,   nil,  1030,  1096,   nil,  1092,  1090,   162,
   221, 22183,   nil,   nil,   nil,     0,   378,  1132,   nil,   nil,
   893,  1162,   nil, 17329,   nil,  1067,   nil,   nil,   761,   nil,
   nil,   nil,   nil,   226,   nil,  1110, 24423, 23691, 20699,   296,
 20570, 20441, 20312,  2589,  1557,   514,   444,  1126,  1119,  1106,
  1097,  3105,  2976,  2847,  2460,  2202,  2073,  1111,   842,  2718,
  1944,  1299,  1686,  1815,   446,   912,  1428,  2331, 23350,   -12,
 21992,   nil,   nil,   nil,   nil,  1025,   nil,   -49,   125,   999,
   nil,   nil, 20183,   nil, 19667,   nil, 19538,   nil,   nil,   nil,
   nil, 19401,  1284,  1428,   956,   939,   nil,   nil,   938, 19143,
   926, 18885, 24301, 24179,  1072,   948,   nil,   nil, 18756,   888,
   nil, 18627, 18498, 18369, 23874, 23813, 23120, 18240,  1005,  1002,
   272,   919,   nil, 18111,   nil,   nil, 17982,   nil,   nil,   nil,
     7, 24799,   nil,   861,   855,   nil,   851,   849,   846,   nil,
   nil,   nil,   nil,   nil,   nil,   834,   nil,   556,   nil, 17853,
   nil,   nil,   nil,   907,   nil,   nil,   nil,   905,   nil,   nil,
   903,  1815,   929,   nil,  2073,   131,   -14,   922,   922, 17200,
 17071, 24057, 23569,     8,   nil,   nil,   442,   nil, 23630, 23508,
 16942,   nil,   nil,   nil,   254,   194,  2847, 24739,   nil,   -26,
   nil,   nil,   nil,   744,   nil,   nil,   nil,   755,   nil,   nil,
   273,   nil,   169,   nil,   nil,   653,   nil,   640,   nil,   nil,
   nil, 22446,   nil,   627, 16555, 16426,   406,   585, 16168, 15652,
 15394, 15265,   528,   nil,   nil, 15136, 14620,   509,   nil, 14491,
 11008,   nil,   nil,   219,   150,   622,   488,   447,  4911,   421,
   nil, 21956,   nil,  3492,   513,   -24,   -56,   nil,  3621,  3750,
   nil,   389,   nil,   433,  9968,   nil,   nil,   nil,   381,  -110,
  9839,   344,   nil,   339,   149,    68,   378,   381,  1030,   338,
   292,  8936, 23396,   327,   314,    18,   352,  8807,   nil,   205,
   nil,   144,   nil,  4008,  4137,   -41,   542,   nil,   nil,   343,
 23431,   nil, 23339,   nil, 23247,   nil,  6993,   nil,   629,   nil,
   -72,   308,   nil,    45,   nil,   nil,   nil,   nil,   251,   nil,
   262,   nil,   nil,   nil,   nil,   291,   nil,    10,   211,     9,
    41,   166,    -4,  6606,   213,  1102,   nil,   345,  4653,  5566,
   nil,   nil,   498,  4782, 24506,   388, 23071,   nil,   nil,   nil,
   nil,   nil,   nil,  4911,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   435, 16297, 23258,  7904,   nil,   452,   nil, 23166,   nil,
  5953,   nil,   nil, 21860,   nil, 10226,   nil, 23304,  8033,  8162,
  8291, 10097,   262, 16684,   552,   569,   nil,   580,   586,   588,
   nil,   627,   607,   606,   608, 16813,   nil,   nil,   747,   nil,
   nil,   761,   656,   761,   nil,   nil,   nil,   640,   457,   nil,
   nil,   777,   nil,  2460,   655,   702,   nil,   nil,   710,   nil,
   704,   812,   752,   714,   nil,   nil,   nil,   717,   718,   nil,
   722,   727,   nil,   732,   nil,   743,   689,   742,  1225,   nil,
   877,   nil, 17466,   889,  2202,  1944,   nil, 17724,  1686,   -19,
    24,   nil,   928,   161,  1557,   nil,   934,   819,   nil,   nil,
   823,   819,   nil, 23442, 19272, 19925, 23212,   577,   nil,   nil,
 23155,   nil, 24485,   nil, 24725,   nil,   nil,   876,  1543, 20828,
   962,   942,   nil,   890,   nil,   nil,   nil,  1030,   nil,   nil,
    35, 20957,   nil,   nil,   nil,   nil,   nil,   nil, 24666,   nil,
 24652,   nil, 24645,   nil, 24638,   nil,   nil,   nil,   nil,   171,
   549,   894,   nil,    79,   nil,  1033,  1034,   nil,    85,   nil,
   nil,   nil,  1045,   nil,   nil, 24558,   nil,   924,   nil,   nil,
   925,   933,   934,   936,   nil,   937,   nil,  -102,   nil,   nil,
   nil,   630, 24362,   nil,   nil,   nil,  2589,   803,  1170,  1080,
  1069,   862,   nil,  1001,  1009,  1010,  1011,  1021,  1285,  1027,
   615,  3105,   nil,   nil,   nil,   nil,   nil,  3234,   nil,  4395,
   nil, 24791,   nil, 24718,   nil, 24816,   nil, 24586,   nil,   nil,
   nil,  1230,  1118,  1121,  1205, 21215, 23752, 23935,  1166, 24565,
   nil,   nil,   nil,   nil,  1414,  1094,    38,  1239,  1242,  1120,
  1124,  1128,  1133,   nil,   nil,  1142,    32,   -10,    26,   833,
  1158,  1163,   nil,   nil,   nil, 24492,   nil,   nil,   nil,   nil,
    34,   nil,  1174,   nil ]

racc_action_default = [
    -3,  -586,    -1,  -572,    -4,  -586,    -7,  -586,  -586,  -586,
  -586,   -29,  -586,  -586,  -586,  -279,  -586,   -41,   -44,  -574,
  -586,   -49,   -51,   -52,   -53,   -57,  -258,  -258,  -258,  -293,
  -328,  -329,   -69,   -11,   -73,   -81,   -83,  -586,  -483,  -484,
  -586,  -586,  -586,  -586,  -586,  -574,  -239,  -270,  -271,  -272,
  -273,  -274,  -275,  -276,  -277,  -278,  -562,  -281,  -283,  -585,
  -553,  -301,  -389,  -586,  -586,  -306,  -309,  -572,  -586,  -586,
  -586,  -586,  -330,  -331,  -426,  -427,  -428,  -429,  -430,  -451,
  -433,  -434,  -453,  -455,  -438,  -443,  -447,  -449,  -465,  -453,
  -467,  -468,  -560,  -472,  -473,  -561,  -475,  -476,  -477,  -478,
  -479,  -480,  -481,  -482,  -487,  -488,  -586,    -2,  -573,  -581,
  -582,  -583,    -6,  -586,  -586,  -586,  -586,  -586,    -3,   -17,
  -586,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,
  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,  -132,  -133,
  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,  -142,  -143,
  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,  -152,  -153,
  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,  -162,  -163,
  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,  -172,  -173,
  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,  -182,  -183,
  -184,  -185,  -186,  -187,  -188,  -189,  -190,  -191,  -192,  -193,
  -194,   -22,  -121,   -11,  -586,  -586,  -248,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -574,  -575,   -48,  -586,  -483,  -484,
  -586,  -279,  -586,  -586,  -231,  -586,   -11,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,  -586,
  -586,  -586,  -586,  -586,  -395,  -397,  -586,  -570,  -571,   -58,
  -248,  -586,  -300,  -401,  -410,  -412,   -64,  -407,   -65,  -574,
   -66,  -240,  -253,  -262,  -262,  -257,  -586,  -263,  -586,  -555,
  -586,  -586,   -67,   -68,  -572,   -12,  -586,   -15,  -586,   -71,
   -11,  -574,  -586,   -74,   -77,   -11,   -89,   -90,  -586,  -586,
   -97,  -293,  -296,  -574,  -586,  -328,  -329,  -332,  -408,  -586,
   -79,  -586,   -85,  -290,  -469,  -470,  -586,  -216,  -217,  -232,
  -586,   -11,  -586,  -574,  -241,  -578,  -578,  -586,  -586,  -578,
  -586,  -302,  -303,  -515,   -50,  -586,  -586,  -586,  -586,  -572,
  -586,  -573,  -483,  -484,  -586,  -586,  -279,  -586,  -342,  -343,
  -107,  -108,  -586,  -110,  -586,  -279,  -586,  -586,  -483,  -484,
  -321,  -112,  -113,  -154,  -155,  -156,  -172,  -177,  -184,  -187,
  -323,  -586,  -551,  -586,  -431,  -586,  -586,  -586,  -586,  -586,
  -586,  -586,  -586,  1014,    -5,  -584,   -23,   -24,   -25,   -26,
   -27,  -586,  -586,   -19,   -20,   -21,  -122,  -586,   -30,   -39,
   -40,  -586,  -586,   -31,  -197,  -574,  -249,  -262,  -262,  -563,
  -564,  -258,  -405,  -565,  -566,  -564,  -563,  -258,  -404,  -406,
  -565,  -566,   -37,  -205,   -38,  -586,   -42,   -43,  -195,  -263,
   -45,   -46,   -47,  -574,  -299,  -586,  -586,  -586,  -248,  -290,
  -586,  -586,  -586,  -206,  -207,  -208,  -209,  -210,  -211,  -212,
  -213,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -225,  -226,
  -227,  -228,  -229,  -230,  -233,  -234,  -235,  -236,  -574,  -378,
  -258,  -563,  -564,   -55,   -59,  -574,  -259,  -378,  -378,  -574,
  -295,  -254,  -586,  -255,  -586,  -260,  -586,  -264,  -558,  -559,
   -10,  -573,   -14,    -3,  -574,   -70,  -288,   -86,   -75,  -586,
  -574,  -248,  -586,  -586,   -96,  -586,  -469,  -470,  -586,   -82,
   -87,  -586,  -586,  -586,  -586,  -586,  -237,  -586,  -418,  -586,
  -284,  -586,  -242,  -580,  -579,  -244,  -580,  -291,  -292,  -554,
  -586,  -515,  -392,  -550,  -550,  -498,  -500,  -500,  -500,  -514,
  -516,  -517,  -518,  -519,  -520,  -521,  -522,  -586,  -524,  -586,
  -530,  -532,  -533,  -535,  -540,  -542,  -543,  -545,  -546,  -547,
  -586,   -11,  -333,  -334,   -11,  -586,  -586,  -586,  -586,  -586,
  -248,  -586,  -586,  -290,  -314,  -107,  -108,  -109,  -586,  -586,
  -248,  -317,  -489,  -490,  -586,  -586,   -11,  -515,  -325,  -574,
  -432,  -452,  -457,  -586,  -459,  -435,  -454,  -586,  -456,  -437,
  -586,  -440,  -586,  -442,  -445,  -586,  -446,  -586,  -466,    -8,
   -18,  -586,   -28,  -269,  -586,  -586,  -409,  -586,  -250,  -252,
  -586,  -586,   -60,  -247,  -402,  -586,  -586,   -62,  -403,  -586,
  -586,  -298,  -576,  -563,  -564,  -563,  -564,  -574,  -195,  -586,
  -379,  -574,  -381,   -11,   -54,  -398,  -378,  -245,   -11,   -11,
  -294,  -262,  -261,  -265,  -586,  -556,  -557,   -13,  -586,   -72,
  -586,   -78,   -84,  -574,  -563,  -564,  -246,   -93,   -95,  -586,
   -80,  -586,  -204,  -214,  -215,  -574,  -585,  -585,  -282,  -574,
  -287,  -578,  -390,   -11,   -11,  -574,  -586,  -496,  -497,  -586,
  -586,  -507,  -586,  -510,  -586,  -512,  -586,  -344,  -586,  -346,
  -348,  -355,  -521,  -574,  -526,  -534,  -544,  -548,  -585,  -335,
  -585,  -307,  -336,  -337,  -310,  -586,  -313,  -586,  -574,  -563,
  -564,  -567,  -289,  -586,  -107,  -108,  -111,  -574,   -11,  -586,
  -492,  -319,  -586,   -11,  -515,  -586,  -586,  -552,  -458,  -461,
  -462,  -463,  -464,   -11,  -436,  -439,  -441,  -444,  -448,  -450,
  -123,  -267,  -586,  -198,  -586,  -577,  -262,   -33,  -200,   -34,
  -201,   -61,   -35,  -203,   -36,  -202,   -63,  -196,  -586,  -586,
  -586,  -586,  -409,  -586,  -550,  -550,  -360,  -362,  -362,  -362,
  -377,  -586,  -574,  -383,  -521,  -586,  -528,  -538,  -586,  -400,
  -399,   -11,  -586,  -586,  -256,  -266,   -16,   -76,   -91,   -88,
  -297,  -585,  -340,   -11,  -419,  -585,  -420,  -421,  -586,  -243,
  -586,  -586,  -586,  -550,  -531,  -549,  -499,  -500,  -500,  -525,
  -500,  -500,  -541,  -500,  -536,  -574,  -586,  -353,  -586,  -523,
  -586,  -338,  -586,  -586,   -11,   -11,  -312,  -586,   -11,  -409,
  -586,  -409,  -586,  -586,   -11,  -322,  -586,  -574,  -494,  -326,
  -586,  -268,   -32,  -199,  -251,  -586,  -238,  -586,  -358,  -359,
  -368,  -370,  -586,  -373,  -586,  -375,  -380,  -586,  -586,  -586,
  -527,  -586,  -396,  -586,  -411,  -413,    -9,   -11,  -425,  -341,
  -586,  -586,  -423,  -285,  -393,  -394,  -391,  -495,  -586,  -503,
  -586,  -505,  -586,  -508,  -586,  -511,  -513,  -345,  -347,  -351,
  -586,  -356,  -304,  -586,  -305,  -586,  -586,  -265,  -585,  -315,
  -318,  -491,  -586,  -324,  -493,  -515,  -460,  -550,  -529,  -361,
  -362,  -362,  -362,  -362,  -539,  -362,  -382,  -574,  -385,  -387,
  -388,  -537,  -586,  -290,   -56,  -424,   -11,   -98,   -99,  -586,
  -586,  -106,  -422,  -500,  -500,  -500,  -500,  -349,  -586,  -354,
  -586,   -11,  -308,  -311,  -414,  -415,  -416,   -11,  -320,   -11,
  -357,  -586,  -365,  -586,  -367,  -586,  -371,  -586,  -374,  -376,
  -384,  -586,  -289,  -567,  -418,  -248,  -586,  -586,  -105,  -586,
  -501,  -504,  -506,  -509,  -586,  -352,  -585,  -586,  -586,  -362,
  -362,  -362,  -362,  -386,  -417,  -574,  -563,  -564,  -567,  -104,
  -500,  -350,  -339,  -316,  -327,  -586,  -363,  -366,  -369,  -372,
  -409,  -502,  -362,  -364 ]

clist = [
'213,411,417,26,370,307,307,331,26,324,124,124,255,263,267,405,127,127',
'119,202,539,519,111,26,568,2,320,272,272,272,129,129,26,26,26,676,26',
'293,474,307,307,307,483,561,564,427,532,335,336,216,470,339,6,733,655',
'801,400,6,256,259,266,268,424,898,687,688,26,26,830,475,26,107,108,124',
'334,334,901,616,334,819,273,273,273,274,274,274,111,522,525,833,652',
'529,652,509,711,714,655,386,387,388,389,577,289,822,310,581,697,778',
'728,292,325,26,781,326,329,779,26,26,26,26,26,26,703,376,334,334,334',
'334,844,924,382,691,693,695,930,340,643,112,270,282,283,586,928,391',
'648,649,291,591,949,598,601,601,356,360,600,602,812,587,736,915,6,723',
'347,835,818,338,820,780,332,390,6,328,372,645,782,327,483,611,834,337',
'927,323,679,530,682,333,646,898,392,655,469,477,478,954,412,805,985',
'880,374,375,322,377,378,957,272,349,26,26,26,26,421,775,26,26,26,26',
'26,26,539,379,380,381,430,431,432,433,652,652,924,26,411,417,1001,398',
'403,738,743,930,422,426,384,729,201,657,685,993,817,637,876,819,814',
'715,918,867,321,402,813,697,272,272,827,402,371,26,26,307,1,272,,,,',
'26,825,539,,,,,397,,661,307,819,505,,732,955,,26,670,263,,26,,267,666',
',26,822,,,292,111,521,858,859,,666,772,663,,273,791,510,274,,,,,273',
'565,566,274,26,26,920,726,,,,,,520,921,798,922,,492,,26,26,,,887,,1002',
',334,334,,,490,491,,,819,,111,289,26,,943,498,289,666,292,,585,909,476',
'292,746,666,746,582,26,,479,718,,959,,,589,697,617,697,,727,839,,,,124',
',434,,623,841,127,761,610,494,628,588,766,567,500,,,,889,891,129,893',
'895,,896,794,,539,,412,655,838,,917,842,,775,,775,846,775,989,272,,',
'421,,26,797,809,622,,,847,960,639,627,480,,,,,,623,947,697,,,652,,427',
',,,,,307,,,495,,,,,,307,,,,,,,,,,412,,994,14,,26,,26,14,,272,,412,510',
'644,26,421,,697,,697,,510,217,,,,,421,658,,26,217,217,217,794,14,298',
'298,675,806,,775,,775,,775,651,775,980,981,982,983,,697,912,6,,,,,,',
',,,217,217,,412,217,344,354,354,,26,,412,26,272,,,,330,26,421,775,,681',
'272,,421,,,26,712,712,,,936,26,,790,956,,,1011,,,,,14,,539,730,731,217',
'217,217,217,14,14,951,,124,,631,,,617,127,717,750,783,26,26,,,807,26',
'26,,307,26,129,789,,,708,,,710,,307,,617,,26,,,757,759,26,26,623,762',
'764,628,647,426,988,808,650,,510,,,783,1010,,849,,,756,,799,,659,,,',
',,662,,,,26,26,,,,,,,,14,217,217,217,617,,217,217,217,217,217,217,840',
'617,,,,,843,,,399,,14,788,,,429,,792,793,26,,402,,,26,26,,334,,26,,124',
',334,,,,,,26,,,,,878,217,217,848,882,307,26,,810,811,217,,783,15,,,',
',15,666,737,,,,,,,14,,,,14,852,995,,298,14,485,,487,,488,489,26,,,15',
'300,300,,,,298,,,26,,,,,,,14,217,16,903,,,850,16,,,776,,,,,,217,217',
',346,355,355,26,,26,26,,307,26,,334,,,,26,16,217,,,307,,,,,800,,712',
',,911,,,217,,873,815,,,815,15,,,,861,863,865,879,26,15,15,348,,829,',
',,,,,,,,,13,,,,,13,,,777,,,,970,,905,906,,613,908,,,,,,,,,16,,,,,,13',
'217,,16,16,421,,,,,26,,,,,,,,,,,,,,935,26,821,,823,,,26,,26,412,,,,15',
',,,,,272,,,617,,26,421,,,,14,,14,,,,,15,298,,217,653,,330,,656,,298',
',,,13,,,897,,217,,,974,13,13,,,,16,962,964,966,968,,969,425,,986,,914',
',,,987,,653,,,330,815,,16,776,,776,,776,,,,15,,,14,15,,14,,300,15,,704',
'217,,,,,,,,,,217,,,300,,,14,,,429,,,,15,,,1006,1007,1008,1009,,,,,,',
',13,,16,,,,16,,,,,16,1013,217,217,,,,217,217,,,217,13,,,923,751,925',
',,653,330,,,,14,16,,,,14,14,,776,,776,,776,,776,,944,298,945,,946,,',
',,,,,298,,,795,,,,,,,,,14,14,,,,,,13,,,,13,776,,804,,13,,,,,,,,,,,,',
',,,,824,,,,,,,217,,13,,,14,217,,,990,14,991,,992,,,,,,,14,,,,,,,1000',
',,,217,,,,,,,,,15,,15,,,,,,300,851,,,,1012,,,,300,,,,39,870,,,,39,,14',
',,,,,,,,,,,14,,,,,,,,,,,16,,16,39,297,297,,,,,,,,,,,,,217,15,14,14,15',
',14,,,,,,14,,,,,,,,343,359,359,359,,907,15,,,,,,,742,,,,931,,,,,330',
',,14,,,,939,,,16,,,16,,,,,39,,,13,,13,,,,39,39,,,,,,,16,,,,,,15,,,,',
'15,15,,,,,,,,,,,300,,,,14,,,,,,,300,,,,,,,,14,425,,,15,15,14,,14,,,',
',,13,16,,13,,,16,16,,,217,,,,,,,,,,,,39,,,13,,,,,,,,,,15,,,,,15,16,16',
',,39,,,,,15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,,,,16,13,13,,,16,355,',
',,,,15,,,16,,,,39,,,,39,15,,,297,39,,,,,,,,13,13,,,,,,,297,,,,,,,,,',
'39,15,15,,,15,,,,16,,15,38,,,,,38,,,,16,,,,,,13,,,,,13,,,,355,,,,,,13',
',15,38,296,296,941,,,,16,16,,,16,,,,,,16,,,,,,,,,,,,,,,,,,342,358,358',
'358,,,,,,,13,,,,,16,,,,942,,,13,15,,,,,,,,,,,,,,,15,,38,,,,15,,15,,',
'38,38,,,13,13,,,13,,,,,,13,,,,,,,,,,,16,,,,,,,,,,,,,,,16,39,,39,,,16',
'13,16,297,,,,,,,,,297,,,,,,,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,,,,,,,',
',,,13,,,38,,39,,,39,,,,,,,13,,,,,,13,,13,,,,,,,39,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,38,,,,38,,,,296,38,,,,,,,,,,,,,,,39,296,,,,39,39,,,,,38',
',,,,,297,,,,,,,,,,,297,,,,,,,,,,,,39,39,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,39,,,,,39,,,,,,,,,,39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,359,,,,,,39,,,,,,,,,,,,39,,,,,,,,,,,,,,,,,,,,,38,,38,,,,,',
'296,,39,39,,,39,,,296,,,39,,,,,,,,,,,,,,,,,,,,,,,,,359,,,,,,,,39,,,',
'938,,,,,,,,,,,,,38,,,38,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,,,,,,,,39,',
',,,,,,,,,,,,,39,,,,,,39,,39,,,,,,,,,,,,,,,,,38,,,,,38,38,,,,,,,,,,,296',
',,,,,,,,,,296,,,,,,224,,,,,,38,38,,271,271,271,,,,,,,,,,,317,318,319',
',,,,,,,,,,,,,,271,271,,,,,,,,,,,38,,,,,38,,,,,,,,,,38,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,358,,,,,,38,,,,,,,,,,,,38,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,38,38,,,38,,,,,,38,,,,,,,,,,,,,,,,,271,404,271,,,423',
'428,,358,,,,,,,,38,,,,937,224,,,443,444,445,446,447,448,449,450,451',
'452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468',
',,,,,,271,271,,,,,,,,271,,,,,,,271,,271,38,271,271,,,,,,,,,,,,,38,,',
',,,38,,38,,,,,,,,,,,,,,,,,,516,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,271,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,271,,423,638,404,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,271,,271,,271,,,,,,,,,,,,,,,271,,,,,,,,,,672,673,674,,,,,,,,,,271',
',,271,,,,,,,,,,,,,,,,,,,,,,,271,,,,,,,,,,,,,,,,,,,,271,271,,,,,,,,,',
'271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,271,753,,,271,271,758,760,,,,763',
'765,,,638,767,,,,,,,,,,,,,,,,,,,,,,,,271,,,,,,,,,,,,,,,,,,,,,,,271,',
',,,,,,,,,,,,,,,,,271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,271,,853,,,,,,,,,,,,,,758,760,765,763,,856,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,271,,,,,,,,,,,,,,,,,271',
'853,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,271' ]
        racc_goto_table = arr = ::Array.new(3242, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'31,37,37,41,56,63,63,84,41,65,57,57,135,69,69,23,60,60,15,15,158,8,93',
'41,90,2,31,33,33,33,61,61,41,41,41,10,41,49,39,63,63,63,71,87,87,18',
'134,17,17,20,37,17,7,94,170,11,27,7,36,38,38,38,27,112,119,119,41,41',
'88,23,41,4,6,57,29,29,115,24,29,162,66,66,66,68,68,68,93,67,67,11,72',
'67,72,51,89,89,170,17,17,17,17,54,45,166,50,92,113,124,106,9,66,41,127',
'68,68,125,41,41,41,41,41,41,114,147,29,29,29,29,107,167,147,160,160',
'160,130,4,40,5,44,44,44,108,129,2,40,40,46,151,115,151,151,151,55,55',
'150,150,127,109,110,111,7,104,91,103,125,102,125,116,86,7,7,83,82,70',
'122,64,71,62,101,100,128,99,98,131,132,133,42,112,30,170,136,138,139',
'140,69,141,115,142,145,146,97,148,149,105,33,19,41,41,41,41,57,118,41',
'41,41,41,41,41,158,152,153,154,29,29,29,29,72,72,167,41,37,37,115,20',
'20,155,156,130,20,20,5,157,16,14,134,129,161,23,12,162,163,90,164,127',
'96,66,118,113,33,33,113,66,95,41,41,63,1,33,,,,,41,114,158,,,,,9,,51',
'63,162,31,,8,11,,41,51,69,,41,,69,37,,41,166,,,9,93,31,119,119,,37,24',
'23,,66,40,49,68,,,,,66,17,17,68,41,41,124,54,,,,,,29,125,24,125,,7,',
'41,41,,,119,,88,,29,29,,,4,6,,,162,,93,45,41,,125,50,45,37,9,,29,89',
'44,9,151,37,151,93,41,,44,23,,94,,,29,113,31,113,,23,24,,,,57,,47,,69',
'24,60,39,15,46,69,36,39,4,46,,,,160,160,61,160,160,,160,71,,158,,69',
'170,87,,118,8,,118,,118,8,118,125,33,,,57,,41,51,67,38,,,134,119,31',
'38,47,,,,,,69,113,113,,,72,,18,,,,,,63,,,47,,,,,,63,,,,,,,,,,69,,10',
'22,,41,,41,22,,33,,69,49,38,41,57,,113,,113,,49,22,,,,,57,2,,41,22,22',
'22,71,22,22,22,29,27,,118,,118,,118,68,118,160,160,160,160,,113,8,7',
',,,,,,,,,22,22,,69,22,22,22,22,,41,,69,41,33,,,,28,41,57,118,,68,33',
',57,,,41,93,93,,,87,41,,84,90,,,160,,,,,22,,158,93,93,22,22,22,22,22',
'22,87,,57,,47,,,31,60,66,15,31,41,41,,,65,41,41,,63,41,61,135,,,9,,',
'9,,63,,31,,41,,,20,20,41,41,69,20,20,69,47,20,8,31,47,,49,,,31,24,,56',
',,68,,49,,47,,,,,,47,,,,41,41,,,,,,,,22,22,22,22,31,,22,22,22,22,22',
'22,17,31,,,,,17,,,28,,22,9,,,28,,9,9,41,,66,,,41,41,,29,,41,,57,,29',
',,,,,41,,,,,65,22,22,93,65,63,41,,9,9,22,,31,25,,,,,25,37,47,,,,,,,22',
',,,22,20,23,,22,22,28,,28,,28,28,41,,,25,25,25,,,,22,,,41,,,,,,,22,22',
'26,17,,,9,26,,,120,,,,,,22,22,,25,25,25,41,,41,41,,63,41,,29,,,,41,26',
'22,,,63,,,,,47,,93,,,93,,,22,,9,120,,,120,25,,,,121,121,121,9,41,25',
'25,26,,47,,,,,,,,,,,21,,,,,21,,,123,,,,31,,9,9,,28,9,,,,,,,,,26,,,,',
',21,22,,26,26,57,,,,,41,,,,,,,,,,,,,,9,41,123,,123,,,41,,41,69,,,,25',
',,,,,33,,,31,,41,57,,,,22,,22,,,,,25,22,,22,28,,28,,28,,22,,,,21,,,47',
',22,,,9,21,21,,,,26,121,121,121,121,,121,26,,9,,47,,,,9,,28,,,28,120',
',26,120,,120,,120,,,,25,,,22,25,,22,,25,25,,28,22,,,,,,,,,,22,,,25,',
',22,,,28,,,,25,,,121,121,121,121,,,,,,,,21,,26,,,,26,,,,,26,121,22,22',
',,,22,22,,,22,21,,,123,28,123,,,28,28,,,,22,26,,,,22,22,,120,,120,,120',
',120,,123,22,123,,123,,,,,,,,22,,,28,,,,,,,,,22,22,,,,,,21,,,,21,120',
',28,,21,,,,,,,,,,,,,,,,,28,,,,,,,22,,21,,,22,22,,,123,22,123,,123,,',
',,,,22,,,,,,,123,,,,22,,,,,,,,,25,,25,,,,,,25,28,,,,123,,,,25,,,,53',
'22,,,,53,,22,,,,,,,,,,,,22,,,,,,,,,,,26,,26,53,53,53,,,,,,,,,,,,,22',
'25,22,22,25,,22,,,,,,22,,,,,,,,53,53,53,53,,28,25,,,,,,,25,,,,22,,,',
',28,,,22,,,,22,,,26,,,26,,,,,53,,,21,,21,,,,53,53,,,,,,,26,,,,,,25,',
',,,25,25,,,,,,,,,,,25,,,,22,,,,,,,25,,,,,,,,22,26,,,25,25,22,,22,,,',
',,21,26,,21,,,26,26,,,22,,,,,,,,,,,,53,,,21,,,,,,,,,,25,,,,,25,26,26',
',,53,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,,,,26,21,21,,,26,25,,',
',,,25,,,26,,,,53,,,,53,25,,,53,53,,,,,,,,21,21,,,,,,,53,,,,,,,,,,53',
'25,25,,,25,,,,26,,25,52,,,,,52,,,,26,,,,,,21,,,,,21,,,,25,,,,,,21,,25',
'52,52,52,25,,,,26,26,,,26,,,,,,26,,,,,,,,,,,,,,,,,,52,52,52,52,,,,,',
',21,,,,,26,,,,26,,,21,25,,,,,,,,,,,,,,,25,,52,,,,25,,25,,,52,52,,,21',
'21,,,21,,,,,,21,,,,,,,,,,,26,,,,,,,,,,,,,,,26,53,,53,,,26,21,26,53,',
',,,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,52,,,,,,,,,,,,,,,,,,,,21,,,52,',
'53,,,53,,,,,,,21,,,,,,21,,21,,,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,52,,,,52,,,,52,52,,,,,,,,,,,,,,,53,52,,,,53,53,,,,,52,,,,,,53,,,,',
',,,,,,53,,,,,,,,,,,,53,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',53,,,,,53,,,,,,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,53,',
',,,,53,,,,,,,,,,,,53,,,,,,,,,,,,,,,,,,,,,52,,52,,,,,,52,,53,53,,,53',
',,52,,,53,,,,,,,,,,,,,,,,,,,,,,,,,53,,,,,,,,53,,,,53,,,,,,,,,,,,,52',
',,52,,,,,,,,,,,,,,,,,,,,,,52,,,,,,,,,,,,,,,,,53,,,,,,,,,,,,,,,53,,,',
',,53,,53,,,,,,,,,,,,,,,,,52,,,,,52,52,,,,,,,,,,,52,,,,,,,,,,,52,,,,',
',32,,,,,,52,52,,32,32,32,,,,,,,,,,,32,32,32,,,,,,,,,,,,,,,32,32,,,,',
',,,,,,52,,,,,52,,,,,,,,,,52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',52,,,,,,52,,,,,,,,,,,,52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,52,52,,,52,',
',,,,52,,,,,,,,,,,,,,,,,32,32,32,,,32,32,,52,,,,,,,,52,,,,52,32,,,32',
'32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
'32,32,,,,,,,32,32,,,,,,,,32,,,,,,,32,,32,52,32,32,,,,,,,,,,,,,52,,,',
',,52,,52,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,32,,32,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,',
'32,,32,,,,,,,,,,,,,,,32,,,,,,,,,,32,32,32,,,,,,,,,,32,,,32,,,,,,,,,',
',,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,32,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,32,32,,,32,32,32,32,,,,32,32,,,32,32,,,,,,,,,,,,,',
',,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,32,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,,,,,,,,,,,,,,32',
'32,32,32,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,32,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,32' ]
        racc_goto_check = arr = ::Array.new(3242, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   266,    25,   nil,    68,   132,    69,    52,  -300,    76,
  -483,  -621,  -553,   nil,  -248,    10,   233,   -16,  -165,   137,
    29,   896,   492,  -191,  -328,   764,   815,  -148,   512,    11,
    69,   -19,  2266,    -2,   nil,   nil,    34,  -206,    33,  -221,
  -333,     3,  -287,   nil,   109,    69,   113,   182,   nil,     3,
    69,  -218,  1609,  1276,  -251,    83,   -67,     2,   nil,   nil,
     8,    22,  -219,   -29,   116,   -50,    51,  -238,    54,   -13,
  -297,  -232,  -392,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   101,   111,   -54,   nil,   106,  -292,  -640,  -471,
  -316,    94,  -251,    19,  -534,   191,   197,   142,  -338,   123,
   114,  -533,    99,  -551,  -413,  -706,  -473,  -603,  -219,  -213,
  -430,  -690,  -763,  -441,  -425,  -752,  -474,   nil,  -430,  -469,
   182,    99,  -467,   263,  -534,  -526,   nil,  -529,  -688,  -726,
  -734,  -150,  -346,   123,  -287,   -10,   -64,   nil,   -73,   -73,
  -715,  -482,  -608,   nil,   nil,   121,   120,    41,   118,   118,
  -224,  -228,   134,   134,   134,  -358,  -358,  -342,  -313,   nil,
  -405,  -444,  -611,  -436,  -605,   nil,  -589,  -733,   nil,   nil,
  -430 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   341,   287,   nil,   518,
   nil,   831,   nil,   284,   285,   nil,   nil,   nil,    11,    12,
    18,   223,   316,   nil,   nil,   221,   222,   nil,   277,    17,
   nil,   435,    21,    22,    23,    24,   nil,   669,   nil,   nil,
   nil,   304,   nil,    25,   406,    32,   nil,   nil,    34,    37,
    36,   nil,   218,   219,   353,   nil,   126,   414,   125,   128,
    75,    76,   nil,    46,   nil,   802,   407,   nil,   408,   419,
   624,   481,   275,   261,    47,    48,    49,    50,    51,    52,
    53,    54,    55,   nil,   262,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   562,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   699,   546,   nil,   700,   919,   774,   534,   nil,
   535,   nil,   nil,   536,   nil,   538,   640,   nil,   nil,   nil,
   544,   nil,   nil,   nil,   735,   nil,   nil,   418,   nil,   nil,
   nil,   nil,   nil,    74,    77,    78,   nil,   nil,   nil,   nil,
   nil,   596,   nil,   nil,   nil,   nil,   nil,   nil,   816,   533,
   nil,   537,   548,   550,   786,   553,   554,   787,   557,   560,
   279 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 142, :_reduce_none,
  2, 143, :_reduce_2,
  0, 144, :_reduce_3,
  1, 144, :_reduce_4,
  3, 144, :_reduce_5,
  2, 144, :_reduce_6,
  1, 146, :_reduce_none,
  4, 146, :_reduce_8,
  4, 149, :_reduce_9,
  2, 150, :_reduce_10,
  0, 154, :_reduce_11,
  1, 154, :_reduce_12,
  3, 154, :_reduce_13,
  2, 154, :_reduce_14,
  1, 155, :_reduce_none,
  4, 155, :_reduce_16,
  0, 171, :_reduce_17,
  4, 148, :_reduce_18,
  3, 148, :_reduce_19,
  3, 148, :_reduce_20,
  3, 148, :_reduce_21,
  2, 148, :_reduce_22,
  3, 148, :_reduce_23,
  3, 148, :_reduce_24,
  3, 148, :_reduce_25,
  3, 148, :_reduce_26,
  3, 148, :_reduce_27,
  4, 148, :_reduce_28,
  1, 148, :_reduce_none,
  3, 148, :_reduce_30,
  3, 148, :_reduce_31,
  6, 148, :_reduce_32,
  5, 148, :_reduce_33,
  5, 148, :_reduce_34,
  5, 148, :_reduce_35,
  5, 148, :_reduce_36,
  3, 148, :_reduce_37,
  3, 148, :_reduce_38,
  3, 148, :_reduce_39,
  3, 148, :_reduce_40,
  1, 148, :_reduce_none,
  3, 159, :_reduce_42,
  3, 159, :_reduce_43,
  1, 170, :_reduce_none,
  3, 170, :_reduce_45,
  3, 170, :_reduce_46,
  3, 170, :_reduce_47,
  2, 170, :_reduce_48,
  1, 170, :_reduce_none,
  1, 158, :_reduce_none,
  1, 161, :_reduce_none,
  1, 161, :_reduce_none,
  1, 175, :_reduce_none,
  4, 175, :_reduce_54,
  0, 183, :_reduce_55,
  5, 180, :_reduce_56,
  1, 182, :_reduce_none,
  2, 174, :_reduce_58,
  3, 174, :_reduce_59,
  4, 174, :_reduce_60,
  5, 174, :_reduce_61,
  4, 174, :_reduce_62,
  5, 174, :_reduce_63,
  2, 174, :_reduce_64,
  2, 174, :_reduce_65,
  2, 174, :_reduce_66,
  2, 174, :_reduce_67,
  2, 174, :_reduce_68,
  1, 160, :_reduce_69,
  3, 160, :_reduce_70,
  1, 187, :_reduce_71,
  3, 187, :_reduce_72,
  1, 186, :_reduce_none,
  2, 186, :_reduce_74,
  3, 186, :_reduce_75,
  5, 186, :_reduce_76,
  2, 186, :_reduce_77,
  4, 186, :_reduce_78,
  2, 186, :_reduce_79,
  4, 186, :_reduce_80,
  1, 186, :_reduce_81,
  3, 186, :_reduce_82,
  1, 190, :_reduce_none,
  3, 190, :_reduce_84,
  2, 189, :_reduce_85,
  3, 189, :_reduce_86,
  1, 192, :_reduce_87,
  3, 192, :_reduce_88,
  1, 191, :_reduce_89,
  1, 191, :_reduce_90,
  4, 191, :_reduce_91,
  3, 191, :_reduce_92,
  3, 191, :_reduce_93,
  3, 191, :_reduce_94,
  3, 191, :_reduce_95,
  2, 191, :_reduce_96,
  1, 191, :_reduce_97,
  1, 167, :_reduce_98,
  1, 167, :_reduce_99,
  4, 167, :_reduce_100,
  3, 167, :_reduce_101,
  3, 167, :_reduce_102,
  3, 167, :_reduce_103,
  3, 167, :_reduce_104,
  2, 167, :_reduce_105,
  1, 167, :_reduce_106,
  1, 195, :_reduce_107,
  1, 195, :_reduce_none,
  2, 196, :_reduce_109,
  1, 196, :_reduce_110,
  3, 196, :_reduce_111,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 200, :_reduce_117,
  1, 200, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 157, :_reduce_121,
  0, 203, :_reduce_122,
  4, 157, :_reduce_123,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  3, 173, :_reduce_195,
  5, 173, :_reduce_196,
  3, 173, :_reduce_197,
  5, 173, :_reduce_198,
  6, 173, :_reduce_199,
  5, 173, :_reduce_200,
  5, 173, :_reduce_201,
  5, 173, :_reduce_202,
  5, 173, :_reduce_203,
  4, 173, :_reduce_204,
  3, 173, :_reduce_205,
  3, 173, :_reduce_206,
  3, 173, :_reduce_207,
  3, 173, :_reduce_208,
  3, 173, :_reduce_209,
  3, 173, :_reduce_210,
  3, 173, :_reduce_211,
  3, 173, :_reduce_212,
  3, 173, :_reduce_213,
  4, 173, :_reduce_214,
  4, 173, :_reduce_215,
  2, 173, :_reduce_216,
  2, 173, :_reduce_217,
  3, 173, :_reduce_218,
  3, 173, :_reduce_219,
  3, 173, :_reduce_220,
  3, 173, :_reduce_221,
  3, 173, :_reduce_222,
  3, 173, :_reduce_223,
  3, 173, :_reduce_224,
  3, 173, :_reduce_225,
  3, 173, :_reduce_226,
  3, 173, :_reduce_227,
  3, 173, :_reduce_228,
  3, 173, :_reduce_229,
  3, 173, :_reduce_230,
  2, 173, :_reduce_231,
  2, 173, :_reduce_232,
  3, 173, :_reduce_233,
  3, 173, :_reduce_234,
  3, 173, :_reduce_235,
  3, 173, :_reduce_236,
  3, 173, :_reduce_237,
  6, 173, :_reduce_238,
  1, 173, :_reduce_none,
  1, 169, :_reduce_none,
  1, 205, :_reduce_none,
  2, 205, :_reduce_none,
  4, 205, :_reduce_243,
  2, 205, :_reduce_244,
  3, 210, :_reduce_245,
  0, 211, :_reduce_246,
  1, 211, :_reduce_none,
  0, 164, :_reduce_248,
  1, 164, :_reduce_none,
  2, 164, :_reduce_none,
  4, 164, :_reduce_251,
  2, 164, :_reduce_252,
  1, 185, :_reduce_253,
  2, 185, :_reduce_254,
  2, 185, :_reduce_255,
  4, 185, :_reduce_256,
  1, 185, :_reduce_257,
  0, 214, :_reduce_258,
  2, 179, :_reduce_259,
  2, 213, :_reduce_260,
  2, 212, :_reduce_261,
  0, 212, :_reduce_262,
  1, 207, :_reduce_263,
  2, 207, :_reduce_264,
  3, 207, :_reduce_265,
  4, 207, :_reduce_266,
  3, 168, :_reduce_267,
  4, 168, :_reduce_268,
  2, 168, :_reduce_269,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_280,
  0, 237, :_reduce_281,
  4, 204, :_reduce_282,
  0, 238, :_reduce_283,
  0, 239, :_reduce_284,
  6, 204, :_reduce_285,
  0, 240, :_reduce_286,
  4, 204, :_reduce_287,
  3, 204, :_reduce_288,
  3, 204, :_reduce_289,
  2, 204, :_reduce_290,
  3, 204, :_reduce_291,
  3, 204, :_reduce_292,
  1, 204, :_reduce_293,
  4, 204, :_reduce_294,
  3, 204, :_reduce_295,
  1, 204, :_reduce_296,
  5, 204, :_reduce_297,
  4, 204, :_reduce_298,
  3, 204, :_reduce_299,
  2, 204, :_reduce_300,
  1, 204, :_reduce_none,
  2, 204, :_reduce_302,
  2, 204, :_reduce_303,
  6, 204, :_reduce_304,
  6, 204, :_reduce_305,
  0, 241, :_reduce_306,
  0, 242, :_reduce_307,
  7, 204, :_reduce_308,
  0, 243, :_reduce_309,
  0, 244, :_reduce_310,
  7, 204, :_reduce_311,
  5, 204, :_reduce_312,
  4, 204, :_reduce_313,
  0, 245, :_reduce_314,
  0, 246, :_reduce_315,
  9, 204, :_reduce_316,
  0, 247, :_reduce_317,
  6, 204, :_reduce_318,
  0, 248, :_reduce_319,
  7, 204, :_reduce_320,
  0, 249, :_reduce_321,
  5, 204, :_reduce_322,
  0, 250, :_reduce_323,
  6, 204, :_reduce_324,
  0, 251, :_reduce_325,
  0, 252, :_reduce_326,
  9, 204, :_reduce_327,
  1, 204, :_reduce_328,
  1, 204, :_reduce_329,
  1, 204, :_reduce_330,
  1, 204, :_reduce_331,
  1, 163, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  2, 228, :_reduce_335,
  1, 230, :_reduce_none,
  1, 230, :_reduce_none,
  1, 229, :_reduce_none,
  5, 229, :_reduce_339,
  1, 152, :_reduce_none,
  2, 152, :_reduce_341,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  1, 253, :_reduce_344,
  3, 253, :_reduce_345,
  1, 256, :_reduce_346,
  3, 256, :_reduce_347,
  1, 255, :_reduce_none,
  4, 255, :_reduce_349,
  6, 255, :_reduce_350,
  3, 255, :_reduce_351,
  5, 255, :_reduce_352,
  2, 255, :_reduce_353,
  4, 255, :_reduce_354,
  1, 255, :_reduce_355,
  3, 255, :_reduce_356,
  4, 257, :_reduce_357,
  2, 257, :_reduce_358,
  2, 257, :_reduce_359,
  1, 257, :_reduce_360,
  2, 262, :_reduce_361,
  0, 262, :_reduce_362,
  6, 263, :_reduce_363,
  8, 263, :_reduce_364,
  4, 263, :_reduce_365,
  6, 263, :_reduce_366,
  4, 263, :_reduce_367,
  2, 263, :_reduce_none,
  6, 263, :_reduce_369,
  2, 263, :_reduce_370,
  4, 263, :_reduce_371,
  6, 263, :_reduce_372,
  2, 263, :_reduce_373,
  4, 263, :_reduce_374,
  2, 263, :_reduce_375,
  4, 263, :_reduce_376,
  1, 263, :_reduce_none,
  0, 181, :_reduce_378,
  1, 181, :_reduce_379,
  3, 267, :_reduce_380,
  1, 267, :_reduce_381,
  4, 267, :_reduce_382,
  1, 268, :_reduce_383,
  4, 268, :_reduce_384,
  1, 269, :_reduce_385,
  3, 269, :_reduce_386,
  1, 270, :_reduce_387,
  1, 270, :_reduce_none,
  0, 274, :_reduce_389,
  3, 227, :_reduce_390,
  4, 272, :_reduce_391,
  1, 272, :_reduce_392,
  3, 273, :_reduce_393,
  3, 273, :_reduce_394,
  0, 277, :_reduce_395,
  5, 276, :_reduce_396,
  2, 176, :_reduce_397,
  4, 176, :_reduce_398,
  5, 176, :_reduce_399,
  5, 176, :_reduce_400,
  2, 226, :_reduce_401,
  4, 226, :_reduce_402,
  4, 226, :_reduce_403,
  3, 226, :_reduce_404,
  3, 226, :_reduce_405,
  3, 226, :_reduce_406,
  2, 226, :_reduce_407,
  1, 226, :_reduce_408,
  4, 226, :_reduce_409,
  0, 279, :_reduce_410,
  5, 225, :_reduce_411,
  0, 280, :_reduce_412,
  5, 225, :_reduce_413,
  5, 231, :_reduce_414,
  1, 281, :_reduce_415,
  1, 281, :_reduce_none,
  6, 151, :_reduce_417,
  0, 151, :_reduce_418,
  1, 282, :_reduce_419,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 283, :_reduce_422,
  1, 283, :_reduce_none,
  2, 153, :_reduce_424,
  1, 153, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 216, :_reduce_429,
  1, 285, :_reduce_430,
  2, 285, :_reduce_431,
  3, 286, :_reduce_432,
  1, 286, :_reduce_433,
  1, 286, :_reduce_434,
  3, 217, :_reduce_435,
  4, 218, :_reduce_436,
  3, 219, :_reduce_437,
  0, 290, :_reduce_438,
  3, 290, :_reduce_439,
  1, 291, :_reduce_440,
  2, 291, :_reduce_441,
  3, 221, :_reduce_442,
  0, 293, :_reduce_443,
  3, 293, :_reduce_444,
  3, 220, :_reduce_445,
  3, 222, :_reduce_446,
  0, 294, :_reduce_447,
  3, 294, :_reduce_448,
  0, 295, :_reduce_449,
  3, 295, :_reduce_450,
  0, 287, :_reduce_451,
  2, 287, :_reduce_452,
  0, 288, :_reduce_453,
  2, 288, :_reduce_454,
  0, 289, :_reduce_455,
  2, 289, :_reduce_456,
  1, 292, :_reduce_457,
  2, 292, :_reduce_458,
  0, 297, :_reduce_459,
  4, 292, :_reduce_460,
  1, 296, :_reduce_461,
  1, 296, :_reduce_462,
  1, 296, :_reduce_463,
  1, 296, :_reduce_none,
  1, 201, :_reduce_465,
  3, 202, :_reduce_466,
  1, 284, :_reduce_467,
  1, 284, :_reduce_468,
  2, 284, :_reduce_469,
  2, 284, :_reduce_470,
  1, 193, :_reduce_471,
  1, 193, :_reduce_472,
  1, 193, :_reduce_473,
  1, 193, :_reduce_474,
  1, 193, :_reduce_475,
  1, 194, :_reduce_476,
  1, 194, :_reduce_477,
  1, 194, :_reduce_478,
  1, 194, :_reduce_479,
  1, 194, :_reduce_480,
  1, 194, :_reduce_481,
  1, 194, :_reduce_482,
  1, 223, :_reduce_483,
  1, 223, :_reduce_484,
  1, 162, :_reduce_485,
  1, 162, :_reduce_486,
  1, 166, :_reduce_487,
  1, 166, :_reduce_488,
  1, 233, :_reduce_489,
  0, 298, :_reduce_490,
  4, 233, :_reduce_491,
  2, 233, :_reduce_492,
  3, 235, :_reduce_493,
  2, 235, :_reduce_494,
  4, 299, :_reduce_495,
  2, 299, :_reduce_496,
  2, 299, :_reduce_497,
  1, 299, :_reduce_498,
  2, 301, :_reduce_499,
  0, 301, :_reduce_500,
  6, 275, :_reduce_501,
  8, 275, :_reduce_502,
  4, 275, :_reduce_503,
  6, 275, :_reduce_504,
  4, 275, :_reduce_505,
  6, 275, :_reduce_506,
  2, 275, :_reduce_507,
  4, 275, :_reduce_508,
  6, 275, :_reduce_509,
  2, 275, :_reduce_510,
  4, 275, :_reduce_511,
  2, 275, :_reduce_512,
  4, 275, :_reduce_513,
  1, 275, :_reduce_514,
  0, 275, :_reduce_515,
  1, 271, :_reduce_516,
  1, 271, :_reduce_517,
  1, 271, :_reduce_518,
  1, 271, :_reduce_519,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  1, 303, :_reduce_522,
  3, 303, :_reduce_523,
  1, 264, :_reduce_524,
  3, 264, :_reduce_525,
  2, 304, :_reduce_526,
  2, 305, :_reduce_527,
  1, 258, :_reduce_528,
  3, 258, :_reduce_529,
  1, 300, :_reduce_530,
  3, 300, :_reduce_531,
  1, 306, :_reduce_none,
  1, 306, :_reduce_none,
  2, 259, :_reduce_534,
  1, 259, :_reduce_535,
  3, 307, :_reduce_536,
  3, 308, :_reduce_537,
  1, 265, :_reduce_538,
  3, 265, :_reduce_539,
  1, 302, :_reduce_540,
  3, 302, :_reduce_541,
  1, 309, :_reduce_none,
  1, 309, :_reduce_none,
  2, 266, :_reduce_544,
  1, 266, :_reduce_545,
  1, 310, :_reduce_none,
  1, 310, :_reduce_none,
  2, 261, :_reduce_548,
  2, 260, :_reduce_549,
  0, 260, :_reduce_550,
  1, 236, :_reduce_none,
  3, 236, :_reduce_552,
  0, 224, :_reduce_553,
  2, 224, :_reduce_none,
  1, 209, :_reduce_555,
  3, 209, :_reduce_556,
  3, 311, :_reduce_557,
  2, 311, :_reduce_558,
  2, 311, :_reduce_559,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 184, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 278, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 172, :_reduce_none,
  1, 172, :_reduce_none,
  2, 188, :_reduce_576,
  2, 165, :_reduce_577,
  0, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 234, :_reduce_581,
  1, 234, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_none,
  0, 206, :_reduce_585 ]

racc_reduce_n = 586

racc_shift_n = 1014

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tEQL => 139,
  :tLOWEST => 140 }

racc_nt_base = 141

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "primary",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@21",
  "f_args",
  "do_block",
  "@22",
  "operation3",
  "@23",
  "@24",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@25",
  "@26",
  "args_tail",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_item",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby20.y', 51)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 56)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 60)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 64)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 68)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby20.y', 74)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 79)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 95)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 100)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 104)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 108)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 112)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby20.y', 118)
  def _reduce_16(val, _values, result)
                          if in_def?
                        diagnostic :error, :begin_in_method, nil, val[0]
                      end

                      result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 127)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 131)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 135)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 141)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 147)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 151)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 155)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 160)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 165)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 169)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 173)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 181)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby20.y', 186)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 190)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 194)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 201)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 208)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 215)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 222)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 229)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 233)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 238)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 242)
  def _reduce_40(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'ruby20.y', 249)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 253)
  def _reduce_43(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'ruby20.y', 259)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 263)
  def _reduce_46(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 267)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 271)
  def _reduce_48(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'ruby20.y', 283)
  def _reduce_54(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 289)
  def _reduce_55(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 293)
  def _reduce_56(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'ruby20.y', 302)
  def _reduce_58(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 307)
  def _reduce_59(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 316)
  def _reduce_60(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 321)
  def _reduce_61(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 330)
  def _reduce_62(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 335)
  def _reduce_63(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 344)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 349)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 354)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 359)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 364)
  def _reduce_68(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 370)
  def _reduce_69(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 374)
  def _reduce_70(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 379)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 383)
  def _reduce_72(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'ruby20.y', 389)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 394)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 399)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 405)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 410)
  def _reduce_78(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 416)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 420)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 425)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 429)
  def _reduce_82(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 83 omitted

module_eval(<<'.,.,', 'ruby20.y', 436)
  def _reduce_84(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 441)
  def _reduce_85(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 445)
  def _reduce_86(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 450)
  def _reduce_87(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 454)
  def _reduce_88(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 459)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 463)
  def _reduce_90(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 467)
  def _reduce_91(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 471)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 475)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 479)
  def _reduce_94(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 483)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 488)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 493)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 498)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 502)
  def _reduce_99(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 506)
  def _reduce_100(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 510)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 514)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 518)
  def _reduce_103(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 522)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 527)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 532)
  def _reduce_106(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 537)
  def _reduce_107(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'ruby20.y', 543)
  def _reduce_109(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 547)
  def _reduce_110(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 551)
  def _reduce_111(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'ruby20.y', 560)
  def _reduce_117(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

module_eval(<<'.,.,', 'ruby20.y', 569)
  def _reduce_121(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 573)
  def _reduce_122(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 577)
  def _reduce_123(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

module_eval(<<'.,.,', 'ruby20.y', 598)
  def _reduce_195(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 602)
  def _reduce_196(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 612)
  def _reduce_197(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 616)
  def _reduce_198(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 626)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 633)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 640)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 647)
  def _reduce_202(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 654)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 660)
  def _reduce_204(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 666)
  def _reduce_205(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 670)
  def _reduce_206(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 674)
  def _reduce_207(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 678)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 682)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 686)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 690)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 694)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 698)
  def _reduce_213(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 702)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.integer(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 709)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.float(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 716)
  def _reduce_216(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 720)
  def _reduce_217(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 724)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 728)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 732)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 736)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 740)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 744)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 748)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 752)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 756)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 760)
  def _reduce_227(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 764)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 768)
  def _reduce_229(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 772)
  def _reduce_230(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 776)
  def _reduce_231(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 780)
  def _reduce_232(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 784)
  def _reduce_233(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 788)
  def _reduce_234(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 792)
  def _reduce_235(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 796)
  def _reduce_236(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 800)
  def _reduce_237(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 805)
  def _reduce_238(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 239 omitted

# reduce 240 omitted

# reduce 241 omitted

# reduce 242 omitted

module_eval(<<'.,.,', 'ruby20.y', 816)
  def _reduce_243(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 820)
  def _reduce_244(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 825)
  def _reduce_245(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 830)
  def _reduce_246(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 247 omitted

module_eval(<<'.,.,', 'ruby20.y', 836)
  def _reduce_248(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 249 omitted

# reduce 250 omitted

module_eval(<<'.,.,', 'ruby20.y', 842)
  def _reduce_251(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 846)
  def _reduce_252(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 851)
  def _reduce_253(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 855)
  def _reduce_254(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 859)
  def _reduce_255(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 864)
  def _reduce_256(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 870)
  def _reduce_257(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 874)
  def _reduce_258(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 879)
  def _reduce_259(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 886)
  def _reduce_260(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 891)
  def _reduce_261(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 895)
  def _reduce_262(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 900)
  def _reduce_263(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 904)
  def _reduce_264(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 908)
  def _reduce_265(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 912)
  def _reduce_266(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 917)
  def _reduce_267(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 921)
  def _reduce_268(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 925)
  def _reduce_269(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

module_eval(<<'.,.,', 'ruby20.y', 940)
  def _reduce_280(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 944)
  def _reduce_281(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 949)
  def _reduce_282(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 955)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 960)
  def _reduce_284(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 964)
  def _reduce_285(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 970)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 974)
  def _reduce_287(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 978)
  def _reduce_288(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 982)
  def _reduce_289(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 986)
  def _reduce_290(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 990)
  def _reduce_291(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 994)
  def _reduce_292(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 998)
  def _reduce_293(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1002)
  def _reduce_294(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1006)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1010)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1014)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1019)
  def _reduce_298(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1023)
  def _reduce_299(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1027)
  def _reduce_300(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 301 omitted

module_eval(<<'.,.,', 'ruby20.y', 1036)
  def _reduce_302(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1042)
  def _reduce_303(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1050)
  def _reduce_304(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1057)
  def _reduce_305(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1064)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1068)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1072)
  def _reduce_308(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1077)
  def _reduce_309(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1081)
  def _reduce_310(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1085)
  def _reduce_311(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1090)
  def _reduce_312(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1098)
  def _reduce_313(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1106)
  def _reduce_314(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1110)
  def _reduce_315(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1114)
  def _reduce_316(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1120)
  def _reduce_317(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1125)
  def _reduce_318(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1139)
  def _reduce_319(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1147)
  def _reduce_320(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1157)
  def _reduce_321(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1162)
  def _reduce_322(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1174)
  def _reduce_323(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1180)
  def _reduce_324(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1189)
  def _reduce_325(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1193)
  def _reduce_326(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1199)
  def _reduce_327(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1208)
  def _reduce_328(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1212)
  def _reduce_329(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1216)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1220)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'ruby20.y', 1229)
  def _reduce_335(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

module_eval(<<'.,.,', 'ruby20.y', 1238)
  def _reduce_339(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby20.y', 1249)
  def _reduce_341(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 342 omitted

# reduce 343 omitted

module_eval(<<'.,.,', 'ruby20.y', 1257)
  def _reduce_344(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1263)
  def _reduce_345(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1268)
  def _reduce_346(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1272)
  def _reduce_347(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 348 omitted

module_eval(<<'.,.,', 'ruby20.y', 1278)
  def _reduce_349(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1285)
  def _reduce_350(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1293)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1298)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1304)
  def _reduce_353(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1310)
  def _reduce_354(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1317)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1321)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1327)
  def _reduce_357(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1331)
  def _reduce_358(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1335)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1339)
  def _reduce_360(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1345)
  def _reduce_361(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1349)
  def _reduce_362(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1354)
  def _reduce_363(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1361)
  def _reduce_364(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1369)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1375)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1382)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 368 omitted

module_eval(<<'.,.,', 'ruby20.y', 1389)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1396)
  def _reduce_370(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1400)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1406)
  def _reduce_372(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1413)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1418)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1424)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1429)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 377 omitted

module_eval(<<'.,.,', 'ruby20.y', 1437)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1441)
  def _reduce_379(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1446)
  def _reduce_380(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1450)
  def _reduce_381(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1454)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1459)
  def _reduce_383(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1463)
  def _reduce_384(val, _values, result)
                          result = val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1468)
  def _reduce_385(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1472)
  def _reduce_386(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1477)
  def _reduce_387(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 388 omitted

module_eval(<<'.,.,', 'ruby20.y', 1482)
  def _reduce_389(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1486)
  def _reduce_390(val, _values, result)
                          result = [ val[1], val[2] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1493)
  def _reduce_391(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1497)
  def _reduce_392(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1502)
  def _reduce_393(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1506)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1511)
  def _reduce_395(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1515)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1522)
  def _reduce_397(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1528)
  def _reduce_398(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1534)
  def _reduce_399(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1544)
  def _reduce_400(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1554)
  def _reduce_401(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1560)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1566)
  def _reduce_403(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1572)
  def _reduce_404(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1576)
  def _reduce_405(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1582)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1588)
  def _reduce_407(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1594)
  def _reduce_408(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1598)
  def _reduce_409(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1603)
  def _reduce_410(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1607)
  def _reduce_411(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1613)
  def _reduce_412(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1617)
  def _reduce_413(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1624)
  def _reduce_414(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1630)
  def _reduce_415(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 416 omitted

module_eval(<<'.,.,', 'ruby20.y', 1636)
  def _reduce_417(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1649)
  def _reduce_418(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1654)
  def _reduce_419(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 420 omitted

# reduce 421 omitted

module_eval(<<'.,.,', 'ruby20.y', 1661)
  def _reduce_422(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 423 omitted

module_eval(<<'.,.,', 'ruby20.y', 1667)
  def _reduce_424(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 425 omitted

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

module_eval(<<'.,.,', 'ruby20.y', 1677)
  def _reduce_429(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1682)
  def _reduce_430(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1686)
  def _reduce_431(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1691)
  def _reduce_432(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1695)
  def _reduce_433(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1699)
  def _reduce_434(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1704)
  def _reduce_435(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1709)
  def _reduce_436(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1715)
  def _reduce_437(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1720)
  def _reduce_438(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1724)
  def _reduce_439(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1729)
  def _reduce_440(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1733)
  def _reduce_441(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1738)
  def _reduce_442(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1743)
  def _reduce_443(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1747)
  def _reduce_444(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1752)
  def _reduce_445(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1757)
  def _reduce_446(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1762)
  def _reduce_447(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1766)
  def _reduce_448(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1771)
  def _reduce_449(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1775)
  def _reduce_450(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1780)
  def _reduce_451(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1784)
  def _reduce_452(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1789)
  def _reduce_453(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1793)
  def _reduce_454(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1798)
  def _reduce_455(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1802)
  def _reduce_456(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1807)
  def _reduce_457(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1811)
  def _reduce_458(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1815)
  def _reduce_459(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1820)
  def _reduce_460(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1828)
  def _reduce_461(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1832)
  def _reduce_462(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1836)
  def _reduce_463(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 464 omitted

module_eval(<<'.,.,', 'ruby20.y', 1843)
  def _reduce_465(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1848)
  def _reduce_466(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1853)
  def _reduce_467(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1857)
  def _reduce_468(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1861)
  def _reduce_469(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.integer(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1866)
  def _reduce_470(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.float(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1872)
  def _reduce_471(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1876)
  def _reduce_472(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1880)
  def _reduce_473(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1884)
  def _reduce_474(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1888)
  def _reduce_475(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1893)
  def _reduce_476(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1897)
  def _reduce_477(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1901)
  def _reduce_478(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1905)
  def _reduce_479(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1909)
  def _reduce_480(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1913)
  def _reduce_481(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1917)
  def _reduce_482(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1922)
  def _reduce_483(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1926)
  def _reduce_484(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1931)
  def _reduce_485(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1935)
  def _reduce_486(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1940)
  def _reduce_487(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1944)
  def _reduce_488(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1949)
  def _reduce_489(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1953)
  def _reduce_490(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1957)
  def _reduce_491(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1961)
  def _reduce_492(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1967)
  def _reduce_493(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1973)
  def _reduce_494(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1978)
  def _reduce_495(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1982)
  def _reduce_496(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1986)
  def _reduce_497(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1990)
  def _reduce_498(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1995)
  def _reduce_499(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 1999)
  def _reduce_500(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2004)
  def _reduce_501(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2011)
  def _reduce_502(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2019)
  def _reduce_503(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2025)
  def _reduce_504(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2032)
  def _reduce_505(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2038)
  def _reduce_506(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2045)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2050)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2056)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2063)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2068)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2074)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2079)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2085)
  def _reduce_514(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2089)
  def _reduce_515(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2094)
  def _reduce_516(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2098)
  def _reduce_517(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2102)
  def _reduce_518(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2106)
  def _reduce_519(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 520 omitted

# reduce 521 omitted

module_eval(<<'.,.,', 'ruby20.y', 2114)
  def _reduce_522(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2120)
  def _reduce_523(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2125)
  def _reduce_524(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2129)
  def _reduce_525(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2134)
  def _reduce_526(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2143)
  def _reduce_527(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2152)
  def _reduce_528(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2156)
  def _reduce_529(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2161)
  def _reduce_530(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2165)
  def _reduce_531(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 532 omitted

# reduce 533 omitted

module_eval(<<'.,.,', 'ruby20.y', 2172)
  def _reduce_534(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2178)
  def _reduce_535(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2183)
  def _reduce_536(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2190)
  def _reduce_537(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2197)
  def _reduce_538(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2201)
  def _reduce_539(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2206)
  def _reduce_540(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2210)
  def _reduce_541(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 542 omitted

# reduce 543 omitted

module_eval(<<'.,.,', 'ruby20.y', 2217)
  def _reduce_544(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2223)
  def _reduce_545(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 546 omitted

# reduce 547 omitted

module_eval(<<'.,.,', 'ruby20.y', 2230)
  def _reduce_548(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2237)
  def _reduce_549(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2241)
  def _reduce_550(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 551 omitted

module_eval(<<'.,.,', 'ruby20.y', 2247)
  def _reduce_552(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2252)
  def _reduce_553(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 554 omitted

module_eval(<<'.,.,', 'ruby20.y', 2258)
  def _reduce_555(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2262)
  def _reduce_556(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2267)
  def _reduce_557(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2271)
  def _reduce_558(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2275)
  def _reduce_559(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])
                    
    result
  end
.,.,

# reduce 560 omitted

# reduce 561 omitted

# reduce 562 omitted

# reduce 563 omitted

# reduce 564 omitted

# reduce 565 omitted

# reduce 566 omitted

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

module_eval(<<'.,.,', 'ruby20.y', 2286)
  def _reduce_576(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby20.y', 2290)
  def _reduce_577(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

module_eval(<<'.,.,', 'ruby20.y', 2296)
  def _reduce_581(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 582 omitted

# reduce 583 omitted

# reduce 584 omitted

module_eval(<<'.,.,', 'ruby20.y', 2305)
  def _reduce_585(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby20
  end   # module Parser
