# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby21 < Parser::Base

module_eval(<<'...end ruby21.y/module_eval...', 'ruby21.y', 2326)

  def version
    21
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby21.y/module_eval...
##### State transition tables begin ###

clist = [
'-574,565,565,-101,268,-98,-99,-574,-574,-574,268,-99,-574,-574,-574',
'217,-574,586,644,-100,-286,961,214,215,-102,-574,-574,-574,-574,-105',
'-97,810,801,607,571,565,-574,-574,-487,-574,-574,-574,-574,-574,609',
'-487,-104,565,-100,-83,711,565,-103,643,-487,-482,218,-69,-102,395,-286',
'238,-482,801,397,396,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574',
'-574,-574,-574,-574,-570,711,-574,-574,-574,711,768,-574,214,215,-574',
'267,-101,-574,-574,836,-574,267,-574,606,-574,634,-574,-574,268,-574',
'-574,-574,-574,-574,608,-574,-574,-574,-89,-90,218,-571,-91,113,113',
'-101,218,585,112,112,-101,-574,-91,-99,-574,-574,-574,-574,-99,-574',
'-474,-574,-96,-88,809,-101,-102,-474,-474,-474,113,-102,-474,-474,-474',
'112,-474,113,113,-95,837,-570,112,112,-474,-94,-474,-474,-474,113,-100',
'-93,263,113,112,-100,-474,-474,112,-474,-474,-474,-474,-474,631,644',
'113,113,-91,113,-93,112,112,113,112,267,214,215,112,268,644,263,513',
'214,215,-92,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474',
'-474,-474,643,577,-474,-474,-474,578,-474,-474,-91,-488,-474,-91,767',
'-474,-474,643,-474,-484,-474,-91,-474,621,-474,-474,-484,-474,-474,-474',
'-474,-474,855,-474,-477,-474,91,92,-93,-104,620,-477,-477,-477,443,263',
'-477,-477,-477,-474,-477,113,-474,-474,-474,-474,112,-474,-477,-474',
'-477,-477,-477,-474,561,560,-97,-567,267,-102,-477,-477,218,-477,-477',
'-477,-477,-477,-93,218,546,-93,543,542,541,594,544,-99,546,-93,543,542',
'541,766,544,91,92,218,644,-105,-477,-477,-477,-477,-477,-477,-477,-477',
'-477,-477,-477,-477,-477,-477,93,94,-477,-477,-477,-474,-477,-477,-489',
'616,-477,826,-474,-477,-477,594,-477,-567,-477,643,-477,-474,-477,-477',
'-568,-477,-477,-477,-477,-477,-289,-477,218,-477,-100,596,595,-289,-289',
'-289,-567,-261,-483,-289,-289,743,-289,-477,828,-483,-477,-477,-477',
'-477,238,-477,951,-477,-410,93,94,-477,79,-98,214,215,-289,-289,-485',
'-289,-289,-289,-289,-289,80,-485,-477,614,260,596,595,845,594,-477,81',
'261,235,611,-568,745,237,236,-477,233,234,238,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-410,-568,-289,-289,-289',
'525,627,-410,527,623,-289,752,594,-289,-474,594,-410,238,-289,594,-289',
'-474,-289,-289,594,-289,-289,-289,-289,-289,594,-289,-574,-289,238,-410',
'596,595,592,-574,-574,-574,832,801,218,-574,-574,-289,-574,550,-289',
'-289,-263,-94,218,-289,-93,-574,-90,553,-574,-103,113,-479,-102,218',
'-99,112,-574,-574,-479,-574,-574,-574,-574,-574,596,595,599,596,595',
'601,113,596,595,605,113,112,596,595,610,112,561,560,596,595,597,554',
'-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574,-574',
'-574,515,-574,-574,-574,212,628,-574,516,218,-574,854,-570,-574,-477',
'218,-574,441,-574,-83,-574,-477,-574,-574,-574,-574,-574,-574,-574,-574',
'-289,-574,-574,-574,-488,-574,113,-289,-289,-289,513,112,-289,-289,-289',
'801,-289,-574,238,662,-574,-574,-96,-92,238,-574,-289,-289,-289,218',
'-105,-101,974,622,214,215,-289,-289,-480,-289,-289,-289,-289,-289,-489',
'-480,-574,214,215,525,235,-88,527,-574,237,236,235,-95,-570,-97,237',
'236,-574,233,234,-104,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,-91,-574,-289,-289,-289,-289,769,-289,-100,238,-289',
'-89,-289,-289,-289,576,-289,-571,-289,-98,-289,-289,-289,-289,575,-289',
'-289,-289,-289,-289,-481,-289,546,-289,543,542,541,-481,544,218,546',
'260,543,542,541,387,544,-289,261,571,-289,-289,-289,-289,673,-289,525',
'-289,857,527,688,-103,289,69,70,71,9,57,860,697,525,63,64,524,832,801',
'67,697,65,66,68,30,31,72,73,862,700,864,866,218,29,28,27,101,100,102',
'103,737,738,19,868,739,107,108,632,8,45,291,10,105,104,106,95,56,97',
'96,98,869,99,107,108,263,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,-279,231,232,-290,872,252,253,-279,40,489,-290,33,874',
'875,58,59,-279,673,60,-290,35,235,518,241,44,237,236,550,233,234,245',
'243,239,20,240,877,529,553,89,79,82,83,210,84,86,85,87,-261,881,211',
'883,80,88,528,256,263,-238,886,209,62,688,81,93,94,289,69,70,71,9,57',
'561,560,505,63,64,554,888,890,67,506,65,66,68,30,31,72,73,892,504,894',
'894,218,29,28,27,101,100,102,103,673,900,19,218,902,238,904,617,8,45',
'291,10,105,104,106,95,56,97,96,98,678,99,107,108,514,91,92,42,43,41',
'238,242,247,248,249,244,246,254,255,250,251,-289,231,232,-290,510,252',
'253,-289,40,263,-290,33,-571,218,58,59,-289,272,60,-290,35,235,910,241',
'44,237,236,218,233,234,245,243,239,20,240,673,913,218,89,79,82,83,-290',
'84,86,85,87,679,917,-290,-264,80,88,507,256,794,489,487,-290,62,500',
'81,93,94,289,69,70,71,9,57,499,218,-332,63,64,-68,927,681,67,-332,65',
'66,68,30,31,72,73,496,-332,685,934,935,29,28,27,101,100,102,103,688',
'689,19,489,944,945,487,632,8,45,291,10,105,104,106,95,56,97,96,98,485',
'99,107,108,476,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,-289,231,232,581,217,252,253,-289,40,445,580,33,-571,444,58,59,-289',
'953,60,582,35,235,442,241,44,237,236,955,233,234,245,243,239,20,240',
'956,257,218,89,79,82,83,-486,84,86,85,87,732,688,-486,964,80,88,966',
'256,968,970,970,-486,62,691,81,93,94,5,69,70,71,9,57,693,771,-279,63',
'64,398,695,218,67,-279,65,66,68,30,31,72,73,703,-279,981,704,982,29',
'28,27,101,100,102,103,894,930,19,543,542,541,894,544,8,45,7,10,105,104',
'106,95,56,97,96,98,894,99,107,108,987,91,92,42,43,41,238,242,247,248',
'249,244,246,254,255,250,251,979,231,232,581,705,252,253,980,40,953,933',
'33,385,707,58,59,978,571,60,582,35,235,218,241,44,237,236,316,233,234',
'245,243,239,20,240,315,714,257,89,79,82,83,-486,84,86,85,87,476,-571',
'-486,-570,80,88,678,256,476,213,732,-486,62,-262,81,93,94,5,69,70,71',
'9,57,208,207,439,63,64,953,742,1006,67,440,65,66,68,30,31,72,73,1007',
'441,1008,970,970,29,28,27,101,100,102,103,970,930,19,543,542,541,218',
'544,8,45,7,10,105,104,106,95,56,97,96,98,206,99,107,108,121,91,92,42',
'43,41,238,242,247,248,249,244,246,254,255,250,251,581,231,232,573,746',
'252,253,933,40,753,574,33,894,953,58,59,582,747,60,572,35,235,109,241',
'44,237,236,970,233,234,245,243,239,20,240,,,,89,79,82,83,-487,84,86',
'85,87,,,-487,,80,88,,256,,,,-487,62,,81,93,94,289,69,70,71,9,57,,,,63',
'64,,,,67,,65,66,68,30,31,72,73,116,117,118,119,120,29,28,27,101,100',
'102,103,,,19,116,117,118,119,120,8,45,291,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256',
',,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,116,117,118,119,120,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248',
'249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60',
',35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
'238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,',
',33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,218,256,,,,,62,,81,93,94,289,69',
'70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232',
',,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245',
'243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81',
'93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256',
',,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248',
'249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60',
',35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
'238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,',
',33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,289',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231',
'232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234',
'245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62',
',81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255',
'250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,256,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,546,19,543,542',
'541,,544,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,546,,543,542,541,,544,,697,,546,,543,542,541,,544,700,,40,,,33',
',,58,59,,238,60,546,35,543,542,541,44,544,697,,,,,,,20,,899,697,,89',
'79,82,83,,84,86,85,87,,,235,,80,88,237,236,,697,,,62,,81,93,94,289,69',
'70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,-593,-593',
',,252,253,,40,,,293,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245',
'243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,546,,543,542,541',
'62,544,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,697,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,,-593,-593,,,252,253,,40,,,293,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,546,,543,542,541,62,544,81,93,94,289,69,70,71,9,57,,,',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,697,29,28,27,101,100,102,103,',
',19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,293,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-593,-593,-593,-593',
'244,246,,,-593,-593,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,',
',,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,,,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,289',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,242,247,248,249,244,246,254,,250,251,,,,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,289',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,242,247,248,249,244,246,,,250,251,,,,,,252,253',
',40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20',
'240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,5,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,7,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,,,,62,,81,93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,,,239,20',
'240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,289,69',
'70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,238,-593,-593,-593,-593,244,246,,,-593,-593,,,,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,289',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,-593,-593,-593,-593,244,246,,,-593,-593,,,,',
',252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245',
'243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93',
'94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,238,-593,-593,-593,-593,244,246,,,-593,-593',
',,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234',
'245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81',
'93,94,289,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,8,45,291,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,-593,-593,-593,-593,244,246,,,-593',
'-593,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233',
'234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107',
'108,,91,92,42,43,41,238,-593,-593,-593,-593,244,246,,,-593,-593,,,,',
',252,253,,223,,,229,,,58,59,,,60,,281,235,,241,44,237,236,284,233,234',
'245,243,239,228,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59,,',
'60,,,235,,241,44,237,236,,233,234,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,283,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253',
',223,,,229,,,58,59,,,60,,656,235,279,241,44,237,236,284,233,234,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43',
'41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59,,,60,,,235,279,,44',
'237,236,284,233,234,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,',
',69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,113,,,,,112,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,347',
',,33,,,58,59,,,60,,35,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73',
',,,,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,352,56',
'97,96,353,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,359,,,354,,,229,',
',58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,',
',69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,352,56,97,96,353',
',99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,354,,,229,,,58,59,,,60,',
',,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,',
',,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,',
',105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,',
',,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,',
',,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,,,387,62,,81,93,94,69,70,71,,57,,,,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69',
'70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,',
',,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284',
',,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,',
',,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,403,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,403,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
'218,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,750,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,',
'304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,',
'304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,656,,,,44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,',
',,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,',
',,,,,,,,,,302,,,229,,,58,59,,,60,,,546,,543,542,541,550,544,,,,,,,,',
'553,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,314,,548,62,,81,93,94,69',
'70,71,,57,561,560,,63,64,554,,,67,,65,66,68,308,309,72,73,,,,,,304,305',
'311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
',,312,,,,,,,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,',
',,,,,,,,,,,,,302,,,298,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,',
',223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,',
',223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,',
',223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,218,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,306',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,',
',,,,,302,,,298,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309',
'72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,403,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,941,,,229,,,58,59',
',,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9',
'57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,8,45,291,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,387,62,,81,93,94,69,70,71',
'9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312',
',,,,,,,,,,,,,,,,,,,302,,,298,,,58,59,,,60,,297,,,,,,,,,,,,,,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',306,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,',
',,,,,,,,,,871,,,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,284,,,,,,228,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,656,,279,,44,,,284,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,306,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,',
',,,302,,,229,,,58,59,,,60,,,546,,543,542,541,550,544,,,,,,,,,553,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,502,,548,62,,81,93,94,69,70,71,,57',
'561,560,,63,64,554,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,',
'91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,',
'44,,,284,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,284',
',,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,656,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,',
'304,305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,302,,,298,,,58,59,,,60',
',,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,283,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,284,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309',
'72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,518,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308',
'309,72,73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72',
'73,,,,,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,',
',,,304,305,311,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,308,309,72,73,,,,,,304',
'305,311,101,100,102,103,,,230,,,,,,,306,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,,,312,,,,,,,,,,,,,,,,,,,,871,,,229,,,58,59,,,60,',
',,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,308,309,72,73,,,,,,304,305,311,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,,-280,,62,,81,93,94,-280,-280,-280',
',,-280,-280,-280,,-280,,,,,,,,,,-280,-280,-280,,,,,,,,-280,-280,,-280',
'-280,-280,-280,-280,,,,,,,,,,,,,,,,,,,,,,,-280,-280,-280,-280,-280,-280',
'-280,-280,-280,-280,-280,-280,-280,-280,,,-280,-280,-280,,,-280,,,-280',
',,-280,-280,,-280,,-280,,-280,,-280,-280,,-280,-280,-280,-280,-280,',
'-280,,-280,,,,,,,,,,,,,,-280,,,-280,-280,-280,-280,-576,-280,,-280,',
',,-576,-576,-576,,,-576,-576,-576,,-576,,,,,,,,,-576,-576,-576,-576',
',,,,,,,-576,-576,,-576,-576,-576,-576,-576,,,,,,,,,,,,,,,,,,,,,,,-576',
'-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,,,-576',
'-576,-576,,,-576,,,-576,,,-576,-576,,-576,,-576,,-576,,-576,-576,,-576',
'-576,-576,-576,-576,,-576,-576,-576,,,,,,,,,,,,,,-576,,,-576,-576,-576',
'-576,-575,-576,,-576,,,,-575,-575,-575,,,-575,-575,-575,,-575,,,,,,',
',,-575,-575,-575,-575,,,,,,,,-575,-575,,-575,-575,-575,-575,-575,,,',
',,,,,,,,,,,,,,,,,,,-575,-575,-575,-575,-575,-575,-575,-575,-575,-575',
'-575,-575,-575,-575,,,-575,-575,-575,,,-575,,,-575,,,-575,-575,,-575',
',-575,,-575,,-575,-575,,-575,-575,-575,-575,-575,,-575,-575,-575,546',
',543,542,541,550,544,,,,,,,-575,,553,-575,-575,-575,-575,-409,-575,',
'-575,,,,-409,-409,-409,,,-409,-409,-409,,-409,548,,,,,,,,-409,-409,-409',
'561,560,,,,554,,,-409,-409,,-409,-409,-409,-409,-409,,,,,,,,,,,,,,,',
',,,,,,,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409',
'-409,,,-409,-409,-409,,,-409,,263,-409,,,-409,-409,,-409,,-409,,-409',
',-409,-409,,-409,-409,-409,-409,-409,,-409,-409,-409,,,,,,,,,,,,,,-409',
',-244,-409,-409,,-409,,-409,-244,-244,-244,,,-244,-244,-244,,-244,,',
',,,,,,-244,-244,-244,,,,,,,,,-244,-244,,-244,-244,-244,-244,-244,,,',
',,,,,,,,,,,,,,,,,,,-244,-244,-244,-244,-244,-244,-244,-244,-244,-244',
'-244,-244,-244,-244,,,-244,-244,-244,,,-244,,263,-244,,,-244,-244,,-244',
',-244,,-244,,-244,-244,,-244,-244,-244,-244,-244,,-244,-244,-244,,,',
',,,,,,,,,,-244,,-244,-244,-244,,-244,,-244,-244,-244,-244,,,-244,-244',
'-244,546,-244,543,542,541,550,544,,,,-244,-244,,,,553,,,,,,-244,-244',
',-244,-244,-244,-244,-244,,,,,,,,,548,,,,,,,,,558,557,561,560,,,,554',
',,,,,,,,-244,,-296,,,,,-244,,-296,-296,-296,263,-244,-296,-296,-296',
'218,-296,,,,,,,,,,-296,-296,,,,,,-244,-244,,-296,-296,,-296,-296,-296',
'-296,-296,,,,,-244,,,-244,,,,,-244,,,,,,,,,,-296,-296,-296,-296,-296',
'-296,-296,-296,-296,-296,-296,-296,-296,-296,,,-296,-296,-296,,,-296',
',272,-296,,,-296,-296,,-296,,-296,,-296,,-296,-296,,-296,-296,-296,-296',
'-296,,-296,,-296,,,,,,,,,,,,,,-296,,,-296,-296,,-296,,-296,173,184,174',
'197,170,190,180,179,200,201,195,178,177,172,198,202,203,182,171,185',
'189,191,183,176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168',
'175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173',
'184,174,197,170,190,180,179,200,201,195,178,177,172,198,202,203,182',
'171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188,187,',
',,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150',
',135,156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,',
',,,88,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198,202',
'203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188',
'187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,',
',,,,,,,88,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198',
'202,203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169',
'188,187,,,,,,168,175,166,167,163,164,165,124,126,123,,125,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162',
'89,,,,,,,,,,,,,,88,173,184,174,197,170,190,180,179,200,201,195,178,177',
'172,198,202,203,182,171,185,189,191,183,176,,,,192,199,194,370,369,371',
'368,169,188,187,,,,,,168,175,166,167,365,366,367,363,126,97,96,364,',
'99,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,375,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,,,162,173,184,174,197,170,190,180,179,200,201,195,178,177,172',
'198,202,203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181',
'169,188,187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,719',
'423,162,,720,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,',
',,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149',
'143,141,133,155,134,717,416,162,,718,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,669,423,162,,670,,,,,,,',
'157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,',
',,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
'666,416,162,,667,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140',
',,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148',
'149,143,141,133,155,134,474,416,162,,475,,,,,,,,157,158,,154,136,137',
'138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,999,416,162,,1000,,,,,,',
',157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,',
',,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155',
'134,635,416,162,,636,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139',
'140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,1001,423,162,,1002,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,637,423,162,,638',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,474,416,162,,475,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,412,416,162,,413,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,',
',151,150,,135,156,153,152,161,148,149,143,141,133,155,134,722,423,162',
',723,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,419,423,162,,418,,,,,,,,157,158,,154,136,137,138,145,142',
'144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153',
'152,161,148,149,143,141,133,155,134,635,416,162,,636,,,,,,,,157,158',
',154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,',
',,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,976,423',
'162,,975,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143',
'141,133,155,134,637,423,162,,638,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,,546,162,543,542,541,550,544',
',546,,543,542,541,550,544,553,,,,,,,,553,,546,,543,542,541,550,544,',
',,,,548,,,553,,,,,548,532,,561,560,,,,554,558,557,561,560,,,,554,548',
',546,,543,542,541,550,544,558,557,561,560,,,,554,553,,546,,543,542,541',
'550,544,,546,,543,542,541,550,544,553,,,,,548,,,553,,,,,,,,561,560,',
',,554,548,,,,,,,,548,,,561,560,,,,554,558,557,561,560,,,546,554,543',
'542,541,550,544,,546,,543,542,541,550,544,553,,,,,,,,553,,546,,543,542',
'541,550,544,,,,,,548,,,553,,,,,548,558,557,561,560,,,,554,558,557,561',
'560,,,,554,548,,546,,543,542,541,550,544,,,561,560,,,,554,553,,546,',
'543,542,541,550,544,546,,543,542,541,550,544,,553,,,,,548,,553,,546',
',543,542,541,550,544,561,560,,,,554,548,,553,,,,,548,,,,561,560,,,,554',
',561,560,,,,554,548,,546,,543,542,541,550,544,558,557,561,560,,,,554',
'553,,546,,543,542,541,550,544,,546,,543,542,541,550,544,553,,,,,548',
',,553,,,,,,558,557,561,560,,,,554,548,,,,,,,,548,558,557,561,560,,,',
'554,558,557,561,560,,,546,554,543,542,541,550,544,,,,,,,,,553,,,,,,',
',,,,,,,,,,,,,,,548,,,,,,,,,558,557,561,560,,,,554' ]
        racc_action_table = arr = ::Array.new(25029, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'637,880,903,1001,647,345,839,637,637,637,61,1013,637,637,637,19,637',
'358,472,717,58,912,676,676,1000,637,637,637,637,348,344,683,908,382',
'908,715,637,637,300,637,637,637,637,637,383,300,575,337,999,661,840',
'338,720,472,300,368,19,661,718,123,58,450,368,708,123,123,637,637,637',
'637,637,637,637,637,637,637,637,637,637,637,1001,567,637,637,637,568',
'637,637,587,587,637,647,719,637,637,713,637,61,637,382,637,438,637,637',
'26,637,637,637,637,637,383,637,637,637,345,839,676,720,666,880,903,1001',
'716,358,880,903,1001,637,717,1013,637,637,637,637,1013,637,95,637,348',
'344,683,637,1000,95,95,95,358,1000,95,95,95,358,95,715,840,575,715,719',
'715,840,95,720,95,95,95,337,999,718,26,338,337,999,95,95,338,95,95,95',
'95,95,428,481,587,3,666,567,667,587,3,568,567,26,591,591,568,307,480',
'420,442,436,436,719,95,95,95,95,95,95,95,95,95,95,95,95,95,95,481,354',
'95,95,95,354,95,95,666,221,95,666,636,95,95,480,95,365,95,666,95,411',
'95,95,365,95,95,95,95,95,770,95,98,95,41,41,667,442,410,98,98,98,224',
'307,98,98,98,95,98,848,95,95,95,95,848,95,98,95,98,98,98,95,688,688',
'221,352,307,636,98,98,591,98,98,98,98,98,667,436,700,667,700,700,700',
'602,700,770,899,667,899,899,899,635,899,312,312,408,648,224,98,98,98',
'98,98,98,98,98,98,98,98,98,98,98,41,41,98,98,98,352,98,98,222,404,98',
'699,352,98,98,604,98,352,98,648,98,352,98,98,353,98,98,98,98,98,418',
'98,725,98,635,602,602,418,418,418,352,402,366,418,418,602,418,98,700',
'366,98,98,98,98,468,98,899,98,796,312,312,98,77,222,17,17,418,418,367',
'418,418,418,418,418,77,367,353,399,24,604,604,730,377,353,77,24,468',
'393,353,604,468,468,353,468,468,451,418,418,418,418,418,418,418,418',
'418,418,418,418,418,418,796,353,418,418,418,682,418,796,682,413,418',
'618,379,418,363,380,796,452,418,381,418,363,418,418,384,418,418,418',
'418,418,378,418,419,418,453,796,377,377,377,419,419,419,989,989,478',
'419,419,418,419,857,418,418,749,418,482,418,413,419,618,857,669,418',
'341,369,413,684,618,341,419,419,369,419,419,419,419,419,379,379,379',
'380,380,380,287,381,381,381,586,287,384,384,384,586,857,857,378,378',
'378,857,419,419,419,419,419,419,419,419,419,419,419,419,419,419,669',
'318,419,419,419,15,419,669,318,497,419,754,669,419,364,680,669,318,419',
'498,419,364,419,419,722,419,419,419,419,419,638,419,419,419,38,669,843',
'638,638,638,316,843,638,638,638,677,638,419,448,501,419,419,15,419,467',
'419,638,638,638,928,15,419,928,412,521,521,638,638,370,638,638,638,638',
'638,39,370,722,336,336,328,448,38,328,722,448,448,467,316,722,38,467',
'467,722,467,467,316,638,638,638,638,638,638,638,638,638,638,638,638',
'638,638,412,722,638,638,638,1002,638,638,412,675,638,39,1002,638,638',
'349,638,1002,638,39,638,1002,638,638,347,638,638,638,638,638,371,638',
'953,638,953,953,953,371,953,503,548,373,548,548,548,343,548,638,373',
'342,638,638,638,638,672,638,331,638,772,331,773,638,810,810,810,810',
'810,810,775,953,327,810,810,327,706,706,810,548,810,810,810,810,810',
'810,810,776,548,777,779,780,810,810,810,810,810,810,810,595,595,810',
'781,595,595,595,431,810,810,810,810,810,810,810,810,810,810,810,810',
'782,810,810,810,671,810,810,810,810,810,431,431,431,431,431,431,431',
'431,431,431,431,303,431,431,981,786,431,431,303,810,332,981,810,790',
'791,810,810,303,795,810,981,810,431,508,431,810,431,431,685,431,431',
'431,431,431,810,431,799,330,685,810,810,810,810,14,810,810,810,810,802',
'803,14,806,810,810,329,431,668,431,811,14,810,812,810,810,810,650,650',
'650,650,650,650,685,685,301,650,650,685,816,817,650,301,650,650,650',
'650,650,650,650,819,301,820,822,825,650,650,650,650,650,650,650,511',
'827,650,325,830,320,833,407,650,650,650,650,650,650,650,650,650,650',
'650,650,519,650,650,650,317,650,650,650,650,650,407,407,407,407,407',
'407,407,407,407,407,407,670,407,407,578,313,407,407,670,650,311,578',
'650,670,306,650,650,670,305,650,578,650,407,842,407,650,407,407,665',
'407,407,407,407,407,650,407,663,846,847,650,650,650,650,507,650,650',
'650,650,520,850,507,851,650,650,302,407,660,655,653,507,650,296,650',
'650,650,651,651,651,651,651,651,295,294,46,651,651,292,867,522,651,46',
'651,651,651,651,651,651,651,291,46,534,871,873,651,651,651,651,651,651',
'651,535,537,651,280,884,885,277,640,651,651,651,651,651,651,651,651',
'651,651,651,651,276,651,651,651,262,651,651,651,651,651,640,640,640',
'640,640,640,640,640,640,640,640,723,640,640,356,230,640,640,723,651',
'226,356,651,723,225,651,651,723,901,651,356,651,640,223,640,651,640',
'640,905,640,640,640,640,640,651,640,906,646,701,651,651,651,651,299',
'651,651,651,651,916,918,299,921,651,651,922,640,923,924,926,299,651',
'538,651,651,651,496,496,496,496,496,496,539,641,942,496,496,204,547',
'639,496,942,496,496,496,496,496,496,496,555,942,941,559,946,496,496',
'496,496,496,496,496,947,868,496,868,868,868,948,868,496,496,496,496',
'496,496,496,496,496,496,496,496,949,496,496,496,950,496,496,496,496',
'496,751,751,751,751,751,751,751,751,751,751,751,940,751,751,870,562',
'751,751,940,496,952,870,496,109,564,496,496,940,569,496,870,496,751',
'45,751,496,751,751,40,751,751,751,751,751,496,751,37,570,22,496,496',
'496,496,938,496,496,496,496,629,975,938,976,496,496,977,751,624,16,589',
'938,496,615,496,496,496,0,0,0,0,0,0,13,12,220,0,0,988,599,990,0,220',
'0,0,0,0,0,0,0,991,220,992,993,994,0,0,0,0,0,0,0,995,974,0,974,974,974',
'998,974,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,7,0,0,0,0,0,856,856,856,856',
'856,856,856,856,856,856,856,932,856,856,346,607,856,856,932,0,619,346',
'0,1003,1004,0,0,932,609,0,346,0,856,1,856,0,856,856,1015,856,856,856',
'856,856,0,856,,,,0,0,0,0,939,0,0,0,0,,,939,,0,0,,856,,,,939,0,,0,0,0',
'563,563,563,563,563,563,,,,563,563,,,,563,,563,563,563,563,563,563,563',
'290,290,290,290,290,563,563,563,563,563,563,563,,,563,6,6,6,6,6,563',
'563,563,563,563,563,563,563,563,563,563,563,,563,563,563,,563,563,563',
'563,563,853,853,853,853,853,853,853,853,853,853,853,,853,853,,,853,853',
',563,,,563,,,563,563,,,563,,563,853,,853,563,853,853,,853,853,853,853',
'853,563,853,,,,563,563,563,563,,563,563,563,563,,,,,563,563,,853,,,',
',563,,563,563,563,726,726,726,726,726,726,,,,726,726,,,,726,,726,726',
'726,726,726,726,726,495,495,495,495,495,726,726,726,726,726,726,726',
',,726,,,,,,726,726,726,726,726,726,726,726,726,726,726,726,,726,726',
'726,,726,726,726,726,726,517,517,517,517,517,517,517,517,517,517,517',
',517,517,,,517,517,,726,,,726,,,726,726,,,726,,726,517,,517,726,517',
'517,,517,517,517,517,517,726,517,,,,726,726,726,726,,726,726,726,726',
',,,,726,726,,517,,,,,726,,726,726,726,731,731,731,731,731,731,,,,731',
'731,,,,731,,731,731,731,731,731,731,731,,,,,,731,731,731,731,731,731',
'731,,,731,,,,,,731,731,731,731,731,731,731,731,731,731,731,731,,731',
'731,731,,731,731,731,731,731,471,471,471,471,471,471,471,471,471,471',
'471,,471,471,,,471,471,,731,,,731,,,731,731,,,731,,731,471,,471,731',
'471,471,,471,471,471,471,471,731,471,,,,731,731,731,731,,731,731,731',
'731,,,,,731,731,471,471,,,,,731,,731,731,731,741,741,741,741,741,741',
',,,741,741,,,,741,,741,741,741,741,741,741,741,,,,,,741,741,741,741',
'741,741,741,,,741,,,,,,741,741,741,741,741,741,741,741,741,741,741,741',
',741,741,741,,741,741,741,741,741,426,426,426,426,426,426,426,426,426',
'426,426,,426,426,,,426,426,,741,,,741,,,741,741,,,741,,741,426,,426',
'741,426,426,,426,426,426,426,426,741,426,,,,741,741,741,741,,741,741',
'741,741,,,,,741,741,,426,,,,,741,,741,741,741,789,789,789,789,789,789',
',,,789,789,,,,789,,789,789,789,789,789,789,789,,,,,,789,789,789,789',
'789,789,789,,,789,,,,,,789,789,789,789,789,789,789,789,789,789,789,789',
',789,789,789,,789,789,789,789,789,761,761,761,761,761,761,761,761,761',
'761,761,,761,761,,,761,761,,789,,,789,,,789,789,,,789,,789,761,,761',
'789,761,761,,761,761,761,761,761,789,761,,,,789,789,789,789,,789,789',
'789,789,,,,,789,789,,761,,,,,789,,789,789,789,801,801,801,801,801,801',
',,,801,801,,,,801,,801,801,801,801,801,801,801,,,,,,801,801,801,801',
'801,801,801,,,801,,,,,,801,801,801,801,801,801,801,801,801,801,801,801',
',801,801,801,,801,801,801,801,801,274,274,274,274,274,274,274,274,274',
'274,274,,274,274,,,274,274,,801,,,801,,,801,801,,,801,,801,274,,274',
'801,274,274,,274,274,274,274,274,801,274,,,,801,801,801,801,,801,801',
'801,801,,,,,801,801,,274,,,,,801,,801,801,801,809,809,809,809,809,809',
',,,809,809,,,,809,,809,809,809,809,809,809,809,,,,,,809,809,809,809',
'809,809,809,,,809,,,,,,809,809,809,809,809,809,809,809,809,809,809,809',
',809,809,809,,809,809,809,809,809,674,674,674,674,674,674,674,674,674',
'674,674,,674,674,,,674,674,,809,,,809,,,809,809,,,809,,809,674,,674',
'809,674,674,,674,674,674,674,674,809,674,,,,809,809,809,809,,809,809',
'809,809,,,,,809,809,,674,,,,,809,,809,809,809,645,645,645,645,645,645',
',,,645,645,,,,645,,645,645,645,645,645,645,645,,,,,,645,645,645,645',
'645,645,645,,,645,,,,,,645,645,645,645,645,645,645,645,645,645,645,645',
',645,645,645,,645,645,645,645,645,21,21,21,21,21,21,21,21,21,21,21,',
'21,21,,,21,21,,645,,,645,,,645,645,,,645,,645,21,,21,645,21,21,,21,21',
'21,21,21,645,21,,,,645,645,645,645,,645,645,645,645,,,,,645,645,,21',
',,,,645,,645,645,645,323,323,323,323,323,323,,,,323,323,,,,323,,323',
'323,323,323,323,323,323,,,,,,323,323,323,323,323,323,323,,,323,,,,,',
'323,323,323,323,323,323,323,323,323,323,323,323,,323,323,323,,323,323',
'323,323,323,758,758,758,758,758,758,758,758,758,758,758,,758,758,,,758',
'758,,323,,,323,,,323,323,,,323,,323,758,,758,323,758,758,,758,758,758',
'758,758,323,758,,,,323,323,323,323,,323,323,323,323,,,,,323,323,,758',
',,,,323,,323,323,323,834,834,834,834,834,834,,,,834,834,,,,834,,834',
'834,834,834,834,834,834,,,,,,834,834,834,834,834,834,834,,,834,,,,,',
'834,834,834,834,834,834,834,834,834,834,834,834,,834,834,834,,834,834',
'834,834,834,756,756,756,756,756,756,756,756,756,756,756,,756,756,,,756',
'756,,834,,,834,,,834,834,,,834,,834,756,,756,834,756,756,,756,756,756',
'756,756,834,756,,,,834,834,834,834,,834,834,834,834,,,,,834,834,,756',
',,,,834,,834,834,834,835,835,835,835,835,835,,,,835,835,,,,835,,835',
'835,835,835,835,835,835,,,,,,835,835,835,835,835,835,835,,,835,,,,,',
'835,835,835,835,835,835,835,835,835,835,835,835,,835,835,835,,835,835',
'835,835,835,765,765,765,765,765,765,765,765,765,765,765,,765,765,,,765',
'765,,835,,,835,,,835,835,,,835,,835,765,,765,835,765,765,,765,765,765',
'765,765,835,765,,,,835,835,835,835,,835,835,835,835,,,,,835,835,,765',
',,,,835,,835,835,835,838,838,838,838,838,838,,,,838,838,,,,838,,838',
'838,838,838,838,838,838,,,,,,838,838,838,838,838,838,838,,,838,,,,,',
'838,838,838,838,838,838,838,838,838,838,838,838,,838,838,838,,838,838',
'838,838,838,763,763,763,763,763,763,763,763,763,763,763,,763,763,,,763',
'763,,838,,,838,,,838,838,,,838,,838,763,,763,838,763,763,,763,763,763',
'763,763,838,763,,,,838,838,838,838,,838,838,838,838,,,,,838,838,,763',
',,,,838,,838,838,838,844,844,844,844,844,844,,,,844,844,,,,844,,844',
'844,844,844,844,844,844,,,,,,844,844,844,844,844,844,844,,697,844,697',
'697,697,,697,844,844,844,844,844,844,844,844,844,844,844,844,,844,844',
'844,,844,844,844,844,844,826,,826,826,826,,826,,697,,828,,828,828,828',
',828,697,,844,,,844,,,844,844,,449,844,987,844,987,987,987,844,987,826',
',,,,,,844,,826,828,,844,844,844,844,,844,844,844,844,,,449,,844,844',
'449,449,,987,,,844,,844,844,844,298,298,298,298,298,298,,,,298,298,',
',,298,,298,298,298,298,298,298,298,,,,,,298,298,298,298,298,298,298',
',,298,,,,,,298,298,298,298,298,298,298,298,298,298,298,298,,298,298',
'298,,298,298,298,298,298,446,446,446,446,446,446,446,446,446,446,446',
',446,446,,,446,446,,298,,,298,,,298,298,,,298,,298,446,,446,298,446',
'446,,446,446,446,446,446,298,446,,,,298,298,298,298,,298,298,298,298',
',,,,298,298,,900,,900,900,900,298,900,298,298,298,293,293,293,293,293',
'293,,,,293,293,,,,293,,293,293,293,293,293,293,293,,,,,900,293,293,293',
'293,293,293,293,,,293,,,,,,293,293,293,293,293,293,293,293,293,293,293',
'293,,293,293,293,,293,293,293,293,293,447,447,447,447,447,447,447,447',
'447,447,447,,447,447,,,447,447,,293,,,293,,,293,293,,,293,,293,447,',
'447,293,447,447,,447,447,447,447,447,293,447,,,,293,293,293,293,,293',
'293,293,293,,,,,293,293,,951,,951,951,951,293,951,293,293,293,33,33',
'33,33,33,33,,,,33,33,,,,33,,33,33,33,33,33,33,33,,,,,951,33,33,33,33',
'33,33,33,,,33,,,,,,33,33,33,33,33,33,33,33,33,33,33,33,,33,33,33,,33',
'33,33,33,33,461,,,,,,,,,,,,,,,,461,461,,33,,,33,,,33,33,,,33,,33,461',
',461,33,461,461,,461,461,,,461,33,461,,,,33,33,33,33,,33,33,33,33,,',
',,33,33,,,,,,,33,,33,33,33,877,877,877,877,877,877,,,,877,877,,,,877',
',877,877,877,877,877,877,877,,,,,,877,877,877,877,877,877,877,,,877',
',,,,,877,877,877,877,877,877,877,877,877,877,877,877,,877,877,877,,877',
'877,877,877,877,462,462,462,462,462,462,462,,,462,462,,,,,,462,462,',
'877,,,877,,,877,877,,,877,,877,462,,462,877,462,462,,462,462,462,462',
'462,877,462,,,,877,877,877,877,,877,877,877,877,,,,,877,877,,,,,,,877',
',877,877,877,229,229,229,229,229,229,,,,229,229,,,,229,,229,229,229',
'229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,229,229',
'229,229,229,229,229,229,229,229,229,229,,229,229,229,,229,229,229,229',
'229,460,,,,,,,,,,,,,,,,460,460,,229,,,229,,,229,229,,,229,,229,460,',
'460,229,460,460,,460,460,,,460,229,460,,,,229,229,229,229,,229,229,229',
'229,,,,,229,229,,,,,,,229,,229,229,229,206,206,206,206,206,206,,,,206',
'206,,,,206,,206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206',
'206,,,206,,,,,,206,206,206,206,206,206,206,206,206,206,206,206,,206',
'206,206,,206,206,206,206,206,470,470,470,470,470,470,470,470,,470,470',
',,,,,470,470,,206,,,206,,,206,206,,,206,,206,470,,470,206,470,470,,470',
'470,470,470,470,206,470,,,,206,206,206,206,,206,206,206,206,,,,,206',
'206,,,,,,,206,,206,206,206,937,937,937,937,937,937,,,,937,937,,,,937',
',937,937,937,937,937,937,937,,,,,,937,937,937,937,937,937,937,,,937',
',,,,,937,937,937,937,937,937,937,937,937,937,937,937,,937,937,937,,937',
'937,937,937,937,469,469,469,469,469,469,469,,,469,469,,,,,,469,469,',
'937,,,937,,,937,937,,,937,,937,469,,469,937,469,469,,469,469,469,469',
'469,937,469,,,,937,937,937,937,,937,937,937,937,,,,,937,937,,,,,,,937',
',937,937,937,121,121,121,121,121,121,,,,121,121,,,,121,,121,121,121',
'121,121,121,121,,,,,,121,121,121,121,121,121,121,,,121,,,,,,121,121',
'121,121,121,121,121,121,121,121,121,121,,121,121,121,,121,121,121,121',
'121,459,,,,,,,,,,,,,,,,459,459,,121,,,121,,,121,121,,,121,,121,459,',
'459,121,459,459,,459,459,,,459,121,459,,,,121,121,121,121,,121,121,121',
'121,,,,,121,121,,,,,,,121,,121,121,121,566,566,566,566,566,566,,,,566',
'566,,,,566,,566,566,566,566,566,566,566,,,,,,566,566,566,566,566,566',
'566,,,566,,,,,,566,566,566,566,566,566,566,566,566,566,566,566,,566',
'566,566,,566,566,566,566,566,458,,,,,,,,,,,,,,,,458,458,,566,,,566,',
',566,566,,,566,,566,458,,458,566,458,458,,458,458,,,458,566,458,,,,566',
'566,566,566,,566,566,566,566,,,,,566,566,,,,,,,566,,566,566,566,588',
'588,588,588,588,588,,,,588,588,,,,588,,588,588,588,588,588,588,588,',
',,,,588,588,588,588,588,588,588,,,588,,,,,,588,588,588,588,588,588,588',
'588,588,588,588,588,,588,588,588,,588,588,588,588,588,466,466,466,466',
'466,466,466,,,466,466,,,,,,466,466,,588,,,588,,,588,588,,,588,,588,466',
',466,588,466,466,,466,466,466,466,466,588,466,,,,588,588,588,588,,588',
'588,588,588,,,,,588,588,,,,,,,588,,588,588,588,954,954,954,954,954,954',
',,,954,954,,,,954,,954,954,954,954,954,954,954,,,,,,954,954,954,954',
'954,954,954,,,954,,,,,,954,954,954,954,954,954,954,954,954,954,954,954',
',954,954,954,,954,954,954,954,954,465,465,465,465,465,465,465,,,465',
'465,,,,,,465,465,,954,,,954,,,954,954,,,954,,954,465,,465,954,465,465',
',465,465,465,465,465,954,465,,,,954,954,954,954,,954,954,954,954,,,',
',954,954,,,,,,,954,,954,954,954,960,960,960,960,960,960,,,,960,960,',
',,960,,960,960,960,960,960,960,960,,,,,,960,960,960,960,960,960,960',
',,960,,,,,,960,960,960,960,960,960,960,960,960,960,960,960,,960,960',
'960,,960,960,960,960,960,464,464,464,464,464,464,464,,,464,464,,,,,',
'464,464,,960,,,960,,,960,960,,,960,,960,464,,464,960,464,464,,464,464',
'464,464,464,960,464,,,,960,960,960,960,,960,960,960,960,,,,,960,960',
',,,,,,960,,960,960,960,962,962,962,962,962,962,,,,962,962,,,,962,,962',
'962,962,962,962,962,962,,,,,,962,962,962,962,962,962,962,,,962,,,,,',
'962,962,962,962,962,962,962,962,962,962,962,962,,962,962,962,,962,962',
'962,962,962,457,457,457,457,457,457,457,,,457,457,,,,,,457,457,,962',
',,962,,,962,962,,,962,,962,457,,457,962,457,457,,457,457,457,457,457',
'962,457,,,,962,962,962,962,,962,962,962,962,,,,,962,962,,,,59,59,59',
'962,59,962,962,962,59,59,,,,59,,59,59,59,59,59,59,59,,,,,,59,59,59,59',
'59,59,59,,,59,,,,,,,59,,,59,59,59,59,59,59,59,59,59,59,59,59,,59,59',
'59,59,59,463,463,463,463,463,463,463,,,463,463,,,,,,463,463,,59,,,59',
',,59,59,,,59,,59,463,,463,59,463,463,59,463,463,463,463,463,59,463,',
',,59,59,59,59,,59,59,59,59,,,,,59,59,,,,43,43,43,59,43,59,59,59,43,43',
',,,43,,43,43,43,43,43,43,43,,,,,,43,43,43,43,43,43,43,,,43,,,,,,,43',
',,43,43,43,43,43,43,43,43,,43,43,43,,43,43,43,43,43,454,,,,,,,,,,,,',
',,,454,454,,43,,,43,,,43,43,,,43,,,454,,454,43,454,454,,454,454,,,,43',
',,,,43,43,43,43,,43,43,43,43,,,,,43,43,,,,620,620,620,43,620,43,43,43',
'620,620,,,,620,,620,620,620,620,620,620,620,,,,,,620,620,620,620,620',
'620,620,,,620,,,,,,,620,,,620,620,620,620,620,620,620,620,620,620,620',
'620,,620,620,620,620,620,455,,,,,,,,,,,,,,,,455,455,,620,,,620,,,620',
'620,,,620,,620,455,620,455,620,455,455,620,455,455,,,,620,,,,,620,620',
'620,620,,620,620,620,620,,,,,620,620,,,,621,621,621,620,621,620,620',
'620,621,621,,,,621,,621,621,621,621,621,621,621,,,,,,621,621,621,621',
'621,621,621,,,621,,,,,,,621,,,621,621,621,621,621,621,621,621,621,621',
'621,621,,621,621,621,621,621,456,,,,,,,,,,,,,,,,456,456,,621,,,621,',
',621,621,,,621,,,456,621,,621,456,456,621,456,456,,,,621,,,,,621,621',
'621,621,,621,621,621,621,,,,,621,621,,,,44,44,44,621,44,621,621,621',
'44,44,,,,44,,44,44,44,44,44,44,44,,,,,,44,44,44,44,44,44,44,,,44,,,',
',,,44,,,44,44,44,44,44,44,44,44,,44,44,44,,44,44,44,44,44,,,,,,,,,,',
',,,,,,,,,44,,,44,,,44,44,,,44,,,,,,44,,,,,,,,,44,,,,,44,44,44,44,,44',
'44,44,44,,,,,44,44,,,,60,60,60,44,60,44,44,44,60,60,,,,60,,60,60,60',
'60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60,,,,,,,60,,,60,60,60,60,60',
'60,60,60,60,60,60,60,,60,60,60,60,60,,,,,,,,,,,,,,,,,,,,60,,,60,,,60',
'60,,,60,,,,,,60,,,60,,,,,,60,,,,,60,60,60,60,,60,60,60,60,,,,,60,60',
',,,622,622,622,60,622,60,60,60,622,622,,,,622,,622,622,622,622,622,622',
'622,,,,,,622,622,622,622,622,622,622,,,622,,,,,,,622,,,622,622,622,622',
'622,622,622,622,,622,622,622,,622,622,622,622,622,,,,,,,,,,,,,,,,,,',
',622,,,622,,,622,622,,,622,,,,,,622,,,,,,,,,622,,,,,622,622,622,622',
',622,622,622,622,,,,,622,622,,,,63,63,63,622,63,622,622,622,63,63,,',
',63,,63,63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,',
'63,63,63,63,63,63,63,63,,63,63,63,,63,63,63,63,63,,,,,,,,,,,,,,,,,,',
',63,,,63,,,63,63,,,63,,,,,,63,,,,,,,,,63,,,,,63,63,63,63,,63,63,63,63',
',,,,63,63,,,,64,64,64,63,64,63,63,63,64,64,,,,64,,64,64,64,64,64,64',
'64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,,64,,,64,64,64,64,64,64,64,64',
',64,64,64,,64,64,64,64,64,,,,,,,,,,,,,,,,,,,,64,,,64,,,64,64,,,64,,',
',,,64,,,,,,,,,64,,,,,64,64,64,64,,64,64,64,64,,,,,64,64,,,,67,67,67',
'64,67,64,64,64,67,67,,,,67,,67,67,67,67,67,67,67,,,,,,67,67,67,67,67',
'67,67,,,67,,,,,,,67,,,67,67,67,67,67,67,67,67,,67,67,67,,67,67,67,67',
'67,,,,,,,,,,,,,,,,,,,,67,,,67,,,67,67,,,67,,,,,,67,,,,,,,,,67,,,,,67',
'67,67,67,,67,67,67,67,,,,,67,67,67,,,,,67,67,,67,67,67,68,68,68,,68',
',,,68,68,,,,68,,68,68,68,68,68,68,68,,,,,,68,68,68,68,68,68,68,,,68',
',,,,,,68,,,68,68,68,68,68,68,68,68,,68,68,68,,68,68,,,68,,,,,,,,,,,',
',,,,,,,,68,,,68,,,68,68,,,68,,68,,,,,,,,,,,,,,,,,,68,68,68,68,,68,68',
'68,68,,,,,68,68,,,,69,69,69,68,69,68,68,68,69,69,,,,69,,69,69,69,69',
'69,69,69,,,,,,69,69,69,69,69,69,69,,,69,,,,,,,69,,,69,69,69,69,69,69',
'69,69,,69,69,69,,69,69,,,69,,,,,,,,,,,,,,,,,69,,,69,,,69,,,69,69,,,69',
',,,,,,,,,,,,,,,,,,,69,69,69,69,,69,69,69,69,,,,,69,69,,,,70,70,70,69',
'70,69,69,69,70,70,,,,70,,70,70,70,70,70,70,70,,,,,,70,70,70,70,70,70',
'70,,,70,,,,,,,70,,,70,70,70,70,70,70,70,70,,70,70,70,,70,70,,,70,,,',
',,,,,,,,,,,,,,,,70,,,70,,,70,70,,,70,,,,,,,,,,,,,,,,,,,,70,70,70,70',
',70,70,70,70,,,,,70,70,,,,623,623,623,70,623,70,70,70,623,623,,,,623',
',623,623,623,623,623,623,623,,,,,,623,623,623,623,623,623,623,,,623',
',,,,,,623,,,623,623,623,623,623,623,623,623,,623,623,623,,623,623,623',
'623,623,,,,,,,,,,,,,,,,,,,,623,,,623,,,623,623,,,623,,,,,,623,,,,,,',
',,623,,,,,623,623,623,623,,623,623,623,623,,,,,623,623,,,,42,42,42,623',
'42,623,623,623,42,42,,,,42,,42,42,42,42,42,42,42,,,,,,42,42,42,42,42',
'42,42,,,42,,,,,,,42,,,42,42,42,42,42,42,42,42,,42,42,42,,42,42,42,42',
'42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42,,,42,,,,,,42,,,,,,,,,42,,,,,42',
'42,42,42,,42,42,42,42,,,,,42,42,,,,627,627,627,42,627,42,42,42,627,627',
',,,627,,627,627,627,627,627,627,627,,,,,,627,627,627,627,627,627,627',
',,627,,,,,,,627,,,627,627,627,627,627,627,627,627,,627,627,627,,627',
'627,627,627,627,,,,,,,,,,,,,,,,,,,,627,,,627,,,627,627,,,627,,,,,,627',
',,,,,,,,627,,,,,627,627,627,627,,627,627,627,627,,,,,627,627,,,,582',
'582,582,627,582,627,627,627,582,582,,,,582,,582,582,582,582,582,582',
'582,,,,,,582,582,582,582,582,582,582,,,582,,,,,,,582,,,582,582,582,582',
'582,582,582,582,582,582,582,582,,582,582,582,582,582,,,,,,,,,,,,,,,',
',,,,582,,,582,,,582,582,,,582,,582,,582,,582,,,582,,,,,,582,,,,,582',
'582,582,582,,582,582,582,582,,,,,582,582,,,,628,628,628,582,628,582',
'582,582,628,628,,,,628,,628,628,628,628,628,628,628,,,,,,628,628,628',
'628,628,628,628,,,628,,,,,,,628,,,628,628,628,628,628,628,628,628,,628',
'628,628,,628,628,628,628,628,,,,,,,,,,,,,,,,,,,,628,,,628,,,628,628',
',,628,,,,,,628,,,,,,,,,628,,,,,628,628,628,628,,628,628,628,628,,,,',
'628,628,,,,,,,628,,628,628,628,111,111,111,111,111,,,,111,111,,,,111',
',111,111,111,111,111,111,111,,,,,,111,111,111,111,111,111,111,,,111',
',,,,,111,111,111,111,111,111,111,111,111,111,111,111,,111,111,111,,111',
'111,111,111,111,,,,,,,,,,,,,,,,,,,,111,,,111,,,111,111,,,111,,111,,',
',111,,,,,,,,,111,,,,,111,111,111,111,,111,111,111,111,,,,,111,111,,',
',,,111,111,,111,111,111,116,116,116,,116,,,,116,116,,,,116,,116,116',
'116,116,116,116,116,,,,,,116,116,116,116,116,116,116,,,116,,,,,,,116',
',,116,116,116,116,116,116,116,116,,116,116,116,,116,116,116,116,116',
',,,,,,,,,,,,,,,,,,,116,,,116,,,116,116,,,116,,,,,,116,,,,,,,,,116,,',
',,116,116,116,116,,116,116,116,116,,,,,116,116,,,,117,117,117,116,117',
'116,116,116,117,117,,,,117,,117,117,117,117,117,117,117,,,,,,117,117',
'117,117,117,117,117,,,117,,,,,,,117,,,117,117,117,117,117,117,117,117',
',117,117,117,,117,117,117,117,117,,,,,,,,,,,,,,,,,,,,117,,,117,,,117',
'117,,,117,,,,,,117,,,,,,,,,117,,,,,117,117,117,117,,117,117,117,117',
',,,,117,117,,,,118,118,118,117,118,117,117,117,118,118,,,,118,,118,118',
'118,118,118,118,118,,,,,,118,118,118,118,118,118,118,,,118,,,,,,,118',
',,118,118,118,118,118,118,118,118,,118,118,118,,118,118,118,118,118',
',,,,,,,,,,,,,,,,,,,118,,,118,,,118,118,,,118,,,,,,118,,,,,,,,,118,,',
',,118,118,118,118,,118,118,118,118,,,,,118,118,,,,119,119,119,118,119',
'118,118,118,119,119,,,,119,,119,119,119,119,119,119,119,,,,,,119,119',
'119,119,119,119,119,,,119,,,,,,,119,,,119,119,119,119,119,119,119,119',
',119,119,119,,119,119,119,119,119,,,,,,,,,,,,,,,,,,,,119,,,119,,,119',
'119,,,119,,,,,,119,,,,,,,,,119,,,,,119,119,119,119,,119,119,119,119',
',,,,119,119,,,,,,,119,,119,119,119,120,120,120,120,120,,,,120,120,,',
',120,,120,120,120,120,120,120,120,,,,,,120,120,120,120,120,120,120,',
',120,,,,,,120,120,,120,120,120,120,120,120,120,120,120,,120,120,120',
',120,120,120,120,120,,,,,,,,,,,,,,,,,,,,120,,,120,,,120,120,,,120,,120',
',,,120,,,,,,,,,120,,,,,120,120,120,120,,120,120,120,120,,,,,120,120',
',,,572,572,572,120,572,120,120,120,572,572,,,,572,,572,572,572,572,572',
'572,572,,,,,,572,572,572,572,572,572,572,,,572,,,,,,,572,,,572,572,572',
'572,572,572,572,572,572,572,572,572,,572,572,572,572,572,,,,,,,,,,,',
',,,,,,,,572,,,572,,,572,572,,,572,,572,,572,,572,,,572,,,,,,572,,,,',
'572,572,572,572,,572,572,572,572,,,,,572,572,,,,571,571,571,572,571',
'572,572,572,571,571,,,,571,,571,571,571,571,571,571,571,,,,,,571,571',
'571,571,571,571,571,,,571,,,,,,,571,,,571,571,571,571,571,571,571,571',
',571,571,571,,571,571,571,571,571,,,,,,,,,,,,,,,,,,,,571,,,571,,,571',
'571,,,571,,571,,,,571,,,,,,,,,571,,,,,571,571,571,571,,571,571,571,571',
',,,,571,571,,,,631,631,631,571,631,571,571,571,631,631,,,,631,,631,631',
'631,631,631,631,631,,,,,,631,631,631,631,631,631,631,,,631,,,,,,,631',
',,631,631,631,631,631,631,631,631,,631,631,631,,631,631,631,631,631',
',,,,,,,,,,,,,,,,,,,631,,,631,,,631,631,,,631,,,,,,631,,,,,,,,,631,,',
',,631,631,631,631,,631,631,631,631,,,,,631,631,,,,632,632,632,631,632',
'631,631,631,632,632,,,,632,,632,632,632,632,632,632,632,,,,,,632,632',
'632,632,632,632,632,,,632,,,,,,,632,,,632,632,632,632,632,632,632,632',
',632,632,632,,632,632,632,632,632,,,,,,,,,,,,,,,,,,,,632,,,632,,,632',
'632,,,632,,,,,,632,,,,,,,,,632,,,,,632,632,632,632,,632,632,632,632',
',,,,632,632,,,,207,207,207,632,207,632,632,632,207,207,,,,207,,207,207',
'207,207,207,207,207,,,,,,207,207,207,207,207,207,207,,,207,,,,,,,207',
',,207,207,207,207,207,207,207,207,,207,207,207,,207,207,207,207,207',
',,,,,,,,,,,,,,,,,,,207,,,207,,,207,207,,,207,,207,,,,207,,,,,,,,,207',
',,,,207,207,207,207,,207,207,207,207,,,,,207,207,,,,208,208,208,207',
'208,207,207,207,208,208,,,,208,,208,208,208,208,208,208,208,,,,,,208',
'208,208,208,208,208,208,,,208,,,,,,,208,,,208,208,208,208,208,208,208',
'208,,208,208,208,,208,208,208,208,208,,,,,,,,,,,,,,,,,,,,208,,,208,',
',208,208,,,208,,,,,,208,,,,,,,,,208,,,,,208,208,208,208,,208,208,208',
'208,,,,,208,208,,,,209,209,209,208,209,208,208,208,209,209,,,,209,,209',
'209,209,209,209,209,209,,,,,,209,209,209,209,209,209,209,,,209,,,,,',
',209,,,209,209,209,209,209,209,209,209,209,209,209,209,,209,209,209',
'209,209,,,,,,,,,,,,,,,,,,,,209,,,209,,,209,209,,,209,,209,,209,,209',
',,209,,,,,,209,,,,,209,209,209,209,,209,209,209,209,,,,,209,209,,,,',
',,209,,209,209,209,5,5,5,5,5,,,,5,5,,,,5,,5,5,5,5,5,5,5,,,,,,5,5,5,5',
'5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5,5,,,,,,,,,,,',
',,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,,5,,,,,5,5,5,5,,5,5,5,5,,,,,5',
'5,,,,551,551,551,5,551,5,5,5,551,551,,,,551,,551,551,551,551,551,551',
'551,,,,,,551,551,551,551,551,551,551,,,551,,,,,,,551,,,551,551,551,551',
'551,551,551,551,,551,551,551,,551,551,551,551,551,,,,,,,,,,,,,,,,,,',
',551,,,551,,,551,551,,,551,,,,,,551,,,,,,,,,551,,,,,551,551,551,551',
',551,551,551,551,,,,,551,551,,,,212,212,212,551,212,551,551,551,212',
'212,,,,212,,212,212,212,212,212,212,212,,,,,,212,212,212,212,212,212',
'212,,,212,,,,,,,212,,,212,212,212,212,212,212,212,212,,212,212,212,',
'212,212,212,212,212,,,,,,,,,,,,,,,,,,,,212,,,212,,,212,212,,,212,,,',
',,212,,,,,,,,,212,,,,,212,212,212,212,,212,212,212,212,,,,,212,212,',
',,213,213,213,212,213,212,212,212,213,213,,,,213,,213,213,213,213,213',
'213,213,,,,,,213,213,213,213,213,213,213,,,213,,,,,,,213,,,213,213,213',
'213,213,213,213,213,,213,213,213,,213,213,213,213,213,,,,,,,,,,,,,,',
',,,,,213,,,213,,,213,213,,,213,,213,,,,213,,,,,,,,,213,,,,,213,213,213',
'213,,213,213,213,213,,,,,213,213,,,,214,214,214,213,214,213,213,213',
'214,214,,,,214,,214,214,214,214,214,214,214,,,,,,214,214,214,214,214',
'214,214,,,214,,,,,,,214,,,214,214,214,214,214,214,214,214,,214,214,214',
',214,214,214,214,214,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,214,,,214,,',
',,,214,,,,,,,,,214,,,,,214,214,214,214,,214,214,214,214,,,,,214,214',
',,,215,215,215,214,215,214,214,214,215,215,,,,215,,215,215,215,215,215',
'215,215,,,,,,215,215,215,215,215,215,215,,,215,,,,,,,215,,,215,215,215',
'215,215,215,215,215,,215,215,215,,215,215,215,215,215,,,,,,,,,,,,,,',
',,,,,215,,,215,,,215,215,,,215,,,,,,215,,,,,,,,,215,,,,,215,215,215',
'215,,215,215,215,215,,,,,215,215,,,,216,216,216,215,216,215,215,215',
'216,216,,,,216,,216,216,216,216,216,216,216,,,,,,216,216,216,216,216',
'216,216,,,216,,,,,,,216,,,216,216,216,216,216,216,216,216,,216,216,216',
',216,216,216,216,216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,216,,,216,,',
',,,216,,,,,,,,,216,,,,,216,216,216,216,,216,216,216,216,,,,,216,216',
',,,217,217,217,216,217,216,216,216,217,217,,,,217,,217,217,217,217,217',
'217,217,,,,,,217,217,217,217,217,217,217,,,217,,,,,,,217,,,217,217,217',
'217,217,217,217,217,,217,217,217,,217,217,217,217,217,,,,,,,,,,,,,,',
',,,,,217,,,217,,,217,217,,,217,,,,,,217,,,,,,,,,217,,,,,217,217,217',
'217,,217,217,217,217,,,,,217,217,217,,,616,616,616,217,616,217,217,217',
'616,616,,,,616,,616,616,616,616,616,616,616,,,,,,616,616,616,616,616',
'616,616,,,616,,,,,,,616,,,616,616,616,616,616,616,616,616,,616,616,616',
',616,616,616,616,616,,,,,,,,,,,,,,,,,,,,616,,,616,,,616,616,,,616,,616',
',,,616,,,,,,,,,616,,,,,616,616,616,616,,616,616,616,616,,,,,616,616',
',,,527,527,527,616,527,616,616,616,527,527,,,,527,,527,527,527,527,527',
'527,527,,,,,,527,527,527,527,527,527,527,,,527,,,,,,,527,,,527,527,527',
'527,527,527,527,527,527,527,527,527,,527,527,527,527,527,,,,,,,,,,,',
',,,,,,,,527,,,527,,,527,527,,,527,,,,,,527,,,527,,,,,,527,,,,,527,527',
'527,527,,527,527,527,527,,,,,527,527,,,,524,524,524,527,524,527,527',
'527,524,524,,,,524,,524,524,524,524,524,524,524,,,,,,524,524,524,524',
'524,524,524,,,524,,,,,,,524,,,524,524,524,524,524,524,524,524,524,524',
'524,524,,524,524,524,524,524,,,,,,,,,,,,,,,,,,,,524,,,524,,,524,524',
',,524,,524,,,,524,,,524,,,,,,524,,,,,524,524,524,524,,524,524,524,524',
',,,,524,524,,,,656,656,656,524,656,524,524,524,656,656,,,,656,,656,656',
'656,656,656,656,656,,,,,,656,656,656,656,656,656,656,,,656,,,,,,,656',
',,656,656,656,656,656,656,656,656,,656,656,656,,656,656,656,656,656',
',,,,,,,,,,,,,,,,,,,656,,,656,,,656,656,,,656,,,,,,656,,,,,,,,,656,,',
',,656,656,656,656,,656,656,656,656,,,,,656,656,,,,662,662,662,656,662',
'656,656,656,662,662,,,,662,,662,662,662,662,662,662,662,,,,,,662,662',
'662,662,662,662,662,,,662,,,,,,,662,,,662,662,662,662,662,662,662,662',
',662,662,662,,662,662,,,662,,,,,,,,,,,,,,,,,,,,662,,,662,,,662,662,',
',662,,,,,,,,,,,,,,,,,,,,662,662,662,662,,662,662,662,662,,,,,662,662',
',,,518,518,518,662,518,662,662,662,518,518,,,,518,,518,518,518,518,518',
'518,518,,,,,,518,518,518,518,518,518,518,,,518,,,,,,,518,,,518,518,518',
'518,518,518,518,518,,518,518,518,,518,518,518,518,518,,,,,,,,,,,,,,',
',,,,,518,,,518,,,518,518,,,518,,,,,,518,,,,,,,,,518,,,,,518,518,518',
'518,,518,518,518,518,,,,,518,518,,,,514,514,514,518,514,518,518,518',
'514,514,,,,514,,514,514,514,514,514,514,514,,,,,,514,514,514,514,514',
'514,514,,,514,,,,,,,514,,,514,514,514,514,514,514,514,514,,514,514,514',
',514,514,514,514,514,,,,,,,,,,,,,,,,,,,,514,,,514,,,514,514,,,514,,',
',,,514,,,,,,,,,514,,,,,514,514,514,514,,514,514,514,514,,,,,514,514',
',,,228,228,228,514,228,514,514,514,228,228,,,,228,,228,228,228,228,228',
'228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,228',
'228,228,228,228,228,,228,228,228,,228,228,228,228,228,,,,,,,,,,,,,,',
',,,,,228,,,228,,,228,228,,,228,,,,,,228,,,,,,,,,228,,,,,228,228,228',
'228,,228,228,228,228,,,,,228,228,,,,35,35,35,228,35,228,228,228,35,35',
',,,35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35,35,35,,,35,,,,,,,35',
',,35,35,35,35,35,35,35,35,,35,35,35,,35,35,,,35,,,,,,,,,,,,,,,,,,,,35',
',,35,,,35,35,,,35,,,892,,892,892,892,892,892,,,,,,,,,892,,35,35,35,35',
',35,35,35,35,,,,,35,35,,,,35,,892,35,,35,35,35,513,513,513,,513,892',
'892,,513,513,892,,,513,,513,513,513,513,513,513,513,,,,,,513,513,513',
'513,513,513,513,,,513,,,,,,,513,,,513,513,513,513,513,513,513,513,,513',
'513,513,,513,513,513,513,513,,,,,,,,,,,,,,,,,,,,513,,,513,,,513,513',
',,513,,,,,,513,,,,,,,,,513,,,,,513,513,513,513,,513,513,513,513,,,,',
'513,513,,,,231,231,231,513,231,513,513,513,231,231,,,,231,,231,231,231',
'231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231',
'231,231,231,231,231,231,231,,231,231,231,,231,231,231,231,231,,,,,,',
',,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,,,,231,,,,,,,,,231,,,,,231',
'231,231,231,,231,231,231,231,,,,,231,231,,,,232,232,232,231,232,231',
'231,231,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232,232',
'232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,,232',
'232,232,,232,232,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,232',
',,232,,,,,,232,,,,,,,,,232,,,,,232,232,232,232,,232,232,232,232,,,,',
'232,232,,,,233,233,233,232,233,232,232,232,233,233,,,,233,,233,233,233',
'233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233',
'233,233,233,233,233,233,233,,233,233,233,,233,233,233,233,233,,,,,,',
',,,,,,,,,,,,,233,,,233,,,233,233,,,233,,,,,,233,,,,,,,,,233,,,,,233',
'233,233,233,,233,233,233,233,,,,,233,233,,,,234,234,234,233,234,233',
'233,233,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234,234,234',
'234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,234,,234',
'234,234,,234,234,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,234',
',,234,,,,,,234,,,,,,,,,234,,,,,234,234,234,234,,234,234,234,234,,,,',
'234,234,,,,235,235,235,234,235,234,234,234,235,235,,,,235,,235,235,235',
'235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235',
'235,235,235,235,235,235,235,,235,235,235,,235,235,235,235,235,,,,,,',
',,,,,,,,,,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,,235,,,,,235',
'235,235,235,,235,235,235,235,,,,,235,235,,,,236,236,236,235,236,235',
'235,235,236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236',
'236,236,236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,,236',
'236,236,,236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,236',
',,236,,,,,,236,,,,,,,,,236,,,,,236,236,236,236,,236,236,236,236,,,,',
'236,236,,,,237,237,237,236,237,236,236,236,237,237,,,,237,,237,237,237',
'237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237',
'237,237,237,237,237,237,237,,237,237,237,,237,237,237,237,237,,,,,,',
',,,,,,,,,,,,,237,,,237,,,237,237,,,237,,,,,,237,,,,,,,,,237,,,,,237',
'237,237,237,,237,237,237,237,,,,,237,237,,,,238,238,238,237,238,237',
'237,237,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238,238',
'238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238,,238',
'238,238,,238,238,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,238',
',,238,,,,,,238,,,,,,,,,238,,,,,238,238,238,238,,238,238,238,238,,,,',
'238,238,,,,239,239,239,238,239,238,238,238,239,239,,,,239,,239,239,239',
'239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239',
'239,239,239,239,239,239,239,,239,239,239,,239,239,239,239,239,,,,,,',
',,,,,,,,,,,,,239,,,239,,,239,239,,,239,,,,,,239,,,,,,,,,239,,,,,239',
'239,239,239,,239,239,239,239,,,,,239,239,,,,240,240,240,239,240,239',
'239,239,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240,240',
'240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,240,,240',
'240,240,,240,240,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,240',
',,240,,,,,,240,,,,,,,,,240,,,,,240,240,240,240,,240,240,240,240,,,,',
'240,240,,,,241,241,241,240,241,240,240,240,241,241,,,,241,,241,241,241',
'241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241',
'241,241,241,241,241,241,241,,241,241,241,,241,241,241,241,241,,,,,,',
',,,,,,,,,,,,,241,,,241,,,241,241,,,241,,,,,,241,,,,,,,,,241,,,,,241',
'241,241,241,,241,241,241,241,,,,,241,241,,,,242,242,242,241,242,241',
'241,241,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242,242',
'242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242,,242',
'242,242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,242',
',,242,,,,,,242,,,,,,,,,242,,,,,242,242,242,242,,242,242,242,242,,,,',
'242,242,,,,243,243,243,242,243,242,242,242,243,243,,,,243,,243,243,243',
'243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243',
'243,243,243,243,243,243,243,,243,243,243,,243,243,243,243,243,,,,,,',
',,,,,,,,,,,,,243,,,243,,,243,243,,,243,,,,,,243,,,,,,,,,243,,,,,243',
'243,243,243,,243,243,243,243,,,,,243,243,,,,244,244,244,243,244,243',
'243,243,244,244,,,,244,,244,244,244,244,244,244,244,,,,,,244,244,244',
'244,244,244,244,,,244,,,,,,,244,,,244,244,244,244,244,244,244,244,,244',
'244,244,,244,244,244,244,244,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,244',
',,244,,,,,,244,,,,,,,,,244,,,,,244,244,244,244,,244,244,244,244,,,,',
'244,244,,,,245,245,245,244,245,244,244,244,245,245,,,,245,,245,245,245',
'245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,,,245,,,245',
'245,245,245,245,245,245,245,,245,245,245,,245,245,245,245,245,,,,,,',
',,,,,,,,,,,,,245,,,245,,,245,245,,,245,,,,,,245,,,,,,,,,245,,,,,245',
'245,245,245,,245,245,245,245,,,,,245,245,,,,246,246,246,245,246,245',
'245,245,246,246,,,,246,,246,246,246,246,246,246,246,,,,,,246,246,246',
'246,246,246,246,,,246,,,,,,,246,,,246,246,246,246,246,246,246,246,,246',
'246,246,,246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246,246',
',,246,,,,,,246,,,,,,,,,246,,,,,246,246,246,246,,246,246,246,246,,,,',
'246,246,,,,247,247,247,246,247,246,246,246,247,247,,,,247,,247,247,247',
'247,247,247,247,,,,,,247,247,247,247,247,247,247,,,247,,,,,,,247,,,247',
'247,247,247,247,247,247,247,,247,247,247,,247,247,247,247,247,,,,,,',
',,,,,,,,,,,,,247,,,247,,,247,247,,,247,,,,,,247,,,,,,,,,247,,,,,247',
'247,247,247,,247,247,247,247,,,,,247,247,,,,248,248,248,247,248,247',
'247,247,248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248,248,248',
'248,248,248,248,,,248,,,,,,,248,,,248,248,248,248,248,248,248,248,,248',
'248,248,,248,248,248,248,248,,,,,,,,,,,,,,,,,,,,248,,,248,,,248,248',
',,248,,,,,,248,,,,,,,,,248,,,,,248,248,248,248,,248,248,248,248,,,,',
'248,248,,,,249,249,249,248,249,248,248,248,249,249,,,,249,,249,249,249',
'249,249,249,249,,,,,,249,249,249,249,249,249,249,,,249,,,,,,,249,,,249',
'249,249,249,249,249,249,249,,249,249,249,,249,249,249,249,249,,,,,,',
',,,,,,,,,,,,,249,,,249,,,249,249,,,249,,,,,,249,,,,,,,,,249,,,,,249',
'249,249,249,,249,249,249,249,,,,,249,249,,,,250,250,250,249,250,249',
'249,249,250,250,,,,250,,250,250,250,250,250,250,250,,,,,,250,250,250',
'250,250,250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250,250,,250',
'250,250,,250,250,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,,,250,250',
',,250,,,,,,250,,,,,,,,,250,,,,,250,250,250,250,,250,250,250,250,,,,',
'250,250,,,,251,251,251,250,251,250,250,250,251,251,,,,251,,251,251,251',
'251,251,251,251,,,,,,251,251,251,251,251,251,251,,,251,,,,,,,251,,,251',
'251,251,251,251,251,251,251,,251,251,251,,251,251,251,251,251,,,,,,',
',,,,,,,,,,,,,251,,,251,,,251,251,,,251,,,,,,251,,,,,,,,,251,,,,,251',
'251,251,251,,251,251,251,251,,,,,251,251,,,,252,252,252,251,252,251',
'251,251,252,252,,,,252,,252,252,252,252,252,252,252,,,,,,252,252,252',
'252,252,252,252,,,252,,,,,,,252,,,252,252,252,252,252,252,252,252,,252',
'252,252,,252,252,252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,252',
',,252,,,,,,252,,,,,,,,,252,,,,,252,252,252,252,,252,252,252,252,,,,',
'252,252,,,,253,253,253,252,253,252,252,252,253,253,,,,253,,253,253,253',
'253,253,253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253,,,253',
'253,253,253,253,253,253,253,,253,253,253,,253,253,253,253,253,,,,,,',
',,,,,,,,,,,,,253,,,253,,,253,253,,,253,,,,,,253,,,,,,,,,253,,,,,253',
'253,253,253,,253,253,253,253,,,,,253,253,,,,254,254,254,253,254,253',
'253,253,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254,254',
'254,254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254,254,,254',
'254,254,,254,254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,254',
',,254,,,,,,254,,,,,,,,,254,,,,,254,254,254,254,,254,254,254,254,,,,',
'254,254,,,,255,255,255,254,255,254,254,254,255,255,,,,255,,255,255,255',
'255,255,255,255,,,,,,255,255,255,255,255,255,255,,,255,,,,,,,255,,,255',
'255,255,255,255,255,255,255,,255,255,255,,255,255,255,255,255,,,,,,',
',,,,,,,,,,,,,255,,,255,,,255,255,,,255,,,,,,255,,,,,,,,,255,,,,,255',
'255,255,255,,255,255,255,255,,,,,255,255,,,,256,256,256,255,256,255',
'255,255,256,256,,,,256,,256,256,256,256,256,256,256,,,,,,256,256,256',
'256,256,256,256,,,256,,,,,,,256,,,256,256,256,256,256,256,256,256,,256',
'256,256,,256,256,256,256,256,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,256',
',,256,,,,,,256,,,,,,,,,256,,,,,256,256,256,256,,256,256,256,256,,,,',
'256,256,,,,510,510,510,256,510,256,256,256,510,510,,,,510,,510,510,510',
'510,510,510,510,,,,,,510,510,510,510,510,510,510,,,510,,,,,,,510,,,510',
'510,510,510,510,510,510,510,,510,510,510,,510,510,,,510,,,,,,,,,,,,',
',,,,,,,510,,,510,,,510,510,,,510,,,,,,,,,,,,,,,,,,,,510,510,510,510',
',510,510,510,510,,,,,510,510,,,,673,673,673,510,673,510,510,510,673',
'673,,,,673,,673,673,673,673,673,673,673,,,,,,673,673,673,673,673,673',
'673,,,673,,,,,,,673,,,673,673,673,673,673,673,673,673,,673,673,673,',
'673,673,,,673,,,,,,,,,,,,,,,,,,,,673,,,673,,,673,673,,,673,,,,,,,,,',
',,,,,,,,,,673,673,673,673,,673,673,673,673,,,,,673,673,,,,263,263,263',
'673,263,673,673,673,263,263,,,,263,,263,263,263,263,263,263,263,,,,',
',263,263,263,263,263,263,263,,,263,,,,,,,263,,,263,263,263,263,263,263',
'263,263,263,263,263,263,,263,263,263,263,263,,,,,,,,,,,,,,,,,,,,263',
',,263,,,263,263,,,263,,263,,263,,263,,,263,,,,,,263,,,,,263,263,263',
'263,,263,263,263,263,,,,,263,263,,,,264,264,264,263,264,263,263,263',
'264,264,,,,264,,264,264,264,264,264,264,264,,,,,,264,264,264,264,264',
'264,264,,,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264,264,264',
'264,,264,264,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,264,,,264',
',264,,264,,264,,,264,,,,,,264,,,,,264,264,264,264,,264,264,264,264,',
',,,264,264,,,,272,272,272,264,272,264,264,264,272,272,,,,272,,272,272',
'272,272,272,272,272,,,,,,272,272,272,272,272,272,272,,,272,,,,,,,272',
',,272,272,272,272,272,272,272,272,272,272,272,272,,272,272,272,272,272',
',,,,,,,,,,,,,,,,,,,272,,,272,,,272,272,,,272,,272,,272,,272,,,272,,',
',,,272,,,,,272,272,272,272,,272,272,272,272,,,,,272,272,272,,,504,504',
'504,272,504,272,272,272,504,504,,,,504,,504,504,504,504,504,504,504',
',,,,,504,504,504,504,504,504,504,,,504,,,,,,,504,,,504,504,504,504,504',
'504,504,504,504,504,504,504,,504,504,504,504,504,,,,,,,,,,,,,,,,,,,',
'504,,,504,,,504,504,,,504,,504,,504,,504,,,504,,,,,,504,,,,,504,504',
'504,504,,504,504,504,504,,,,,504,504,,,,502,502,502,504,502,504,504',
'504,502,502,,,,502,,502,502,502,502,502,502,502,,,,,,502,502,502,502',
'502,502,502,,,502,,,,,,,502,,,502,502,502,502,502,502,502,502,,502,502',
'502,,502,502,,,502,,,,,,,,,,,,,,,,,,,,502,,,502,,,502,502,,,502,,,,',
',,,,,,,,,,,,,,,502,502,502,502,,502,502,502,502,,,,,502,502,,,,678,678',
'678,502,678,502,502,502,678,678,,,,678,,678,678,678,678,678,678,678',
',,,,,678,678,678,678,678,678,678,,,678,,,,,,,678,,,678,678,678,678,678',
'678,678,678,,678,678,678,,678,678,678,678,678,,,,,,,,,,,,,,,,,,,,678',
',,678,,,678,678,,,678,,678,,,,678,,,,,,,,,678,,,,,678,678,678,678,,678',
'678,678,678,,,,,678,678,,,,279,279,279,678,279,678,678,678,279,279,',
',,279,,279,279,279,279,279,279,279,,,,,,279,279,279,279,279,279,279',
',,279,,,,,,,279,,,279,279,279,279,279,279,279,279,,279,279,279,,279',
'279,279,279,279,,,,,,,,,,,,,,,,,,,,279,,,279,,,279,279,,,279,,,,,,279',
',,,,,,,,279,,,,,279,279,279,279,,279,279,279,279,,,,,279,279,,,,881',
'881,881,279,881,279,279,279,881,881,,,,881,,881,881,881,881,881,881',
'881,,,,,,881,881,881,881,881,881,881,,,881,,,,,,,881,,,881,881,881,881',
'881,881,881,881,,881,881,881,,881,881,,,881,,,,,,,,,,,,,,,,,,,,881,',
',881,,,881,881,,,881,,,,,,,,,,,,,,,,,,,,881,881,881,881,,881,881,881',
'881,,,,,881,881,,,,281,281,281,881,281,881,881,881,281,281,,,,281,,281',
'281,281,281,281,281,281,,,,,,281,281,281,281,281,281,281,,,281,,,,,',
',281,,,281,281,281,281,281,281,281,281,,281,281,281,,281,281,281,281',
'281,,,,,,,,,,,,,,,,,,,,281,,,281,,,281,281,,,281,,,,,,281,,,,,,,,,281',
',,,,281,281,281,281,,281,281,281,281,,,,,281,281,,,,283,283,283,281',
'283,281,281,281,283,283,,,,283,,283,283,283,283,283,283,283,,,,,,283',
'283,283,283,283,283,283,,,283,,,,,,,283,,,283,283,283,283,283,283,283',
'283,,283,283,283,,283,283,283,283,283,,,,,,,,,,,,,,,,,,,,283,,,283,',
',283,283,,,283,,,,,,283,,,,,,,,,283,,,,,283,283,283,283,,283,283,283',
'283,,,,,283,283,,,,284,284,284,283,284,283,283,283,284,284,,,,284,,284',
'284,284,284,284,284,284,,,,,,284,284,284,284,284,284,284,,,284,,,,,',
',284,,,284,284,284,284,284,284,284,284,,284,284,284,,284,284,284,284',
'284,,,,,,,,,,,,,,,,,,,,284,,,284,,,284,284,,,284,,,,,,284,,,,,,,,,284',
',,,,284,284,284,284,,284,284,284,284,,,,,284,284,,,,,,,284,,284,284',
'284,494,494,494,494,494,,,,494,494,,,,494,,494,494,494,494,494,494,494',
',,,,,494,494,494,494,494,494,494,,,494,,,,,,494,494,494,494,494,494',
'494,494,494,494,494,494,,494,494,494,,494,494,494,494,494,,,,,,,,,,',
',,,,,,,,,494,,,494,,,494,494,,,494,,494,,,,494,,,,,,,,,494,,,,,494,494',
'494,494,,494,494,494,494,,,,,494,494,,,,,,494,494,,494,494,494,289,289',
'289,289,289,,,,289,289,,,,289,,289,289,289,289,289,289,289,,,,,,289',
'289,289,289,289,289,289,,,289,,,,,,289,289,,289,289,289,289,289,289',
'289,289,289,,289,289,289,,289,289,289,289,289,,,,,,,,,,,,,,,,,,,,289',
',,289,,,289,289,,,289,,289,,,,289,,,,,,,,,289,,,,,289,289,289,289,,289',
'289,289,289,,,,,289,289,,,,34,34,34,289,34,289,289,289,34,34,,,,34,',
'34,34,34,34,34,34,34,,,,,,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34',
'34,34,34,34,34,34,,34,34,34,,34,34,,,34,,,,,,,,,,,,,,,,,,,,34,,,34,',
',34,34,,,34,,34,,,,,,,,,,,,,,,,,,34,34,34,34,,34,34,34,34,,,,,34,34',
',,,869,869,869,34,869,34,34,34,869,869,,,,869,,869,869,869,869,869,869',
'869,,,,,,869,869,869,869,869,869,869,,,869,,,,,,,869,,,869,869,869,869',
'869,869,869,869,,869,869,869,,869,869,,,869,,,,,,,,,,,,,,,,,,,,869,',
',869,,,869,869,,,869,,,,,,,,,,,,,,,,,,,,869,869,869,869,,869,869,869',
'869,,,,,869,869,,,,489,489,489,869,489,869,869,869,489,489,,,,489,,489',
'489,489,489,489,489,489,,,,,,489,489,489,489,489,489,489,,,489,,,,,',
',489,,,489,489,489,489,489,489,489,489,,489,489,489,,489,489,489,489',
'489,,,,,,,,,,,,,,,,,,,,489,,,489,,,489,489,,,489,,,,,,489,,,,,,,,,489',
',,,,489,489,489,489,,489,489,489,489,,,,,489,489,,,,31,31,31,489,31',
'489,489,489,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31',
'31,,,31,,,,,,,31,,,31,31,31,31,31,31,31,31,31,31,31,31,,31,31,31,31',
'31,,,,,,,,,,,,,,,,,,,,31,,,31,,,31,31,,,31,,31,,31,,31,,,31,,,,,,31',
',,,,31,31,31,31,,31,31,31,31,,,,,31,31,,,,487,487,487,31,487,31,31,31',
'487,487,,,,487,,487,487,487,487,487,487,487,,,,,,487,487,487,487,487',
'487,487,,,487,,,,,,,487,,,487,487,487,487,487,487,487,487,487,487,487',
'487,,487,487,487,487,487,,,,,,,,,,,,,,,,,,,,487,,,487,,,487,487,,,487',
',,,487,,487,,,487,,,,,,487,,,,,487,487,487,487,,487,487,487,487,,,,',
'487,487,,,,485,485,485,487,485,487,487,487,485,485,,,,485,,485,485,485',
'485,485,485,485,,,,,,485,485,485,485,485,485,485,,,485,,,,,,,485,,,485',
'485,485,485,485,485,485,485,485,485,485,485,,485,485,485,485,485,,,',
',,,,,,,,,,,,,,,,485,,,485,,,485,485,,,485,,485,,485,,485,,,485,,,,,',
'485,,,,,485,485,485,485,,485,485,485,485,,,,,485,485,,,,695,695,695',
'485,695,485,485,485,695,695,,,,695,,695,695,695,695,695,695,695,,,,',
',695,695,695,695,695,695,695,,,695,,,,,,,695,,,695,695,695,695,695,695',
'695,695,,695,695,695,,695,695,695,695,695,,,,,,,,,,,,,,,,,,,,695,,,695',
',,695,695,,,695,,,,,,695,,,,,,,,,695,,,,,695,695,695,695,,695,695,695',
'695,,,,,695,695,,,,297,297,297,695,297,695,695,695,297,297,,,,297,,297',
'297,297,297,297,297,297,,,,,,297,297,297,297,297,297,297,,,297,,,,,',
',297,,,297,297,297,297,297,297,297,297,,297,297,297,,297,297,,,297,',
',,,,,,,,,,,,,,,,,,297,,,297,,,297,297,,,297,,,693,,693,693,693,693,693',
',,,,,,,,693,,297,297,297,297,,297,297,297,297,,,,,297,297,,,,297,,693',
'297,,297,297,297,30,30,30,,30,693,693,,30,30,693,,,30,,30,30,30,30,30',
'30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30,30,30,30',
'30,30,30,30,30,,30,30,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,',
'30,,30,,30,,30,,,30,,,,,,30,,,,,30,30,30,30,,30,30,30,30,,,,,30,30,',
',,445,445,445,30,445,30,30,30,445,445,,,,445,,445,445,445,445,445,445',
'445,,,,,,445,445,445,445,445,445,445,,,445,,,,,,,445,,,445,445,445,445',
'445,445,445,445,,445,445,445,,445,445,445,445,445,,,,,,,,,,,,,,,,,,',
',445,,,445,,,445,445,,,445,,,,,,445,,,,,,,,,445,,,,,445,445,445,445',
',445,445,445,445,,,,,445,445,,,,855,855,855,445,855,445,445,445,855',
'855,,,,855,,855,855,855,855,855,855,855,,,,,,855,855,855,855,855,855',
'855,,,855,,,,,,,855,,,855,855,855,855,855,855,855,855,,855,855,855,',
'855,855,855,855,855,,,,,,,,,,,,,,,,,,,,855,,,855,,,855,855,,,855,,,',
',,855,,,,,,,,,855,,,,,855,855,855,855,,855,855,855,855,,,,,855,855,',
',,854,854,854,855,854,855,855,855,854,854,,,,854,,854,854,854,854,854',
'854,854,,,,,,854,854,854,854,854,854,854,,,854,,,,,,,854,,,854,854,854',
'854,854,854,854,854,854,854,854,854,,854,854,854,854,854,,,,,,,,,,,',
',,,,,,,,854,,,854,,,854,854,,,854,,,,854,,854,,,854,,,,,,854,,,,,854',
'854,854,854,,854,854,854,854,,,,,854,854,,,,444,444,444,854,444,854',
'854,854,444,444,,,,444,,444,444,444,444,444,444,444,,,,,,444,444,444',
'444,444,444,444,,,444,,,,,,,444,,,444,444,444,444,444,444,444,444,,444',
'444,444,,444,444,444,444,444,,,,,,,,,,,,,,,,,,,,444,,,444,,,444,444',
',,444,,,,,,444,,,,,,,,,444,,,,,444,444,444,444,,444,444,444,444,,,,',
'444,444,,,,29,29,29,444,29,444,444,444,29,29,,,,29,,29,29,29,29,29,29',
'29,,,,,,29,29,29,29,29,29,29,,,29,,,,,,,29,,,29,29,29,29,29,29,29,29',
'29,29,29,29,,29,29,29,29,29,,,,,,,,,,,,,,,,,,,,29,,,29,,,29,29,,,29',
',29,,29,,29,,,29,,,,,,29,,,,,29,29,29,29,,29,29,29,29,,,,,29,29,,,,443',
'443,443,29,443,29,29,29,443,443,,,,443,,443,443,443,443,443,443,443',
',,,,,443,443,443,443,443,443,443,,,443,,,,,,,443,,,443,443,443,443,443',
'443,443,443,,443,443,443,,443,443,443,443,443,,,,,,,,,,,,,,,,,,,,443',
',,443,,,443,443,,,443,,,,,,443,,,,,,,,,443,,,,,443,443,443,443,,443',
'443,443,443,,,,,443,443,,,,441,441,441,443,441,443,443,443,441,441,',
',,441,,441,441,441,441,441,441,441,,,,,,441,441,441,441,441,441,441',
',,441,,,,,,,441,,,441,441,441,441,441,441,441,441,441,441,441,441,,441',
'441,441,441,441,,,,,,,,,,,,,,,,,,,,441,,,441,,,441,441,,,441,,441,,441',
',441,,,441,,,,,,441,,,,,441,441,441,441,,441,441,441,441,,,,,441,441',
',,,721,721,721,441,721,441,441,441,721,721,,,,721,,721,721,721,721,721',
'721,721,,,,,,721,721,721,721,721,721,721,,,721,,,,,,,721,,,721,721,721',
'721,721,721,721,721,,721,721,721,,721,721,721,721,721,,,,,,,,,,,,,,',
',,,,,721,,,721,,,721,721,,,721,,,,,,721,,,,,,,,,721,,,,,721,721,721',
'721,,721,721,721,721,,,,,721,721,,,,403,403,403,721,403,721,721,721',
'403,403,,,,403,,403,403,403,403,403,403,403,,,,,,403,403,403,403,403',
'403,403,,,403,,,,,,,403,,,403,403,403,403,403,403,403,403,,403,403,403',
',403,403,403,403,403,,,,,,,,,,,,,,,,,,,,403,,,403,,,403,403,,,403,,',
',,,403,,,,,,,,,403,,,,,403,403,403,403,,403,403,403,403,,,,,403,403',
',,,727,727,727,403,727,403,403,403,727,727,,,,727,,727,727,727,727,727',
'727,727,,,,,,727,727,727,727,727,727,727,,,727,,,,,,,727,,,727,727,727',
'727,727,727,727,727,,727,727,727,,727,727,727,727,727,,,,,,,,,,,,,,',
',,,,,727,,,727,,,727,727,,,727,,,,,,727,,,,,,,,,727,,,,,727,727,727',
'727,,727,727,727,727,,,,,727,727,,,,837,837,837,727,837,727,727,727',
'837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837,837,837,837',
'837,837,,,837,,,,,,,837,,,837,837,837,837,837,837,837,837,,837,837,837',
',837,837,837,837,837,,,,,,,,,,,,,,,,,,,,837,,,837,,,837,837,,,837,,837',
',,,837,,,,,,,,,837,,,,,837,837,837,837,,837,837,837,837,,,,,837,837',
',,,314,314,314,837,314,837,837,837,314,314,,,,314,,314,314,314,314,314',
'314,314,,,,,,314,314,314,314,314,314,314,,,314,,,,,,,314,,,314,314,314',
'314,314,314,314,314,,314,314,314,,314,314,,,314,,,,,,,,,,,,,,,,,,,,314',
',,314,,,314,314,,,314,,,,,,,,,,,,,,,,,,,,314,314,314,314,,314,314,314',
'314,,,,,314,314,,,,375,375,375,314,375,314,314,314,375,375,,,,375,,375',
'375,375,375,375,375,375,,,,,,375,375,375,375,375,375,375,,,375,,,,,',
',375,,,375,375,375,375,375,375,375,375,,375,375,375,,375,375,375,375',
'375,,,,,,,,,,,,,,,,,,,,375,,,375,,,375,375,,,375,,,,,,375,,,,,,,,,375',
',,,,375,375,375,375,,375,375,375,375,,,,,375,375,,,,339,339,339,375',
'339,375,375,375,339,339,,,,339,,339,339,339,339,339,339,339,,,,,,339',
'339,339,339,339,339,339,,,339,,,,,,,339,,,339,339,339,339,339,339,339',
'339,,339,339,339,,339,339,339,339,339,,,,,,,,,,,,,,,,,,,,339,,,339,',
',339,339,,,339,,,,,,339,,,,,,,,,339,,,,,339,339,339,339,,339,339,339',
'339,,,,,339,339,,,,978,978,978,339,978,339,339,339,978,978,,,,978,,978',
'978,978,978,978,978,978,,,,,,978,978,978,978,978,978,978,,,978,,,,,',
',978,,,978,978,978,978,978,978,978,978,978,978,978,978,,978,978,978',
'978,978,,,,,,,,,,,,,,,,,,,,978,,,978,,,978,978,,,978,,978,,978,,978',
',,978,,,,,,978,,,,,978,978,978,978,,978,978,978,978,,,,,978,978,,,,832',
'832,832,978,832,978,978,978,832,832,,,,832,,832,832,832,832,832,832',
'832,,,,,,832,832,832,832,832,832,832,,,832,,,,,,,832,,,832,832,832,832',
'832,832,832,832,,832,832,832,,832,832,832,832,832,,,,,,,,,,,,,,,,,,',
',832,,,832,,,832,832,,,832,,,,,,832,,,,,,,,,832,,,,,832,832,832,832',
',832,832,832,832,,,,,832,832,,,,322,322,322,832,322,832,832,832,322',
'322,,,,322,,322,322,322,322,322,322,322,,,,,,322,322,322,322,322,322',
'322,,,322,,,,,,,322,,,322,322,322,322,322,322,322,322,,322,322,322,',
'322,322,322,322,322,,,,,,,,,,,,,,,,,,,,322,,,322,322,,322,322,,,322',
',,,,,322,,,,,,,,,322,,,,,322,322,322,322,,322,322,322,322,,,,,322,322',
',,,750,750,750,322,750,322,322,322,750,750,,,,750,,750,750,750,750,750',
'750,750,,,,,,750,750,750,750,750,750,750,,,750,,,,,,,750,,,750,750,750',
'750,750,750,750,750,,750,750,750,,750,750,750,750,750,,,,,,,,,,,,,,',
',,,,,750,,,750,,,750,750,,,750,,,,,,750,,,,,,,,,750,,,,,750,750,750',
'750,,750,750,750,750,,,,,750,750,,,,324,324,324,750,324,750,750,750',
'324,324,,,,324,,324,324,324,324,324,324,324,,,,,,324,324,324,324,324',
'324,324,,,324,,,,,,,324,,,324,324,324,324,324,324,324,324,,324,324,324',
',324,324,324,324,324,,,,,,,,,,,,,,,,,,,,324,,,324,,,324,324,,,324,,',
',,,324,,,,,,,,,324,,,,,324,324,324,324,,324,324,324,324,,,,,324,324',
',,,752,752,752,324,752,324,324,324,752,752,,,,752,,752,752,752,752,752',
'752,752,,,,,,752,752,752,752,752,752,752,,,752,,,,,,,752,,,752,752,752',
'752,752,752,752,752,,752,752,752,,752,752,752,752,752,,,,,,,,,,,,,,',
',,,,,752,,,752,,,752,752,,,752,,,,,,752,,,,,,,,,752,,,,,752,752,752',
'752,,752,752,752,752,,,,,752,752,,,,359,359,359,752,359,752,752,752',
'359,359,,,,359,,359,359,359,359,359,359,359,,,,,,359,359,359,359,359',
'359,359,,,359,,,,,,,359,,,359,359,359,359,359,359,359,359,,359,359,359',
',359,359,359,359,359,,,,,,,,,,,,,,,,,,,,359,,,359,,,359,359,,,359,,',
',,,359,,,,,,,,,359,,,,,359,359,359,359,,359,359,359,359,,,,,359,359',
',,,766,766,766,359,766,359,359,359,766,766,,,,766,,766,766,766,766,766',
'766,766,,,,,,766,766,766,766,766,766,766,,,766,,,,,,,766,,,766,766,766',
'766,766,766,766,766,,766,766,766,,766,766,766,766,766,,,,,,,,,,,,,,',
',,,,,766,,,766,,,766,766,,,766,,,,,,766,,,,,,,,,766,,,,,766,766,766',
'766,,766,766,766,766,,,,,766,766,,,,767,767,767,766,767,766,766,766',
'767,767,,,,767,,767,767,767,767,767,767,767,,,,,,767,767,767,767,767',
'767,767,,,767,,,,,,,767,,,767,767,767,767,767,767,767,767,,767,767,767',
',767,767,767,767,767,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,767,,,767,,',
',,,767,,,,,,,,,767,,,,,767,767,767,767,,767,767,767,767,,,,,767,767',
',,,20,20,20,767,20,767,767,767,20,20,,,,20,,20,20,20,20,20,20,20,,,',
',,20,20,20,20,20,20,20,,,20,,,,,,,20,,,20,20,20,20,20,20,20,20,,20,20',
'20,,20,20,20,20,20,,,,,,,,,,,,,,,,,,,,20,,,20,,,20,20,,,20,,,,,,20,',
',,,,,,,20,,,,,20,20,20,20,,20,20,20,20,,,,,20,20,,,,768,768,768,20,768',
'20,20,20,768,768,,,,768,,768,768,768,768,768,768,768,,,,,,768,768,768',
'768,768,768,768,,,768,,,,,,,768,,,768,768,768,768,768,768,768,768,,768',
'768,768,,768,768,768,768,768,,,,,,,,,,,,,,,,,,,,768,,,768,,,768,768',
',,768,,,,,,768,,,,,,,,,768,,,,,768,768,768,768,,768,768,768,768,,,,',
'768,768,,,,769,769,769,768,769,768,768,768,769,769,,,,769,,769,769,769',
'769,769,769,769,,,,,,769,769,769,769,769,769,769,,,769,,,,,,,769,,,769',
'769,769,769,769,769,769,769,,769,769,769,,769,769,769,769,769,,,,,,',
',,,,,,,,,,,,,769,,,769,,,769,769,,,769,,,,,,769,,,,,,,,,769,,,,,769',
'769,769,769,,769,769,769,769,,,,,769,769,,,,771,771,771,769,771,769',
'769,769,771,771,,,,771,,771,771,771,771,771,771,771,,,,,,771,771,771',
'771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771,771,771,771,,771',
'771,771,,771,771,771,771,771,,,,,,,,,,,,,,,,,,,,771,,,771,,,771,771',
',,771,,,,,,771,,,,,,,,,771,,,,,771,771,771,771,,771,771,771,771,,,,',
'771,771,,,,783,783,783,771,783,771,771,771,783,783,,,,783,,783,783,783',
'783,783,783,783,,,,,,783,783,783,783,783,783,783,,,783,,,,,,,783,,,783',
'783,783,783,783,783,783,783,,783,783,783,,783,783,,,783,,,,,,,,,,,,',
',,,,,,,783,,,783,,,783,783,,,783,,,,,,,,,,,,,,,,,,,,783,783,783,783',
',783,783,783,783,,,,,783,783,,,,340,340,340,783,340,783,783,783,340',
'340,,,,340,,340,340,340,340,340,340,340,,,,,,340,340,340,340,340,340',
'340,,,340,,,,,,,340,,,340,340,340,340,340,340,340,340,,340,340,340,',
'340,340,340,340,340,,,,,,,,,,,,,,,,,,,,340,,,340,,,340,340,,,340,,,',
',,340,,,,,,,,,340,,,,,340,340,340,340,,340,340,340,340,,,,,340,340,',
',,617,617,617,340,617,340,340,340,617,617,,,,617,,617,617,617,617,617',
'617,617,,,,,,617,617,617,617,617,617,617,,,617,,,,,,,617,,,617,617,617',
'617,617,617,617,617,,617,617,617,,617,617,617,617,617,,,,,,,,,,,,,,',
',,,,,617,,,617,,,617,617,,,617,,,,,,617,,,,,,,,,617,,,,,617,617,617',
'617,,617,617,617,617,,,,,617,617,,,,,56,,617,,617,617,617,56,56,56,',
',56,56,56,,56,,,,,,,,,,56,56,56,,,,,,,,56,56,,56,56,56,56,56,,,,,,,',
',,,,,,,,,,,,,,,56,56,56,56,56,56,56,56,56,56,56,56,56,56,,,56,56,56',
',,56,,,56,,,56,56,,56,,56,,56,,56,56,,56,56,56,56,56,,56,,56,,,,,,,',
',,,,,,56,,,56,56,56,56,424,56,,56,,,,424,424,424,,,424,424,424,,424',
',,,,,,,,424,424,424,424,,,,,,,,424,424,,424,424,424,424,424,,,,,,,,',
',,,,,,,,,,,,,,424,424,424,424,424,424,424,424,424,424,424,424,424,424',
',,424,424,424,,,424,,,424,,,424,424,,424,,424,,424,,424,424,,424,424',
'424,424,424,,424,424,424,,,,,,,,,,,,,,424,,,424,424,424,424,423,424',
',424,,,,423,423,423,,,423,423,423,,423,,,,,,,,,423,423,423,423,,,,,',
',,423,423,,423,423,423,423,423,,,,,,,,,,,,,,,,,,,,,,,423,423,423,423',
'423,423,423,423,423,423,423,423,423,423,,,423,423,423,,,423,,,423,,',
'423,423,,423,,423,,423,,423,423,,423,423,423,423,423,,423,423,423,890',
',890,890,890,890,890,,,,,,,423,,890,423,423,423,423,27,423,,423,,,,27',
'27,27,,,27,27,27,,27,890,,,,,,,,27,27,27,890,890,,,,890,,,27,27,,27',
'27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27',
'27,27,,,27,27,27,,,27,,27,27,,,27,27,,27,,27,,27,,27,27,,27,27,27,27',
'27,,27,27,27,,,,,,,,,,,,,,27,,414,27,27,,27,,27,414,414,414,,,414,414',
'414,,414,,,,,,,,,414,414,414,,,,,,,,,414,414,,414,414,414,414,414,,',
',,,,,,,,,,,,,,,,,,,,414,414,414,414,414,414,414,414,414,414,414,414',
'414,414,,,414,414,414,,,414,,414,414,,,414,414,,414,,414,,414,,414,414',
',414,414,414,414,414,,414,414,414,,,,,,,,,,,,,,414,,473,414,414,,414',
',414,473,473,473,,,473,473,473,643,473,643,643,643,643,643,,,,473,473',
',,,643,,,,,,473,473,,473,473,473,473,473,,,,,,,,,643,,,,,,,,,643,643',
'643,643,,,,643,,,,,,,,,473,,28,,,,,473,,28,28,28,473,473,28,28,28,643',
'28,,,,,,,,,,28,28,,,,,,473,473,,28,28,,28,28,28,28,28,,,,,473,,,473',
',,,,473,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28',
',,28,,28,28,,,28,28,,28,,28,,28,,28,28,,28,28,28,28,28,,28,,28,,,,,',
',,,,,,,,28,,,28,28,,28,,28,394,394,394,394,394,394,394,394,394,394,394',
'394,394,394,394,394,394,394,394,394,394,394,394,394,,,,394,394,394,394',
'394,394,394,394,394,394,,,,,,394,394,394,394,394,394,394,394,394,,,394',
',,,,,,,394,394,,394,394,394,394,394,394,394,,,394,394,,,,394,394,394',
'394,,,,,,,,,,,,,,394,394,,394,394,394,394,394,394,394,394,394,394,394',
'394,,,394,394,,,,,,,,,,,,,,394,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9',
'9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9,,,,,,9,9,9,9,9,9,9,9,9,,,9,,,,,,,,9',
'9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9,9,,,,,,,,,,,,,,9,9,,9,9,9,9,9,9,9,9',
'9,9,9,9,,,9,9,,,,,,,,,,,,,,9,613,613,613,613,613,613,613,613,613,613',
'613,613,613,613,613,613,613,613,613,613,613,613,613,613,,,,613,613,613',
'613,613,613,613,613,613,613,,,,,,613,613,613,613,613,613,613,613,613',
',,613,,,,,,,,613,613,,613,613,613,613,613,613,613,,,613,613,,,,613,613',
'613,613,,,,,,,,,,,,,,613,613,,613,613,613,613,613,613,613,613,613,613',
'613,613,,,613,613,,,,,,,,,,,,,,613,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,',
',,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8',
'8,8,8,8,8,8,8,,,8,8,,,,,,,,,,,,,,8,71,71,71,71,71,71,71,71,71,71,71',
'71,71,71,71,71,71,71,71,71,71,71,71,71,,,,71,71,71,71,71,71,71,71,71',
'71,,,,,,71,71,71,71,71,71,71,71,71,71,71,71,,71,,,,,,71,71,,71,71,71',
'71,71,71,71,,,71,71,,,,71,71,71,71,,,,,,71,,,,,,,,71,71,,71,71,71,71',
'71,71,71,71,71,71,71,71,,,71,734,734,734,734,734,734,734,734,734,734',
'734,734,734,734,734,734,734,734,734,734,734,734,734,734,,,,734,734,734',
'734,734,734,734,734,734,734,,,,,,734,734,734,734,734,734,734,734,734',
',,734,,,,,,,,734,734,,734,734,734,734,734,734,734,,,734,734,,,,734,734',
'734,734,,,,,,,,,,,,,,734,734,,734,734,734,734,734,734,734,734,734,734',
'734,734,574,574,734,,574,,,,,,,,574,574,,574,574,574,574,574,574,574',
',,574,574,,,,574,574,574,574,,,,,,574,,,,,,,,574,574,,574,574,574,574',
'574,574,574,574,574,574,574,574,573,573,574,,573,,,,,,,,573,573,,573',
'573,573,573,573,573,573,,,573,573,,,,573,573,573,573,,,,,,573,,,,,,',
',573,573,,573,573,573,573,573,573,573,573,573,573,573,573,506,506,573',
',506,,,,,,,,506,506,,506,506,506,506,506,506,506,,,506,506,,,,506,506',
'506,506,,,,,,506,,,,,,,,506,506,,506,506,506,506,506,506,506,506,506',
'506,506,506,505,505,506,,505,,,,,,,,505,505,,505,505,505,505,505,505',
'505,,,505,505,,,,505,505,505,505,,,,,,505,,,,,,,,505,505,,505,505,505',
'505,505,505,505,505,505,505,505,505,259,259,505,,259,,,,,,,,259,259',
',259,259,259,259,259,259,259,,,259,259,,,,259,259,259,259,,,,,,,,,,',
',,,259,259,,259,259,259,259,259,259,259,259,259,259,259,259,979,979',
'259,,979,,,,,,,,979,979,,979,979,979,979,979,979,979,,,979,979,,,,979',
'979,979,979,,,,,,979,,,,,,,,979,979,,979,979,979,979,979,979,979,979',
'979,979,979,979,515,515,979,,515,,,,,,,,515,515,,515,515,515,515,515',
'515,515,,,515,515,,,,515,515,515,515,,,,,,515,,,,,,,,515,515,,515,515',
'515,515,515,515,515,515,515,515,515,515,980,980,515,,980,,,,,,,,980',
'980,,980,980,980,980,980,980,980,,,980,980,,,,980,980,980,980,,,,,,980',
',,,,,,,980,980,,980,980,980,980,980,980,980,980,980,980,980,980,516',
'516,980,,516,,,,,,,,516,516,,516,516,516,516,516,516,516,,,516,516,',
',,516,516,516,516,,,,,,516,,,,,,,,516,516,,516,516,516,516,516,516,516',
'516,516,516,516,516,581,581,516,,581,,,,,,,,581,581,,581,581,581,581',
'581,581,581,,,581,581,,,,581,581,581,581,,,,,,581,,,,,,,,581,581,,581',
'581,581,581,581,581,581,581,581,581,581,581,210,210,581,,210,,,,,,,',
'210,210,,210,210,210,210,210,210,210,,,210,210,,,,210,210,210,210,,',
',,,210,,,,,,,,210,210,,210,210,210,210,210,210,210,210,210,210,210,210',
'580,580,210,,580,,,,,,,,580,580,,580,580,580,580,580,580,580,,,580,580',
',,,580,580,580,580,,,,,,580,,,,,,,,580,580,,580,580,580,580,580,580',
'580,580,580,580,580,580,211,211,580,,211,,,,,,,,211,211,,211,211,211',
'211,211,211,211,,,211,211,,,,211,211,211,211,,,,,,211,,,,,,,,211,211',
',211,211,211,211,211,211,211,211,211,211,211,211,439,439,211,,439,,',
',,,,,439,439,,439,439,439,439,439,439,439,,,439,439,,,,439,439,439,439',
',,,,,439,,,,,,,,439,439,,439,439,439,439,439,439,439,439,439,439,439',
'439,933,933,439,,933,,,,,,,,933,933,,933,933,933,933,933,933,933,,,933',
'933,,,,933,933,933,933,,,,,,933,,,,,,,,933,933,,933,933,933,933,933',
'933,933,933,933,933,933,933,440,440,933,,440,,,,,,,,440,440,,440,440',
'440,440,440,440,440,,,440,440,,,,440,440,440,440,,,,,,440,,,,,,,,440',
'440,,440,440,440,440,440,440,440,440,440,440,440,440,,894,440,894,894',
'894,894,894,,335,,335,335,335,335,335,894,,,,,,,,335,,888,,888,888,888',
'888,888,,,,,,894,,,888,,,,,335,335,,894,894,,,,894,335,335,335,335,',
',,335,888,,966,,966,966,966,966,966,888,888,888,888,,,,888,966,,1008',
',1008,1008,1008,1008,1008,,964,,964,964,964,964,964,1008,,,,,966,,,964',
',,,,,,,966,966,,,,966,1008,,,,,,,,964,,,1008,1008,,,,1008,964,964,964',
'964,,,691,964,691,691,691,691,691,,732,,732,732,732,732,732,691,,,,',
',,,732,,982,,982,982,982,982,982,,,,,,691,,,982,,,,,732,691,691,691',
'691,,,,691,732,732,732,732,,,,732,982,,970,,970,970,970,970,970,,,982',
'982,,,,982,970,,968,,968,968,968,968,968,864,,864,864,864,864,864,,968',
',,,,970,,864,,532,,532,532,532,532,532,970,970,,,,970,968,,532,,,,,864',
',,,968,968,,,,968,,864,864,,,,864,532,,733,,733,733,733,733,733,532',
'532,532,532,,,,532,733,,862,,862,862,862,862,862,,689,,689,689,689,689',
'689,862,,,,,733,,,689,,,,,,733,733,733,733,,,,733,862,,,,,,,,689,862',
'862,862,862,,,,862,689,689,689,689,,,860,689,860,860,860,860,860,,,',
',,,,,860,,,,,,,,,,,,,,,,,,,,,,860,,,,,,,,,860,860,860,860,,,,860' ]
        racc_action_check = arr = ::Array.new(25029, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  1281,  1380,   nil,    53,   nil,  9153,  1421,  1229, 23283, 23027,
  1225,   nil,  1148,  1202,   763,   469,  1133,   356,   nil,   -74,
 21106,  2401,  1228,   nil,   329,   nil,    79, 22428, 22765, 18617,
 17962, 17299,   nil,  3521, 16906, 11249,   nil,  1120,   498,   538,
  1190,   189,  6894,  5183,  5576,  1110,   933,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 22026,   nil,   -70,  5052,
  5707,   -15,   nil,  5969,  6100,   nil,   nil,  6231,  6370,  6501,
  6632, 23411,   nil,   nil,   nil,   nil,   nil,   274,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   136,   nil,   nil,   248,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1230,
   nil,  7426,   nil,   nil,   nil,   nil,  7565,  7696,  7827,  7958,
  8097,  4221,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  1020,   nil,  3941,  8752,  8883,  9014,
 24195, 24317,  9415,  9546,  9677,  9808,  9939, 10070,   nil,   nil,
  1213,   139,   250,  1045,   172,   950,  1001,   nil, 11118,  3801,
   993, 11519, 11650, 11781, 11912, 12043, 12174, 12305, 12436, 12567,
 12698, 12829, 12960, 13091, 13222, 13353, 13484, 13615, 13746, 13877,
 14008, 14139, 14270, 14401, 14532, 14663, 14794,   nil,   nil, 23829,
   nil,   nil,   965, 15187, 15318,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15449,   nil,  2121,   nil,   924,   910,   nil, 15973,
   953, 16235,   nil, 16366, 16497,   nil,   nil,   390,   nil, 16775,
  1406,   913,   872,  3381,   879,   918,   865, 17823,  3241,  1043,
   -39,   793,   936,   721,   nil,   866,   821,   170,   nil,   nil,
   nil,   858,   248,   809, 19534,   nil,   504,   855,   474,   nil,
   836,   nil, 20189,  2541, 20451,   770,   nil,   600,   499,   757,
   721,   586,   720,   nil,   nil, 24570,   591,    35,    39, 19796,
 21761,   370,   693,   570,     6,   -19,  1284,   629,     5,   651,
   nil,   nil,   256,   327,   166,   nil,  1004,   nil,    16, 20713,
   nil,   nil,   nil,   375,   487,   156,   293,   319,   -22,   424,
   541,   613,   nil,   624,   nil, 19665,   nil,   350,   408,   390,
   393,   397,   -27,   -16,   402,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   302, 22899,   nil,   nil,   nil,   nil,   292,
   nil,   nil,   236, 19141,   204,   nil,   nil,   861,   181,   nil,
   121,   104,   527,   361, 22557,   nil,   nil,   nil,   358,   470,
   108,   nil,   nil, 22294, 22160,   nil,  1841,   nil,    39,   nil,
   nil,   721,   nil,   nil,   nil,   nil,   163,   nil,    11, 24378,
 24500, 18879,   112, 18748, 18486, 18093,  3241,  3381,   532,  3129,
    -5,   357,   389,   406,  5183,  5314,  5445,  4921,  4361,  4221,
  3801,  3521,  3661,  5052,  4781,  4641,  4501,   538,   316,  4081,
  3941,  1701,   -56, 22686,   nil,   nil,   nil,   nil,   352,   nil,
   122,   107,   362,   nil,   nil, 17561,   nil, 17430,   nil, 17168,
   nil,   nil,   nil,   nil, 16636,  1546,  1141,   429,   436,   nil,
   nil,   466, 15711,   569, 15580, 23768, 23707,   903,   731,   nil,
 14925,   764,   nil, 11388, 10987, 23951, 24073,  1561, 10856,   910,
   976,   578,   925,   nil, 10463,   nil,   nil, 10332,   nil,   nil,
   nil,   nil, 24808,   nil,   894,   904,   nil,   905,  1005,  1015,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1013,   649,   nil,
   nil,  9284,   nil,   nil,   nil,  1114,   nil,   nil,   nil,  1117,
   nil,   nil,  1171,  1421,  1219,   nil,  4361,    55,    59,  1219,
  1245,  8359,  8228, 23646, 23585,    22,   nil,   nil,   864,   nil,
 24256, 24134,  7156,   nil,   nil,   nil,   394,    52,  4501,  1186,
   nil,   156,   nil,   nil,   nil,   704,   nil,   nil,   nil,  1175,
   nil,   nil,   239,   nil,   283,   nil,   nil,  1228,   nil,  1241,
   nil,   nil,   nil, 23155,   nil,  1145, 10201, 21892,   363,  1273,
  5314,  5445,  5838,  6763,  1177,   nil,   nil,  7025,  7287,  1169,
   nil,  8490,  8621,   nil,   nil,   221,   142,     0,   580,  1025,
  1001,  1017,   nil, 22650,   nil,  2401,  1087,   -21,   238,   nil,
   861,  1001,   nil,   862,   nil,   907, 10594,   nil,   nil,   nil,
   880,   -84, 10725,   840,   nil,   835,    94,   162,   764,   473,
   861,   692,   581, 15056,  2261,   603,   -14,   581, 15842,   nil,
   435,   nil,   313,     3,   373,   769,   nil,   nil,   179, 24872,
   nil, 24703,   nil, 17870,   nil, 17692,   nil,  3087,   nil,   206,
   243,   985,   nil,   nil,   nil,   nil,   721,   nil,    49,   nil,
   nil,   nil,   nil,    86,   nil,    23,    -8,    -5,    34,    68,
    28, 19010,   549,  1001,   nil,   230,  1561, 19272,   nil,   nil,
   400,  1701, 24711, 24847, 23524,   nil,   nil,   nil,   nil,   nil,
   nil,  1841,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   357,
 20320,  1141, 20582,   nil,   428,   nil,  2681,   nil,  2541,   nil,
   nil,  1981,   nil,  2961,   nil,  2821, 20844, 20975, 21237, 21368,
   160, 21499,   585,   587,   nil,   595,   612,   614,   nil,   639,
   619,   625,   636, 21630,   nil,   nil,   793,   nil,   nil,  1981,
   697,   802,   nil,   nil,   nil,   682,   361,   nil,   nil,   825,
   nil,  2121,   712,   759,   nil,   nil,   758,   nil,   nil,  2261,
   721,   765,   725,   nil,   nil,   nil,   741,   742,   nil,   752,
   754,   nil,   755,   nil,   nil,   759,  3116,   765,  3126,   nil,
   892,   nil, 20058,   894,  2681,  2821,   nil, 19403,  2961,   -18,
    24,   nil,   951,   456,  3101,   nil,   965,   845,   135,   nil,
   859,   855,   nil,  1421, 18355, 18224,  1281,   431,   nil,   nil,
 24924,   nil, 24864,   nil, 24791,   nil,   nil,   905,  1127, 17037,
  1144,   973,   nil,   916,   nil,   nil,   nil,  3661,   nil,   nil,
   -11, 16104,   nil,   nil,   928,  1033,   nil,   nil, 24587,   nil,
 22357,   nil, 11296,   nil, 24562,   nil,   nil,   nil,   nil,   251,
  3321,   962,   nil,   -10,   nil,  1096,  1104,   nil,    18,   nil,
   nil,   nil,    12,   nil,   nil,   nil,  1036,   nil,   993,   nil,
   nil,   995,   998,  1000,  1001,   nil,  1002,   nil,   479,   nil,
   nil,   nil,  1281, 24439,   nil,   nil,   nil,  4081,  1183,  1323,
  1141,  1112,  1073,   nil,   nil,   nil,  1036,  1044,  1050,  1064,
  1068,  3461,  1094,   641,  4641,   nil,   nil,   nil,   nil,   nil,
  4781,   nil,  4921,   nil, 24651,   nil, 24626,   nil, 24784,   nil,
 24767,   nil,   nil,   nil,  1267,  1177,  1179,  1264, 19927, 23890,
 24012,   724, 24728,   nil,   nil,   nil,   nil,  3146,  1160,   467,
  1286,  1296,  1174,  1175,  1176,  1184,   nil,   nil,  1193,    36,
    12,    -9,   588,  1237,  1238,   nil,   nil,   nil, 24643,   nil,
   nil,   nil,   nil,    -1,   nil,  1252,   nil ]

racc_action_default = [
    -3,  -593,    -1,  -579,    -4,  -593,    -7,  -593,  -593,  -593,
  -593,   -29,  -593,  -593,  -593,  -279,  -593,   -40,   -43,  -581,
  -593,   -48,   -50,   -51,   -52,   -56,  -256,  -256,  -256,  -293,
  -328,  -329,   -68,   -11,   -72,   -80,   -82,  -593,  -486,  -487,
  -593,  -593,  -593,  -593,  -593,  -581,  -237,  -270,  -271,  -272,
  -273,  -274,  -275,  -276,  -277,  -278,  -569,  -281,  -283,  -592,
  -560,  -301,  -389,  -593,  -593,  -306,  -309,  -579,  -593,  -593,
  -593,  -593,  -330,  -331,  -427,  -428,  -429,  -430,  -431,  -452,
  -434,  -435,  -454,  -456,  -439,  -444,  -448,  -450,  -466,  -454,
  -468,  -470,  -471,  -472,  -473,  -567,  -475,  -476,  -568,  -478,
  -479,  -480,  -481,  -482,  -483,  -484,  -485,  -490,  -491,  -593,
    -2,  -580,  -588,  -589,  -590,    -6,  -593,  -593,  -593,  -593,
  -593,    -3,   -17,  -593,  -111,  -112,  -113,  -114,  -115,  -116,
  -117,  -118,  -119,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,  -188,  -189,
  -190,  -191,  -192,  -193,   -22,  -120,   -11,  -593,  -593,  -246,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -581,  -582,   -47,
  -593,  -486,  -487,  -593,  -279,  -593,  -593,  -229,  -593,   -11,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -593,
  -593,  -593,  -593,  -593,  -593,  -593,  -593,  -396,  -398,  -593,
  -577,  -578,   -57,  -246,  -593,  -300,  -402,  -411,  -413,   -63,
  -408,   -64,  -581,   -65,  -238,  -251,  -260,  -260,  -255,  -593,
  -261,  -593,  -562,  -593,  -593,   -66,   -67,  -579,   -12,  -593,
   -15,  -593,   -70,   -11,  -581,  -593,   -73,   -76,   -11,   -88,
   -89,  -593,  -593,   -96,  -293,  -296,  -581,  -593,  -328,  -329,
  -332,  -409,  -593,   -78,  -593,   -84,  -290,  -469,  -593,  -214,
  -215,  -230,  -593,   -11,  -593,  -581,  -239,  -585,  -585,  -593,
  -593,  -585,  -593,  -302,  -303,  -519,   -49,  -593,  -593,  -593,
  -593,  -579,  -593,  -580,  -486,  -487,  -593,  -593,  -279,  -593,
  -342,  -343,  -106,  -107,  -593,  -109,  -593,  -279,  -593,  -593,
  -486,  -487,  -321,  -111,  -112,  -153,  -154,  -155,  -171,  -176,
  -183,  -186,  -323,  -593,  -558,  -593,  -432,  -593,  -593,  -593,
  -593,  -593,  -593,  -593,  -593,  1017,    -5,  -591,   -23,   -24,
   -25,   -26,   -27,  -593,  -593,   -19,   -20,   -21,  -121,  -593,
   -30,   -39,  -266,  -593,  -593,  -265,   -31,  -196,  -581,  -247,
  -260,  -260,  -570,  -571,  -256,  -406,  -572,  -573,  -571,  -570,
  -256,  -405,  -407,  -572,  -573,   -37,  -204,   -38,  -593,   -41,
   -42,  -194,  -261,   -44,   -45,   -46,  -581,  -299,  -593,  -593,
  -593,  -246,  -290,  -593,  -593,  -593,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -216,  -217,  -218,  -219,  -220,  -221,
  -222,  -223,  -224,  -225,  -226,  -227,  -228,  -231,  -232,  -233,
  -234,  -581,  -378,  -256,  -570,  -571,   -54,   -58,  -581,  -257,
  -378,  -378,  -581,  -295,  -252,  -593,  -253,  -593,  -258,  -593,
  -262,  -565,  -566,   -10,  -580,   -14,    -3,  -581,   -69,  -288,
   -85,   -74,  -593,  -581,  -246,  -593,  -593,   -95,  -593,  -469,
  -593,   -81,   -86,  -593,  -593,  -593,  -593,  -235,  -593,  -419,
  -593,  -284,  -593,  -240,  -587,  -586,  -242,  -587,  -291,  -292,
  -561,  -390,  -519,  -393,  -557,  -557,  -502,  -504,  -504,  -504,
  -518,  -520,  -521,  -522,  -523,  -524,  -525,  -526,  -593,  -528,
  -530,  -532,  -537,  -539,  -540,  -542,  -547,  -549,  -550,  -552,
  -553,  -554,  -593,   -11,  -333,  -334,   -11,  -593,  -593,  -593,
  -593,  -593,  -246,  -593,  -593,  -290,  -314,  -106,  -107,  -108,
  -593,  -593,  -246,  -317,  -492,  -493,  -593,  -593,   -11,  -497,
  -325,  -581,  -433,  -453,  -458,  -593,  -460,  -436,  -455,  -593,
  -457,  -438,  -593,  -441,  -593,  -443,  -446,  -593,  -447,  -593,
  -467,    -8,   -18,  -593,   -28,  -269,  -593,  -593,  -410,  -593,
  -248,  -250,  -593,  -593,   -59,  -245,  -403,  -593,  -593,   -61,
  -404,  -593,  -593,  -298,  -583,  -570,  -571,  -570,  -571,  -581,
  -194,  -593,  -379,  -581,  -381,   -11,   -53,  -399,  -378,  -243,
   -11,   -11,  -294,  -260,  -259,  -263,  -593,  -563,  -564,   -13,
  -593,   -71,  -593,   -77,   -83,  -581,  -570,  -571,  -244,   -92,
   -94,  -593,   -79,  -593,  -203,  -213,  -581,  -592,  -592,  -282,
  -581,  -287,  -585,  -593,  -581,  -593,  -500,  -501,  -593,  -593,
  -511,  -593,  -514,  -593,  -516,  -593,  -344,  -593,  -346,  -348,
  -355,  -581,  -531,  -541,  -551,  -555,  -592,  -335,  -592,  -307,
  -336,  -337,  -310,  -593,  -313,  -593,  -581,  -570,  -571,  -574,
  -289,  -593,  -106,  -107,  -110,  -581,   -11,  -593,  -495,  -319,
  -593,   -11,  -519,  -519,  -593,  -559,  -459,  -462,  -463,  -464,
  -465,   -11,  -437,  -440,  -442,  -445,  -449,  -451,  -122,  -267,
  -593,  -197,  -593,  -584,  -260,   -33,  -199,   -34,  -200,   -60,
   -35,  -202,   -36,  -201,   -62,  -195,  -593,  -593,  -593,  -593,
  -410,  -593,  -557,  -557,  -360,  -362,  -362,  -362,  -377,  -593,
  -581,  -383,  -526,  -534,  -535,  -545,  -593,  -401,  -400,   -11,
  -593,  -593,  -254,  -264,   -16,   -75,   -90,   -87,  -297,  -592,
  -340,   -11,  -420,  -592,  -421,  -422,  -593,  -241,  -391,   -11,
   -11,  -593,  -557,  -538,  -556,  -503,  -504,  -504,  -529,  -504,
  -504,  -548,  -504,  -526,  -543,  -581,  -593,  -353,  -593,  -527,
  -593,  -338,  -593,  -593,   -11,   -11,  -312,  -593,   -11,  -410,
  -593,  -410,  -593,  -593,   -11,  -322,  -593,  -581,  -593,  -326,
  -593,  -268,   -32,  -198,  -249,  -593,  -236,  -593,  -358,  -359,
  -368,  -370,  -593,  -373,  -593,  -375,  -380,  -593,  -593,  -593,
  -533,  -593,  -397,  -593,  -412,  -414,    -9,   -11,  -426,  -341,
  -593,  -593,  -424,  -285,  -593,  -593,  -392,  -499,  -593,  -507,
  -593,  -509,  -593,  -512,  -593,  -515,  -517,  -345,  -347,  -351,
  -593,  -356,  -304,  -593,  -305,  -593,  -593,  -263,  -592,  -315,
  -318,  -494,  -593,  -324,  -496,  -498,  -497,  -461,  -557,  -536,
  -361,  -362,  -362,  -362,  -362,  -546,  -362,  -382,  -581,  -385,
  -387,  -388,  -544,  -593,  -290,   -55,  -425,   -11,   -97,   -98,
  -593,  -593,  -105,  -423,  -394,  -395,  -504,  -504,  -504,  -504,
  -349,  -593,  -354,  -593,   -11,  -308,  -311,  -415,  -416,  -417,
   -11,  -320,   -11,  -357,  -593,  -365,  -593,  -367,  -593,  -371,
  -593,  -374,  -376,  -384,  -593,  -289,  -574,  -419,  -246,  -593,
  -593,  -104,  -593,  -505,  -508,  -510,  -513,  -593,  -352,  -592,
  -593,  -593,  -362,  -362,  -362,  -362,  -386,  -418,  -581,  -570,
  -571,  -574,  -103,  -504,  -350,  -339,  -316,  -327,  -593,  -363,
  -366,  -369,  -372,  -410,  -506,  -362,  -364 ]

clist = [
'216,372,326,26,219,127,127,333,26,275,275,275,414,420,486,258,520,266',
'270,408,563,566,2,26,122,205,322,130,130,618,437,570,26,26,26,677,26',
'132,132,114,310,310,540,430,405,337,338,477,657,341,427,654,296,654',
'262,269,271,533,259,731,511,473,830,313,110,111,26,26,127,779,26,579',
'776,478,310,310,310,523,526,317,821,530,701,336,336,483,898,336,657',
'115,880,686,687,709,712,726,929,931,388,389,390,391,799,114,277,277',
'277,498,294,378,811,292,925,844,26,588,384,332,645,26,26,26,26,26,26',
'589,650,651,342,273,285,286,734,833,328,331,336,336,336,336,602,604',
'916,393,783,358,362,818,486,901,276,276,276,721,659,835,340,778,834',
'876,339,325,6,780,680,324,323,6,373,928,204,583,593,531,600,603,603',
'808,335,683,327,349,657,351,472,480,654,654,481,275,957,400,406,803',
'960,386,425,429,376,377,401,415,996,931,379,380,867,334,424,26,26,26',
'26,898,925,26,26,26,26,26,26,952,394,381,382,383,736,741,777,727,330',
'825,26,374,433,434,435,436,816,540,647,414,420,275,275,295,648,813,663',
'633,919,639,275,329,684,613,672,1,713,,770,,,,402,,26,26,,,432,773,988',
'6,817,26,819,821,,,,730,392,6,,,796,508,,921,,649,26,,789,652,26,724',
'266,,,26,270,310,,,522,668,1004,,661,,,812,665,,664,668,818,,310,567',
'568,114,,501,26,26,404,858,859,,512,958,404,,488,839,490,277,491,492',
'26,26,521,1005,841,277,493,494,509,,818,,,,,,783,336,336,783,26,783',
'479,783,909,,497,887,,292,482,503,,668,292,114,26,587,,,716,668,,276',
'962,,,619,792,127,725,276,584,591,,744,838,744,,,569,,735,625,,590,795',
'759,612,630,,130,764,657,,,399,842,654,275,,132,846,,,,818,,415,,807',
',,,,424,,540,540,295,624,,26,922,,923,629,,,495,641,,847,848,,,,,615',
'430,,,625,783,,783,,783,,783,,946,,963,,,,,,,,,275,918,,,773,798,773',
'792,773,997,,,415,26,,26,,646,,424,,295,415,26,310,783,295,,,424,829',
'804,310,,660,,512,26,,690,692,694,,,512,,,,,,,,,912,676,,,,655,,332',
',658,,,992,,,275,,,,,,,,653,,275,937,415,,26,,,26,,424,415,,,26,,424',
',,,655,,,332,26,954,,,,,26,773,788,773,,773,959,773,682,,,774,710,710',
',755,757,702,,127,760,762,,,429,,,,1013,619,805,728,729,781,26,26,,432',
'748,26,26,130,,26,,773,,897,787,,,132,,814,,619,814,26,,,,14,26,26,991',
',14,6,625,914,806,630,,849,781,,,310,,,,220,749,,,,655,332,310,512,220',
'220,220,,14,301,301,,,,797,715,,,754,,619,,,,,,840,,,619,,,843,,,,793',
',220,220,,,220,346,356,356,,26,,,,,26,26,127,,,26,802,852,,,,,336,878',
',26,,882,336,,,,,824,,,26,,,,,,781,,14,,,,,220,220,220,220,14,14,,706',
',,708,,,668,,,,,,,998,310,,,26,,,,775,,,404,,,889,891,26,893,895,851',
'896,,,,26,26,903,,814,,,774,,774,,774,,,,,,,,,,,,26,,26,26,,,26,,,820',
',822,26,861,863,865,,336,,,,,786,14,220,220,220,790,791,220,220,220',
'220,220,220,,,,,,310,710,,,911,26,14,,,915,,,310,,,,,,,907,,,,,,,,,38',
',,,,38,973,,332,,,,220,220,,,,,,,774,220,774,,774,,774,424,,983,984',
'985,986,38,299,299,,26,14,,,,14,,,,301,14,,,850,,,,26,275,,,,,26,,26',
'301,774,,,415,344,360,360,360,14,220,424,,619,,26,,,,,,,,1014,,220,220',
',965,967,969,971,,972,,873,,39,,,,,39,,,220,,879,38,924,,926,,,,884',
'885,38,38,,,220,,,,,,,,,39,300,300,,,947,,948,13,949,905,906,,13,908',
',,,,,,,,,,,,,,1009,1010,1011,1012,,,345,361,361,361,,,13,,,,,,,,,,,1016',
'936,,,,220,,,,,,,,,,,,,,,,38,,,,,39,,,993,,994,,995,,39,39,,,,,,,,38',
',,1003,,,,,,,,,,,14,,14,977,,,,,301,13,220,,,,,1015,301,,13,13,989,',
',,220,,990,,,,,,,,,,,,,,,,,,,,38,,,,38,,,,299,38,,,,,,,,39,,,,,,14,',
'299,14,,,,,,220,,38,,,,,,39,,220,,,,,,14,,,,,,,,,,13,,,,15,,,,,15,,',
',,,,,,,,,,,13,220,220,,,,220,220,,,220,,,,15,303,303,,,39,,,,39,14,',
',300,39,14,14,,,,,,,,,,,301,,,300,,,,,348,357,357,301,39,,,,,,,13,,',
',13,,,,,13,,,,,,,,,,,,,,,,,,,,,,,15,,13,,,,,,220,15,15,,,14,220,,,,14',
',,,,,,,,,14,,16,,38,,38,16,,,,220,299,,,,,,,,299,,,,,,,,,,,,,,,16,,',
',,,,870,,,,,,14,,,,,,,,,,,,14,,,,,,,15,14,14,350,,,38,,,38,,,,,,,,,',
',,,,15,220,,14,14,,,14,38,,,,,14,39,,39,,,,,,300,16,,,,,,,300,,16,16',
',,,,932,,,,,,,,14,,,,940,,,,,13,,13,,,15,,,,15,38,,,303,15,38,38,,,',
',,,,,,,299,39,,303,39,,,,,,,299,15,,,,,,,,,,,,14,,39,,,,,,,,,,16,,,',
',14,13,428,,13,,14,,14,,,,,,,,547,,16,,,,,38,220,,13,,38,,,,,,,,,,38',
',,,39,,,,,39,39,,,,,,,,,,,300,,,,,,,,,,,300,,,,,,,,16,,360,,16,13,,',
'38,16,13,13,,,,,,,,,38,,,,,,,,38,38,,,,,16,,,,,,,,,,,39,,,,,39,,,38',
'38,,,38,,,39,,,38,15,,15,,,,,,303,,,,,,,,303,,,,,,13,,360,,,13,,,,,38',
',,,938,13,361,,,,,,39,,,,,,,,,,,,39,,,,,,,,39,39,,,,15,,547,15,,,,,',
',,,,,,,13,,696,,39,39,,38,39,15,,,13,,39,,740,,,,13,13,,,38,,,,,,38',
',38,,,,,,,361,,,,,,13,13,39,,13,,939,,,,13,16,,16,,,,,,,,15,,,,,15,15',
',,,,,,,,,,303,,,,,13,,,,,,303,,,782,,,,,,,,,,39,,,,,,,,,,,,,,,,,39,16',
',,16,,39,,39,,,,,,,,,,,547,,547,,15,13,,16,696,15,,827,,,,,,,,15,,,13',
',,,,,13,,13,,,,,,,,,,,,,547,547,,,,,,428,,,,,,,,,,,357,,,16,,,15,,16',
'16,,,,,,,,,15,,,,,,,,15,15,,,,,,,,227,,,,,,,,,274,274,274,,,,,15,15',
',,15,,319,320,321,,15,,,,,,,,,,,,,274,274,696,,696,,,,,,16,,357,,,16',
',,,,15,,,,942,16,,,,,,,,,,,782,,782,,,,,,,,,,,,,,,,,,,,,,,,,,547,,,',
',,,,,16,,950,696,,,,15,,,,,16,,,,,,,,16,16,,,15,,,,,,15,,15,,,,,,,,',
',,,,16,16,,,16,,,,,696,16,696,,,,,,,,,,,782,,,,,,,,274,407,274,,,426',
'431,,,,,,,16,,696,,943,,,,227,,,446,447,448,449,450,451,452,453,454',
'455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471',
',,,,,,274,274,,,,,,,,274,,,,,,,274,16,274,,274,274,,,,,,,,,,,,,16,,',
',,,16,,16,,,,,,,,,,,,,,,,,517,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,274,,426,640,407,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,274,,274,,274,,,,,,,,,,,,,,,274,,,,,,,,,674,675,,,,,,,,,,274,,,274',
',,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,274,274,,,,,,,,,,274,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,751,,,274,274,756,758,,,,761,763',
',,640,765,,,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,274,,,,,,',
',,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'274,,853,,,,,,,,,,,,,,756,758,763,761,,856,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,274,853',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274' ]
        racc_goto_table = arr = ::Array.new(3031, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'31,56,67,41,20,57,57,86,41,33,33,33,37,37,73,138,8,71,71,23,89,89,2',
'41,15,15,31,60,60,24,47,92,41,41,41,10,41,61,61,95,64,64,161,18,27,17',
'17,39,175,17,27,74,49,74,38,38,38,137,36,96,51,37,90,50,4,6,41,41,57',
'129,41,54,126,23,64,64,64,69,69,63,171,69,116,29,29,47,114,29,175,5',
'145,121,121,91,91,108,131,132,17,17,17,17,11,95,70,70,70,47,46,150,129',
'45,172,109,41,110,150,65,40,41,41,41,41,41,41,111,40,40,4,44,44,44,112',
'11,70,70,29,29,29,29,153,153,113,2,167,55,55,166,73,117,68,68,68,106',
'14,105,104,118,103,12,102,101,7,124,100,99,98,7,97,130,16,94,154,133',
'154,154,154,134,135,136,68,93,175,19,139,141,74,74,142,33,143,20,20',
'144,107,5,20,20,148,149,28,71,131,132,151,152,129,88,57,41,41,41,41',
'114,172,41,41,41,41,41,41,117,30,155,156,157,158,159,127,160,85,116',
'41,84,29,29,29,29,165,161,72,37,37,33,33,9,42,168,51,47,169,23,33,66',
'137,62,51,1,92,,24,,,,65,,41,41,,,65,120,117,7,127,41,127,171,,,,8,7',
'7,,,24,31,,126,,47,41,,40,47,41,54,71,,,41,71,64,,,31,37,117,,47,,,120',
'23,,47,37,166,,64,17,17,95,,50,41,41,68,121,121,,49,11,68,,65,24,65',
'70,65,65,41,41,29,90,24,70,4,6,63,,166,,,,,,167,29,29,167,41,167,44',
'167,91,,46,121,,45,44,46,,37,45,95,41,29,,,23,37,,68,96,,,31,73,57,23',
'68,95,29,,154,89,154,,,4,,47,71,,36,51,39,15,71,,60,39,175,,,9,8,74',
'33,,61,8,,,,166,,71,,69,,,,,57,,161,161,9,38,,41,127,,127,38,,,7,31',
',137,137,,,,,65,18,,,71,167,,167,,167,,167,,127,,121,,,,,,,,,33,120',
',,120,47,120,73,120,10,,,71,41,,41,,38,,57,,9,71,41,64,167,9,,,57,47',
'27,64,,2,,49,41,,164,164,164,,,49,,,,,,,,,8,29,,,,65,,65,,65,,,127,',
',33,,,,,,,,70,,33,89,71,,41,,,41,,57,71,,,41,,57,,,,65,,,65,41,89,,',
',,41,120,86,120,,120,92,120,70,,,122,95,95,,20,20,65,,57,20,20,,,20',
',,,24,31,67,95,95,31,41,41,,65,15,41,41,60,,41,,120,,47,138,,,61,,122',
',31,122,41,,,,22,41,41,8,,22,7,71,47,31,71,,56,31,,,64,,,,22,65,,,,65',
'65,64,49,22,22,22,,22,22,22,,,,49,68,,,70,,31,,,,,,17,,,31,,,17,,,,65',
',22,22,,,22,22,22,22,,41,,,,,41,41,57,,,41,65,20,,,,,29,67,,41,,67,29',
',,,,65,,,41,,,,,,31,,22,,,,,22,22,22,22,22,22,,9,,,9,,,37,,,,,,,23,64',
',,41,,,,125,,,68,,,164,164,41,164,164,65,164,,,,41,41,17,,122,,,122',
',122,,122,,,,,,,,,,,,41,,41,41,,,41,,,125,,125,41,123,123,123,,29,,',
',,9,22,22,22,22,9,9,22,22,22,22,22,22,,,,,,64,95,,,95,41,22,,,95,,,64',
',,,,,,65,,,,,,,,,52,,,,,52,31,,65,,,,22,22,,,,,,,122,22,122,,122,,122',
'57,,164,164,164,164,52,52,52,,41,22,,,,22,,,,22,22,,,9,,,,41,33,,,,',
'41,,41,22,122,,,71,52,52,52,52,22,22,57,,31,,41,,,,,,,,164,,22,22,,123',
'123,123,123,,123,,9,,53,,,,,53,,,22,,9,52,125,,125,,,,9,9,52,52,,,22',
',,,,,,,,53,53,53,,,125,,125,21,125,9,9,,21,9,,,,,,,,,,,,,,,123,123,123',
'123,,,53,53,53,53,,,21,,,,,,,,,,,123,9,,,,22,,,,,,,,,,,,,,,,52,,,,,53',
',,125,,125,,125,,53,53,,,,,,,,52,,,125,,,,,,,,,,,22,,22,9,,,,,22,21',
'22,,,,,125,22,,21,21,9,,,,22,,9,,,,,,,,,,,,,,,,,,,,52,,,,52,,,,52,52',
',,,,,,,53,,,,,,22,,52,22,,,,,,22,,52,,,,,,53,,22,,,,,,22,,,,,,,,,,21',
',,,25,,,,,25,,,,,,,,,,,,,,21,22,22,,,,22,22,,,22,,,,25,25,25,,,53,,',
',53,22,,,53,53,22,22,,,,,,,,,,,22,,,53,,,,,25,25,25,22,53,,,,,,,21,',
',,21,,,,,21,,,,,,,,,,,,,,,,,,,,,,,25,,21,,,,,,22,25,25,,,22,22,,,,22',
',,,,,,,,,22,,26,,52,,52,26,,,,22,52,,,,,,,,52,,,,,,,,,,,,,,,26,,,,,',
',22,,,,,,22,,,,,,,,,,,,22,,,,,,,25,22,22,26,,,52,,,52,,,,,,,,,,,,,,25',
'22,,22,22,,,22,52,,,,,22,53,,53,,,,,,53,26,,,,,,,53,,26,26,,,,,22,,',
',,,,,22,,,,22,,,,,21,,21,,,25,,,,25,52,,,25,25,52,52,,,,,,,,,,,52,53',
',25,53,,,,,,,52,25,,,,,,,,,,,,22,,53,,,,,,,,,,26,,,,,22,21,26,,21,,22',
',22,,,,,,,,115,,26,,,,,52,22,,21,,52,,,,,,,,,,52,,,,53,,,,,53,53,,,',
',,,,,,,53,,,,,,,,,,,53,,,,,,,,26,,52,,26,21,,,52,26,21,21,,,,,,,,,52',
',,,,,,,52,52,,,,,26,,,,,,,,,,,53,,,,,53,,,52,52,,,52,,,53,,,52,25,,25',
',,,,,25,,,,,,,,25,,,,,,21,,52,,,21,,,,,52,,,,52,21,53,,,,,,53,,,,,,',
',,,,,53,,,,,,,,53,53,,,,25,,115,25,,,,,,,,,,,,,21,,115,,53,53,,52,53',
'25,,,21,,53,,25,,,,21,21,,,52,,,,,,52,,52,,,,,,,53,,,,,,21,21,53,,21',
',53,,,,21,26,,26,,,,,,,,25,,,,,25,25,,,,,,,,,,,25,,,,,21,,,,,,25,,,115',
',,,,,,,,,53,,,,,,,,,,,,,,,,,53,26,,,26,,53,,53,,,,,,,,,,,115,,115,,25',
'21,,26,115,25,,115,,,,,,,,25,,,21,,,,,,21,,21,,,,,,,,,,,,,115,115,,',
',,,26,,,,,,,,,,,25,,,26,,,25,,26,26,,,,,,,,,25,,,,,,,,25,25,,,,,,,,32',
',,,,,,,,32,32,32,,,,,25,25,,,25,,32,32,32,,25,,,,,,,,,,,,,32,32,115',
',115,,,,,,26,,25,,,26,,,,,25,,,,25,26,,,,,,,,,,,115,,115,,,,,,,,,,,',
',,,,,,,,,,,,,,115,,,,,,,,,26,,115,115,,,,25,,,,,26,,,,,,,,26,26,,,25',
',,,,,25,,25,,,,,,,,,,,,,26,26,,,26,,,,,115,26,115,,,,,,,,,,,115,,,,',
',,,32,32,32,,,32,32,,,,,,,26,,115,,26,,,,32,,,32,32,32,32,32,32,32,32',
'32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,,,,,,,32,32,,',
',,,,,32,,,,,,,32,26,32,,32,32,,,,,,,,,,,,,26,,,,,,26,,26,,,,,,,,,,,',
',,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,32',
'32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,,32,,,,,,,,,,,,,,,32',
',,,,,,,,32,32,,,,,,,,,,32,,,32,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,',
',,,,,,,,32,32,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,32,,,32',
'32,32,32,,,,32,32,,,32,32,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,',
',,,,,32,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,32,,32,,,,,,,,,,,,,,32,32,32,32,,32,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,32',
'32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32' ]
        racc_goto_check = arr = ::Array.new(3031, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   257,    22,   nil,    61,    84,    62,   162,  -307,   212,
  -484,  -575,  -640,   nil,  -340,    16,   161,   -18,  -170,   115,
   -16,  1044,   652,  -190,  -379,  1254,  1395,  -163,    -7,    20,
   100,   -19,  2052,   -20,   nil,   nil,    34,  -198,    28,  -215,
  -354,     3,  -230,   nil,   100,    78,    75,  -187,   nil,    18,
    28,  -254,   903,  1003,  -283,    76,   -70,    -3,   nil,   nil,
    19,    29,  -143,    38,     6,    57,   194,   -57,   121,  -250,
    75,    -9,  -233,  -263,  -434,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   162,   170,   -54,   nil,   145,  -317,
  -644,  -474,  -311,   113,  -187,    36,  -530,    97,   109,   107,
  -357,   103,    95,  -551,    90,  -557,  -423,  -715,  -488,  -616,
  -247,  -247,  -458,  -707,  -740,  1287,  -466,  -679,  -486,   nil,
  -372,  -443,   -41,    73,  -480,   153,  -571,  -415,   nil,  -574,
  -699,  -772,  -771,  -162,  -506,   116,  -352,  -278,    -7,   -73,
   nil,   -82,   -80,  -718,  -485,  -713,   nil,   nil,   121,   120,
    27,   121,   121,  -240,  -205,   138,   138,   138,  -369,  -369,
  -356,  -293,   nil,   nil,   -14,  -451,  -542,  -499,  -438,  -607,
   nil,  -611,  -750,   nil,   nil,  -439 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   343,   290,   nil,   519,
   nil,   831,   nil,   287,   288,   nil,   nil,   nil,    11,    12,
    18,   226,   318,   nil,   nil,   224,   225,   nil,   nil,    17,
   nil,   438,    21,    22,    23,    24,   nil,   671,   nil,   nil,
   nil,   307,   nil,    25,   409,    32,   nil,   nil,    34,    37,
    36,   nil,   221,   222,   355,   nil,   129,   417,   128,   131,
    75,    76,   nil,    90,    46,   280,   nil,   800,   410,   nil,
   411,   422,   626,   484,   278,   264,    47,    48,    49,    50,
    51,    52,    53,    54,    55,   nil,   265,    61,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   564,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   698,   823,   nil,   699,   920,   772,
   535,   nil,   536,   nil,   nil,   537,   nil,   539,   642,   nil,
   nil,   nil,   545,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   421,   nil,   nil,   nil,   nil,   nil,    74,    77,    78,   nil,
   nil,   nil,   nil,   nil,   598,   nil,   nil,   nil,   nil,   nil,
   nil,   815,   733,   534,   nil,   538,   549,   551,   552,   784,
   555,   556,   785,   559,   562,   282 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 144, :_reduce_none,
  2, 145, :_reduce_2,
  0, 146, :_reduce_3,
  1, 146, :_reduce_4,
  3, 146, :_reduce_5,
  2, 146, :_reduce_6,
  1, 148, :_reduce_none,
  4, 148, :_reduce_8,
  4, 151, :_reduce_9,
  2, 152, :_reduce_10,
  0, 156, :_reduce_11,
  1, 156, :_reduce_12,
  3, 156, :_reduce_13,
  2, 156, :_reduce_14,
  1, 157, :_reduce_none,
  4, 157, :_reduce_16,
  0, 173, :_reduce_17,
  4, 150, :_reduce_18,
  3, 150, :_reduce_19,
  3, 150, :_reduce_20,
  3, 150, :_reduce_21,
  2, 150, :_reduce_22,
  3, 150, :_reduce_23,
  3, 150, :_reduce_24,
  3, 150, :_reduce_25,
  3, 150, :_reduce_26,
  3, 150, :_reduce_27,
  4, 150, :_reduce_28,
  1, 150, :_reduce_none,
  3, 150, :_reduce_30,
  3, 150, :_reduce_31,
  6, 150, :_reduce_32,
  5, 150, :_reduce_33,
  5, 150, :_reduce_34,
  5, 150, :_reduce_35,
  5, 150, :_reduce_36,
  3, 150, :_reduce_37,
  3, 150, :_reduce_38,
  3, 150, :_reduce_39,
  1, 150, :_reduce_none,
  3, 161, :_reduce_41,
  3, 161, :_reduce_42,
  1, 172, :_reduce_none,
  3, 172, :_reduce_44,
  3, 172, :_reduce_45,
  3, 172, :_reduce_46,
  2, 172, :_reduce_47,
  1, 172, :_reduce_none,
  1, 160, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 177, :_reduce_none,
  4, 177, :_reduce_53,
  0, 185, :_reduce_54,
  5, 182, :_reduce_55,
  1, 184, :_reduce_none,
  2, 176, :_reduce_57,
  3, 176, :_reduce_58,
  4, 176, :_reduce_59,
  5, 176, :_reduce_60,
  4, 176, :_reduce_61,
  5, 176, :_reduce_62,
  2, 176, :_reduce_63,
  2, 176, :_reduce_64,
  2, 176, :_reduce_65,
  2, 176, :_reduce_66,
  2, 176, :_reduce_67,
  1, 162, :_reduce_68,
  3, 162, :_reduce_69,
  1, 189, :_reduce_70,
  3, 189, :_reduce_71,
  1, 188, :_reduce_none,
  2, 188, :_reduce_73,
  3, 188, :_reduce_74,
  5, 188, :_reduce_75,
  2, 188, :_reduce_76,
  4, 188, :_reduce_77,
  2, 188, :_reduce_78,
  4, 188, :_reduce_79,
  1, 188, :_reduce_80,
  3, 188, :_reduce_81,
  1, 192, :_reduce_none,
  3, 192, :_reduce_83,
  2, 191, :_reduce_84,
  3, 191, :_reduce_85,
  1, 194, :_reduce_86,
  3, 194, :_reduce_87,
  1, 193, :_reduce_88,
  1, 193, :_reduce_89,
  4, 193, :_reduce_90,
  3, 193, :_reduce_91,
  3, 193, :_reduce_92,
  3, 193, :_reduce_93,
  3, 193, :_reduce_94,
  2, 193, :_reduce_95,
  1, 193, :_reduce_96,
  1, 169, :_reduce_97,
  1, 169, :_reduce_98,
  4, 169, :_reduce_99,
  3, 169, :_reduce_100,
  3, 169, :_reduce_101,
  3, 169, :_reduce_102,
  3, 169, :_reduce_103,
  2, 169, :_reduce_104,
  1, 169, :_reduce_105,
  1, 197, :_reduce_106,
  1, 197, :_reduce_none,
  2, 198, :_reduce_108,
  1, 198, :_reduce_109,
  3, 198, :_reduce_110,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 202, :_reduce_116,
  1, 202, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  1, 159, :_reduce_120,
  0, 205, :_reduce_121,
  4, 159, :_reduce_122,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  3, 175, :_reduce_194,
  5, 175, :_reduce_195,
  3, 175, :_reduce_196,
  5, 175, :_reduce_197,
  6, 175, :_reduce_198,
  5, 175, :_reduce_199,
  5, 175, :_reduce_200,
  5, 175, :_reduce_201,
  5, 175, :_reduce_202,
  4, 175, :_reduce_203,
  3, 175, :_reduce_204,
  3, 175, :_reduce_205,
  3, 175, :_reduce_206,
  3, 175, :_reduce_207,
  3, 175, :_reduce_208,
  3, 175, :_reduce_209,
  3, 175, :_reduce_210,
  3, 175, :_reduce_211,
  3, 175, :_reduce_212,
  4, 175, :_reduce_213,
  2, 175, :_reduce_214,
  2, 175, :_reduce_215,
  3, 175, :_reduce_216,
  3, 175, :_reduce_217,
  3, 175, :_reduce_218,
  3, 175, :_reduce_219,
  3, 175, :_reduce_220,
  3, 175, :_reduce_221,
  3, 175, :_reduce_222,
  3, 175, :_reduce_223,
  3, 175, :_reduce_224,
  3, 175, :_reduce_225,
  3, 175, :_reduce_226,
  3, 175, :_reduce_227,
  3, 175, :_reduce_228,
  2, 175, :_reduce_229,
  2, 175, :_reduce_230,
  3, 175, :_reduce_231,
  3, 175, :_reduce_232,
  3, 175, :_reduce_233,
  3, 175, :_reduce_234,
  3, 175, :_reduce_235,
  6, 175, :_reduce_236,
  1, 175, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_none,
  2, 209, :_reduce_none,
  4, 209, :_reduce_241,
  2, 209, :_reduce_242,
  3, 214, :_reduce_243,
  0, 215, :_reduce_244,
  1, 215, :_reduce_none,
  0, 166, :_reduce_246,
  1, 166, :_reduce_none,
  2, 166, :_reduce_none,
  4, 166, :_reduce_249,
  2, 166, :_reduce_250,
  1, 187, :_reduce_251,
  2, 187, :_reduce_252,
  2, 187, :_reduce_253,
  4, 187, :_reduce_254,
  1, 187, :_reduce_255,
  0, 218, :_reduce_256,
  2, 181, :_reduce_257,
  2, 217, :_reduce_258,
  2, 216, :_reduce_259,
  0, 216, :_reduce_260,
  1, 211, :_reduce_261,
  2, 211, :_reduce_262,
  3, 211, :_reduce_263,
  4, 211, :_reduce_264,
  1, 171, :_reduce_265,
  1, 171, :_reduce_none,
  3, 170, :_reduce_267,
  4, 170, :_reduce_268,
  2, 170, :_reduce_269,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_280,
  0, 241, :_reduce_281,
  4, 207, :_reduce_282,
  0, 242, :_reduce_283,
  0, 243, :_reduce_284,
  6, 207, :_reduce_285,
  0, 244, :_reduce_286,
  4, 207, :_reduce_287,
  3, 207, :_reduce_288,
  3, 207, :_reduce_289,
  2, 207, :_reduce_290,
  3, 207, :_reduce_291,
  3, 207, :_reduce_292,
  1, 207, :_reduce_293,
  4, 207, :_reduce_294,
  3, 207, :_reduce_295,
  1, 207, :_reduce_296,
  5, 207, :_reduce_297,
  4, 207, :_reduce_298,
  3, 207, :_reduce_299,
  2, 207, :_reduce_300,
  1, 207, :_reduce_none,
  2, 207, :_reduce_302,
  2, 207, :_reduce_303,
  6, 207, :_reduce_304,
  6, 207, :_reduce_305,
  0, 245, :_reduce_306,
  0, 246, :_reduce_307,
  7, 207, :_reduce_308,
  0, 247, :_reduce_309,
  0, 248, :_reduce_310,
  7, 207, :_reduce_311,
  5, 207, :_reduce_312,
  4, 207, :_reduce_313,
  0, 249, :_reduce_314,
  0, 250, :_reduce_315,
  9, 207, :_reduce_316,
  0, 251, :_reduce_317,
  6, 207, :_reduce_318,
  0, 252, :_reduce_319,
  7, 207, :_reduce_320,
  0, 253, :_reduce_321,
  5, 207, :_reduce_322,
  0, 254, :_reduce_323,
  6, 207, :_reduce_324,
  0, 255, :_reduce_325,
  0, 256, :_reduce_326,
  9, 207, :_reduce_327,
  1, 207, :_reduce_328,
  1, 207, :_reduce_329,
  1, 207, :_reduce_330,
  1, 207, :_reduce_331,
  1, 165, :_reduce_none,
  1, 232, :_reduce_none,
  1, 232, :_reduce_none,
  2, 232, :_reduce_335,
  1, 234, :_reduce_none,
  1, 234, :_reduce_none,
  1, 233, :_reduce_none,
  5, 233, :_reduce_339,
  1, 154, :_reduce_none,
  2, 154, :_reduce_341,
  1, 236, :_reduce_none,
  1, 236, :_reduce_none,
  1, 257, :_reduce_344,
  3, 257, :_reduce_345,
  1, 260, :_reduce_346,
  3, 260, :_reduce_347,
  1, 259, :_reduce_none,
  4, 259, :_reduce_349,
  6, 259, :_reduce_350,
  3, 259, :_reduce_351,
  5, 259, :_reduce_352,
  2, 259, :_reduce_353,
  4, 259, :_reduce_354,
  1, 259, :_reduce_355,
  3, 259, :_reduce_356,
  4, 261, :_reduce_357,
  2, 261, :_reduce_358,
  2, 261, :_reduce_359,
  1, 261, :_reduce_360,
  2, 266, :_reduce_361,
  0, 266, :_reduce_362,
  6, 267, :_reduce_363,
  8, 267, :_reduce_364,
  4, 267, :_reduce_365,
  6, 267, :_reduce_366,
  4, 267, :_reduce_367,
  2, 267, :_reduce_none,
  6, 267, :_reduce_369,
  2, 267, :_reduce_370,
  4, 267, :_reduce_371,
  6, 267, :_reduce_372,
  2, 267, :_reduce_373,
  4, 267, :_reduce_374,
  2, 267, :_reduce_375,
  4, 267, :_reduce_376,
  1, 267, :_reduce_none,
  0, 183, :_reduce_378,
  1, 183, :_reduce_379,
  3, 271, :_reduce_380,
  1, 271, :_reduce_381,
  4, 271, :_reduce_382,
  1, 272, :_reduce_383,
  4, 272, :_reduce_384,
  1, 273, :_reduce_385,
  3, 273, :_reduce_386,
  1, 274, :_reduce_387,
  1, 274, :_reduce_none,
  0, 278, :_reduce_389,
  0, 279, :_reduce_390,
  4, 231, :_reduce_391,
  4, 276, :_reduce_392,
  1, 276, :_reduce_393,
  3, 277, :_reduce_394,
  3, 277, :_reduce_395,
  0, 282, :_reduce_396,
  5, 281, :_reduce_397,
  2, 178, :_reduce_398,
  4, 178, :_reduce_399,
  5, 178, :_reduce_400,
  5, 178, :_reduce_401,
  2, 230, :_reduce_402,
  4, 230, :_reduce_403,
  4, 230, :_reduce_404,
  3, 230, :_reduce_405,
  3, 230, :_reduce_406,
  3, 230, :_reduce_407,
  2, 230, :_reduce_408,
  1, 230, :_reduce_409,
  4, 230, :_reduce_410,
  0, 284, :_reduce_411,
  5, 229, :_reduce_412,
  0, 285, :_reduce_413,
  5, 229, :_reduce_414,
  5, 235, :_reduce_415,
  1, 286, :_reduce_416,
  1, 286, :_reduce_none,
  6, 153, :_reduce_418,
  0, 153, :_reduce_419,
  1, 287, :_reduce_420,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  2, 288, :_reduce_423,
  1, 288, :_reduce_none,
  2, 155, :_reduce_425,
  1, 155, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 220, :_reduce_430,
  1, 290, :_reduce_431,
  2, 290, :_reduce_432,
  3, 291, :_reduce_433,
  1, 291, :_reduce_434,
  1, 291, :_reduce_435,
  3, 221, :_reduce_436,
  4, 222, :_reduce_437,
  3, 223, :_reduce_438,
  0, 295, :_reduce_439,
  3, 295, :_reduce_440,
  1, 296, :_reduce_441,
  2, 296, :_reduce_442,
  3, 225, :_reduce_443,
  0, 298, :_reduce_444,
  3, 298, :_reduce_445,
  3, 224, :_reduce_446,
  3, 226, :_reduce_447,
  0, 299, :_reduce_448,
  3, 299, :_reduce_449,
  0, 300, :_reduce_450,
  3, 300, :_reduce_451,
  0, 292, :_reduce_452,
  2, 292, :_reduce_453,
  0, 293, :_reduce_454,
  2, 293, :_reduce_455,
  0, 294, :_reduce_456,
  2, 294, :_reduce_457,
  1, 297, :_reduce_458,
  2, 297, :_reduce_459,
  0, 302, :_reduce_460,
  4, 297, :_reduce_461,
  1, 301, :_reduce_462,
  1, 301, :_reduce_463,
  1, 301, :_reduce_464,
  1, 301, :_reduce_none,
  1, 203, :_reduce_466,
  3, 204, :_reduce_467,
  1, 289, :_reduce_468,
  2, 289, :_reduce_469,
  1, 206, :_reduce_470,
  1, 206, :_reduce_471,
  1, 206, :_reduce_472,
  1, 206, :_reduce_473,
  1, 195, :_reduce_474,
  1, 195, :_reduce_475,
  1, 195, :_reduce_476,
  1, 195, :_reduce_477,
  1, 195, :_reduce_478,
  1, 196, :_reduce_479,
  1, 196, :_reduce_480,
  1, 196, :_reduce_481,
  1, 196, :_reduce_482,
  1, 196, :_reduce_483,
  1, 196, :_reduce_484,
  1, 196, :_reduce_485,
  1, 227, :_reduce_486,
  1, 227, :_reduce_487,
  1, 164, :_reduce_488,
  1, 164, :_reduce_489,
  1, 168, :_reduce_490,
  1, 168, :_reduce_491,
  1, 237, :_reduce_492,
  0, 303, :_reduce_493,
  4, 237, :_reduce_494,
  2, 237, :_reduce_495,
  3, 239, :_reduce_496,
  0, 305, :_reduce_497,
  3, 239, :_reduce_498,
  4, 304, :_reduce_499,
  2, 304, :_reduce_500,
  2, 304, :_reduce_501,
  1, 304, :_reduce_502,
  2, 307, :_reduce_503,
  0, 307, :_reduce_504,
  6, 280, :_reduce_505,
  8, 280, :_reduce_506,
  4, 280, :_reduce_507,
  6, 280, :_reduce_508,
  4, 280, :_reduce_509,
  6, 280, :_reduce_510,
  2, 280, :_reduce_511,
  4, 280, :_reduce_512,
  6, 280, :_reduce_513,
  2, 280, :_reduce_514,
  4, 280, :_reduce_515,
  2, 280, :_reduce_516,
  4, 280, :_reduce_517,
  1, 280, :_reduce_518,
  0, 280, :_reduce_519,
  1, 275, :_reduce_520,
  1, 275, :_reduce_521,
  1, 275, :_reduce_522,
  1, 275, :_reduce_523,
  1, 258, :_reduce_none,
  1, 258, :_reduce_525,
  1, 309, :_reduce_526,
  3, 309, :_reduce_527,
  1, 268, :_reduce_528,
  3, 268, :_reduce_529,
  1, 310, :_reduce_530,
  2, 311, :_reduce_531,
  1, 311, :_reduce_532,
  2, 312, :_reduce_533,
  1, 312, :_reduce_534,
  1, 262, :_reduce_535,
  3, 262, :_reduce_536,
  1, 306, :_reduce_537,
  3, 306, :_reduce_538,
  1, 313, :_reduce_none,
  1, 313, :_reduce_none,
  2, 263, :_reduce_541,
  1, 263, :_reduce_542,
  3, 314, :_reduce_543,
  3, 315, :_reduce_544,
  1, 269, :_reduce_545,
  3, 269, :_reduce_546,
  1, 308, :_reduce_547,
  3, 308, :_reduce_548,
  1, 316, :_reduce_none,
  1, 316, :_reduce_none,
  2, 270, :_reduce_551,
  1, 270, :_reduce_552,
  1, 317, :_reduce_none,
  1, 317, :_reduce_none,
  2, 265, :_reduce_555,
  2, 264, :_reduce_556,
  0, 264, :_reduce_557,
  1, 240, :_reduce_none,
  3, 240, :_reduce_559,
  0, 228, :_reduce_560,
  2, 228, :_reduce_none,
  1, 213, :_reduce_562,
  3, 213, :_reduce_563,
  3, 318, :_reduce_564,
  2, 318, :_reduce_565,
  2, 318, :_reduce_566,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 283, :_reduce_none,
  1, 179, :_reduce_none,
  1, 179, :_reduce_none,
  0, 147, :_reduce_none,
  1, 147, :_reduce_none,
  0, 174, :_reduce_none,
  1, 174, :_reduce_none,
  2, 190, :_reduce_583,
  2, 167, :_reduce_584,
  0, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 212, :_reduce_none,
  1, 238, :_reduce_588,
  1, 238, :_reduce_none,
  1, 149, :_reduce_none,
  2, 149, :_reduce_none,
  0, 210, :_reduce_592 ]

racc_reduce_n = 593

racc_shift_n = 1017

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tRATIONAL => 139,
  :tIMAGINARY => 140,
  :tEQL => 141,
  :tLOWEST => 142 }

racc_nt_base = 143

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tRATIONAL",
  "tIMAGINARY",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "mrhs_arg",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "simple_numeric",
  "primary",
  "arg_value",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@21",
  "@22",
  "f_args",
  "do_block",
  "@23",
  "operation3",
  "@24",
  "@25",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@26",
  "@27",
  "args_tail",
  "@28",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_item",
  "f_label",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby21.y', 52)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 57)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 61)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 65)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 69)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby21.y', 75)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 80)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 96)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 101)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 105)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 109)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 113)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby21.y', 119)
  def _reduce_16(val, _values, result)
                          diagnostic :error, :begin_in_method, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 124)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 128)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 132)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 138)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 144)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 148)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 152)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 157)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 162)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 166)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 170)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 178)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby21.y', 183)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 187)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 191)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 198)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 205)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 212)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 219)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 226)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 230)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 235)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'ruby21.y', 241)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 245)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby21.y', 251)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 255)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 259)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 263)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'ruby21.y', 275)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 281)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 285)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby21.y', 294)
  def _reduce_57(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 299)
  def _reduce_58(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 308)
  def _reduce_59(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 313)
  def _reduce_60(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 322)
  def _reduce_61(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 327)
  def _reduce_62(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 336)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 341)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 346)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 351)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 356)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 362)
  def _reduce_68(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 366)
  def _reduce_69(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 371)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 375)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ruby21.y', 381)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 386)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 391)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 397)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 402)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 408)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 412)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 417)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 421)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 82 omitted

module_eval(<<'.,.,', 'ruby21.y', 428)
  def _reduce_83(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 433)
  def _reduce_84(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 437)
  def _reduce_85(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 442)
  def _reduce_86(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 446)
  def _reduce_87(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 451)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 455)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 459)
  def _reduce_90(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 463)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 467)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 471)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 475)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 480)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 485)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 490)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 494)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 498)
  def _reduce_99(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 502)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 506)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 510)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 514)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 519)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 524)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 529)
  def _reduce_106(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'ruby21.y', 535)
  def _reduce_108(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 539)
  def _reduce_109(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 543)
  def _reduce_110(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'ruby21.y', 552)
  def _reduce_116(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'ruby21.y', 561)
  def _reduce_120(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 565)
  def _reduce_121(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 569)
  def _reduce_122(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

module_eval(<<'.,.,', 'ruby21.y', 590)
  def _reduce_194(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 594)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 604)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 608)
  def _reduce_197(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 618)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 625)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 632)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 639)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 646)
  def _reduce_202(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 652)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 658)
  def _reduce_204(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 662)
  def _reduce_205(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 666)
  def _reduce_206(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 670)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 674)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 678)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 682)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 686)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 690)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 694)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    val[1], val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 700)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 704)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 708)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 712)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 716)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 720)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 724)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 728)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 732)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 736)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 740)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 744)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 748)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 752)
  def _reduce_227(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 756)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 760)
  def _reduce_229(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 764)
  def _reduce_230(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 768)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 772)
  def _reduce_232(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 776)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 780)
  def _reduce_234(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 784)
  def _reduce_235(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 789)
  def _reduce_236(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby21.y', 800)
  def _reduce_241(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 804)
  def _reduce_242(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 809)
  def _reduce_243(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 814)
  def _reduce_244(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 245 omitted

module_eval(<<'.,.,', 'ruby21.y', 820)
  def _reduce_246(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 247 omitted

# reduce 248 omitted

module_eval(<<'.,.,', 'ruby21.y', 826)
  def _reduce_249(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 830)
  def _reduce_250(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 835)
  def _reduce_251(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 839)
  def _reduce_252(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 843)
  def _reduce_253(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 848)
  def _reduce_254(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 854)
  def _reduce_255(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 858)
  def _reduce_256(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 863)
  def _reduce_257(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 870)
  def _reduce_258(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 875)
  def _reduce_259(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 879)
  def _reduce_260(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 884)
  def _reduce_261(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 888)
  def _reduce_262(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 892)
  def _reduce_263(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 896)
  def _reduce_264(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 901)
  def _reduce_265(val, _values, result)
                          result = @builder.array(nil, val[0], nil)
                    
    result
  end
.,.,

# reduce 266 omitted

module_eval(<<'.,.,', 'ruby21.y', 907)
  def _reduce_267(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 911)
  def _reduce_268(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 915)
  def _reduce_269(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

module_eval(<<'.,.,', 'ruby21.y', 930)
  def _reduce_280(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 934)
  def _reduce_281(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 939)
  def _reduce_282(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 945)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 950)
  def _reduce_284(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 954)
  def _reduce_285(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 960)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 964)
  def _reduce_287(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 968)
  def _reduce_288(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 972)
  def _reduce_289(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 976)
  def _reduce_290(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 980)
  def _reduce_291(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 984)
  def _reduce_292(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 988)
  def _reduce_293(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 992)
  def _reduce_294(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 996)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1000)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1004)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1009)
  def _reduce_298(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1013)
  def _reduce_299(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1017)
  def _reduce_300(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 301 omitted

module_eval(<<'.,.,', 'ruby21.y', 1026)
  def _reduce_302(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1032)
  def _reduce_303(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1040)
  def _reduce_304(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1047)
  def _reduce_305(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1054)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1058)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1062)
  def _reduce_308(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1067)
  def _reduce_309(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1071)
  def _reduce_310(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1075)
  def _reduce_311(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1080)
  def _reduce_312(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1088)
  def _reduce_313(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1096)
  def _reduce_314(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1100)
  def _reduce_315(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1104)
  def _reduce_316(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1110)
  def _reduce_317(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1115)
  def _reduce_318(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1129)
  def _reduce_319(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1137)
  def _reduce_320(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1147)
  def _reduce_321(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1152)
  def _reduce_322(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1164)
  def _reduce_323(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1170)
  def _reduce_324(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1179)
  def _reduce_325(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1183)
  def _reduce_326(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1189)
  def _reduce_327(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1198)
  def _reduce_328(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1202)
  def _reduce_329(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1206)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1210)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'ruby21.y', 1219)
  def _reduce_335(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

module_eval(<<'.,.,', 'ruby21.y', 1228)
  def _reduce_339(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby21.y', 1239)
  def _reduce_341(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 342 omitted

# reduce 343 omitted

module_eval(<<'.,.,', 'ruby21.y', 1247)
  def _reduce_344(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1251)
  def _reduce_345(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1256)
  def _reduce_346(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1260)
  def _reduce_347(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 348 omitted

module_eval(<<'.,.,', 'ruby21.y', 1266)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1271)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1277)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1282)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1288)
  def _reduce_353(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1292)
  def _reduce_354(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1297)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1301)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1307)
  def _reduce_357(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1311)
  def _reduce_358(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1315)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1319)
  def _reduce_360(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1325)
  def _reduce_361(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1329)
  def _reduce_362(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1334)
  def _reduce_363(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1341)
  def _reduce_364(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1349)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1355)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1362)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 368 omitted

module_eval(<<'.,.,', 'ruby21.y', 1369)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1376)
  def _reduce_370(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1380)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1386)
  def _reduce_372(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1393)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1398)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1404)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1409)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 377 omitted

module_eval(<<'.,.,', 'ruby21.y', 1417)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1421)
  def _reduce_379(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1426)
  def _reduce_380(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1430)
  def _reduce_381(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1434)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1439)
  def _reduce_383(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1443)
  def _reduce_384(val, _values, result)
                          result = val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1448)
  def _reduce_385(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1452)
  def _reduce_386(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1457)
  def _reduce_387(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 388 omitted

module_eval(<<'.,.,', 'ruby21.y', 1462)
  def _reduce_389(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1466)
  def _reduce_390(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1471)
  def _reduce_391(val, _values, result)
                          @lexer.cmdarg = val[2]
                      @lexer.cmdarg.lexpop

                      result = [ val[1], val[3] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1481)
  def _reduce_392(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1485)
  def _reduce_393(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1490)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1494)
  def _reduce_395(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1499)
  def _reduce_396(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1503)
  def _reduce_397(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1510)
  def _reduce_398(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1516)
  def _reduce_399(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1522)
  def _reduce_400(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1532)
  def _reduce_401(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1542)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1548)
  def _reduce_403(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1554)
  def _reduce_404(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1560)
  def _reduce_405(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1564)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1570)
  def _reduce_407(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1576)
  def _reduce_408(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1582)
  def _reduce_409(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1586)
  def _reduce_410(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1591)
  def _reduce_411(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1595)
  def _reduce_412(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1601)
  def _reduce_413(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1605)
  def _reduce_414(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1612)
  def _reduce_415(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1618)
  def _reduce_416(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby21.y', 1624)
  def _reduce_418(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1637)
  def _reduce_419(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1642)
  def _reduce_420(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 421 omitted

# reduce 422 omitted

module_eval(<<'.,.,', 'ruby21.y', 1649)
  def _reduce_423(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 424 omitted

module_eval(<<'.,.,', 'ruby21.y', 1655)
  def _reduce_425(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

module_eval(<<'.,.,', 'ruby21.y', 1665)
  def _reduce_430(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1670)
  def _reduce_431(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1674)
  def _reduce_432(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1679)
  def _reduce_433(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1683)
  def _reduce_434(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1687)
  def _reduce_435(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1692)
  def _reduce_436(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1697)
  def _reduce_437(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1703)
  def _reduce_438(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1708)
  def _reduce_439(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1712)
  def _reduce_440(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1717)
  def _reduce_441(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1721)
  def _reduce_442(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1726)
  def _reduce_443(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1731)
  def _reduce_444(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1735)
  def _reduce_445(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1740)
  def _reduce_446(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1745)
  def _reduce_447(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1750)
  def _reduce_448(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1754)
  def _reduce_449(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1759)
  def _reduce_450(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1763)
  def _reduce_451(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1768)
  def _reduce_452(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1772)
  def _reduce_453(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1777)
  def _reduce_454(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1781)
  def _reduce_455(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1786)
  def _reduce_456(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1790)
  def _reduce_457(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1795)
  def _reduce_458(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1799)
  def _reduce_459(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1803)
  def _reduce_460(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1808)
  def _reduce_461(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1816)
  def _reduce_462(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1820)
  def _reduce_463(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1824)
  def _reduce_464(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 465 omitted

module_eval(<<'.,.,', 'ruby21.y', 1831)
  def _reduce_466(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1836)
  def _reduce_467(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1841)
  def _reduce_468(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1845)
  def _reduce_469(val, _values, result)
                          result = @builder.negate(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1850)
  def _reduce_470(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1854)
  def _reduce_471(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1858)
  def _reduce_472(val, _values, result)
                          result = @builder.rational(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1862)
  def _reduce_473(val, _values, result)
                          result = @builder.complex(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1867)
  def _reduce_474(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1871)
  def _reduce_475(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1875)
  def _reduce_476(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1879)
  def _reduce_477(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1883)
  def _reduce_478(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1888)
  def _reduce_479(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1892)
  def _reduce_480(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1896)
  def _reduce_481(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1900)
  def _reduce_482(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1904)
  def _reduce_483(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1908)
  def _reduce_484(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1912)
  def _reduce_485(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1917)
  def _reduce_486(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1921)
  def _reduce_487(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1926)
  def _reduce_488(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1930)
  def _reduce_489(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1935)
  def _reduce_490(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1939)
  def _reduce_491(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1944)
  def _reduce_492(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1948)
  def _reduce_493(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1952)
  def _reduce_494(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1956)
  def _reduce_495(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1962)
  def _reduce_496(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1967)
  def _reduce_497(val, _values, result)
                          result = @lexer.in_kwarg
                      @lexer.in_kwarg = true
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1972)
  def _reduce_498(val, _values, result)
                          @lexer.in_kwarg = val[0]
                      result = @builder.args(nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1979)
  def _reduce_499(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1983)
  def _reduce_500(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1987)
  def _reduce_501(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1991)
  def _reduce_502(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 1996)
  def _reduce_503(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2000)
  def _reduce_504(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2005)
  def _reduce_505(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2012)
  def _reduce_506(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2020)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2026)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2033)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2039)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2046)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2051)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2057)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2064)
  def _reduce_514(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2069)
  def _reduce_515(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2075)
  def _reduce_516(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2080)
  def _reduce_517(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2086)
  def _reduce_518(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2090)
  def _reduce_519(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2095)
  def _reduce_520(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2099)
  def _reduce_521(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2103)
  def _reduce_522(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2107)
  def _reduce_523(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 524 omitted

module_eval(<<'.,.,', 'ruby21.y', 2113)
  def _reduce_525(val, _values, result)
                          @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2120)
  def _reduce_526(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2124)
  def _reduce_527(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2129)
  def _reduce_528(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2133)
  def _reduce_529(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2138)
  def _reduce_530(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2147)
  def _reduce_531(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2151)
  def _reduce_532(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2156)
  def _reduce_533(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2160)
  def _reduce_534(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2165)
  def _reduce_535(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2169)
  def _reduce_536(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2174)
  def _reduce_537(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2178)
  def _reduce_538(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 539 omitted

# reduce 540 omitted

module_eval(<<'.,.,', 'ruby21.y', 2185)
  def _reduce_541(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2191)
  def _reduce_542(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2196)
  def _reduce_543(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2201)
  def _reduce_544(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2206)
  def _reduce_545(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2210)
  def _reduce_546(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2215)
  def _reduce_547(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2219)
  def _reduce_548(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 549 omitted

# reduce 550 omitted

module_eval(<<'.,.,', 'ruby21.y', 2226)
  def _reduce_551(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2232)
  def _reduce_552(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 553 omitted

# reduce 554 omitted

module_eval(<<'.,.,', 'ruby21.y', 2239)
  def _reduce_555(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2246)
  def _reduce_556(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2250)
  def _reduce_557(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 558 omitted

module_eval(<<'.,.,', 'ruby21.y', 2256)
  def _reduce_559(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2261)
  def _reduce_560(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 561 omitted

module_eval(<<'.,.,', 'ruby21.y', 2267)
  def _reduce_562(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2271)
  def _reduce_563(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2276)
  def _reduce_564(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2280)
  def _reduce_565(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2284)
  def _reduce_566(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])
                    
    result
  end
.,.,

# reduce 567 omitted

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

module_eval(<<'.,.,', 'ruby21.y', 2295)
  def _reduce_583(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby21.y', 2299)
  def _reduce_584(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 585 omitted

# reduce 586 omitted

# reduce 587 omitted

module_eval(<<'.,.,', 'ruby21.y', 2305)
  def _reduce_588(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 589 omitted

# reduce 590 omitted

# reduce 591 omitted

module_eval(<<'.,.,', 'ruby21.y', 2314)
  def _reduce_592(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby21
  end   # module Parser
