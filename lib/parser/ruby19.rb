# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby19 < Parser::Base

module_eval(<<'...end ruby19.y/module_eval...', 'ruby19.y', 2141)

  def version
    19
  end

  def default_encoding
    Encoding::BINARY
  end
...end ruby19.y/module_eval...
##### State transition tables begin ###

clist = [
'-281,278,66,67,68,9,54,-281,-281,-281,60,61,-281,-281,-281,64,-281,62',
'63,65,29,30,69,70,209,258,-281,-281,-281,28,27,26,93,92,94,95,-281,-281',
'19,-281,-281,-281,-281,-281,8,44,542,10,97,96,98,87,53,89,88,90,563',
'91,99,100,542,85,86,41,42,40,-281,-281,-281,-281,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-101,208,-281,-281,-281,39,744,-281,32',
'688,-281,55,56,-281,-281,57,-281,34,-281,584,-281,43,-281,-281,-281',
'-281,-281,-281,-281,20,-281,257,-281,-96,84,76,79,80,209,81,82,656,688',
'548,77,83,-281,-281,-281,-281,-528,-281,59,-281,78,-102,542,-528,-528',
'-528,-103,-82,-528,-528,-528,381,-528,-68,665,-97,383,382,-98,209,619',
'-528,-528,-528,-528,-98,105,562,583,799,542,104,-528,-528,788,-528,-528',
'-528,-528,-528,105,-100,-101,638,105,104,-90,105,741,104,258,-92,104',
'-104,618,105,-99,542,209,688,104,742,-528,-528,-528,-528,-528,-528,-528',
'-528,-528,-528,-528,-528,-528,-528,-100,-92,-528,-528,-528,-99,743,-528',
'-87,649,-528,554,105,-528,-528,555,-528,104,-528,656,-528,-99,-528,-528',
'-528,-528,-528,-528,-528,798,-528,-528,-528,-102,-101,-94,-90,619,253',
'-82,105,209,-524,664,-88,104,-528,-528,-528,-528,-450,-528,209,-528',
'-89,-100,-98,-450,-450,-450,257,-98,-450,-450,-450,-524,-450,-92,105',
'205,206,618,-90,104,-450,-90,-450,-450,-450,-100,-101,-90,-95,105,-100',
'-101,-450,-450,104,-450,-450,-450,-450,-450,-99,105,205,206,-525,-99',
'104,205,206,-92,258,-91,-92,205,206,573,-90,619,-92,619,-394,656,-450',
'-450,-450,-450,-450,-450,-450,-450,-450,-450,-450,-450,-450,-450,205',
'206,-450,-450,-450,498,-450,-450,-93,511,-450,573,513,-450,-450,618',
'-450,618,-450,-464,-450,209,-450,-450,-450,-450,-450,-450,-450,105,-450',
'-465,-450,209,104,817,-394,573,253,-465,575,574,576,-394,-522,-521,-450',
'-450,-450,-450,-453,-450,-394,-450,-103,-450,209,-453,-453,-453,257',
'209,-453,-453,-453,428,-453,209,-96,229,-394,229,575,574,-453,229,-453',
'-453,-453,229,-97,720,-88,-528,-98,209,-453,-453,-97,-453,-453,-453',
'-453,-453,493,494,-453,-450,575,574,571,226,573,-453,-450,228,227,229',
'-522,-521,105,753,-453,-450,-104,104,-453,-453,-453,-453,-453,-453,-453',
'-453,-453,-453,-453,-453,-453,-453,-522,-521,-453,-453,-453,-528,-453',
'-453,-457,-464,-453,498,-528,-453,-453,-457,-453,-524,-453,807,-453',
'-528,-453,-453,-453,-453,-453,-453,-453,-281,-453,573,-453,575,574,585',
'-281,-281,-281,-528,609,203,-281,-281,606,-281,-453,-453,-453,-453,667',
'-453,-87,-453,-94,-453,-456,-528,-96,105,-103,253,105,-456,104,-281',
'-281,104,-281,-281,-281,-281,-281,-453,727,679,596,526,525,524,-453',
'527,-262,679,-95,526,525,524,511,527,-104,510,575,574,580,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-281,-528,573',
'-281,-281,-281,595,602,-528,-89,209,-281,591,-524,-281,-98,816,-528',
'-260,-281,589,-281,229,-281,-281,-281,-281,-281,-281,-281,-528,-281',
'76,-281,597,-528,598,-528,-528,-528,586,77,-455,-528,-528,790,-528,-281',
'-281,-455,-93,78,-281,897,226,-528,-102,229,228,227,224,225,669,575',
'574,578,-528,-528,-460,-528,-528,-528,-528,-528,209,-460,771,-90,754',
'-92,526,525,524,-99,527,-101,714,715,250,226,716,99,100,228,227,251',
'-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,-528,-528',
'-450,568,-528,-528,-528,531,603,-450,569,-260,-528,672,-458,-528,535',
'534,538,537,-528,-458,-528,767,-528,-528,-528,-528,-528,-528,-528,673',
'-528,-528,-528,229,529,-459,526,525,524,105,527,819,-459,-461,104,821',
'-528,-528,753,-91,-461,-528,205,206,824,-100,278,66,67,68,9,54,105,794',
'656,60,61,104,205,206,64,531,62,63,65,29,30,69,70,825,535,534,538,537',
'28,27,26,93,92,94,95,753,679,19,526,525,524,229,527,8,44,831,10,97,96',
'98,87,53,89,88,90,832,91,99,100,681,85,86,41,42,40,679,834,526,525,524',
'424,527,679,675,526,525,524,425,527,835,511,-463,678,513,39,649,426',
'32,-463,511,55,56,513,682,57,649,34,-463,304,305,43,679,675,526,525',
'524,553,527,20,531,552,678,844,84,76,79,80,845,81,82,538,537,846,77',
'83,278,66,67,68,9,54,59,209,78,60,61,794,656,531,64,848,62,63,65,29',
'30,69,70,851,538,537,853,855,28,27,26,93,92,94,95,855,829,19,526,525',
'524,209,527,8,44,373,10,97,96,98,87,53,89,88,90,860,91,99,100,548,85',
'86,41,42,40,679,862,526,525,524,253,527,864,679,684,526,525,524,475',
'527,548,515,514,253,39,870,691,32,872,209,55,56,875,-263,57,679,34,526',
'525,524,43,527,675,529,507,526,525,524,20,527,531,859,506,84,76,79,80',
'229,81,82,500,538,537,77,83,278,66,67,68,9,54,59,675,78,60,61,499,495',
'209,64,531,62,63,65,29,30,69,70,882,535,534,538,537,28,27,26,93,92,94',
'95,883,679,19,526,525,524,253,527,8,44,886,10,97,96,98,87,53,89,88,90',
'209,91,99,100,262,85,86,41,42,40,679,491,526,525,524,489,527,679,675',
'526,525,524,490,527,484,891,-274,-462,483,39,209,488,32,-274,-462,55',
'56,-67,649,57,719,34,-274,-462,475,43,679,675,526,525,524,473,527,20',
'531,899,471,901,84,76,79,80,902,81,82,538,537,475,77,83,278,66,67,68',
'9,54,59,907,78,60,61,462,909,531,64,912,62,63,65,29,30,69,70,914,538',
'537,855,855,28,27,26,93,92,94,95,473,208,19,919,506,430,429,607,8,44',
'427,10,97,96,98,87,53,89,88,90,384,91,99,100,927,85,86,41,42,40,229',
'233,238,239,240,235,237,245,246,241,242,-463,222,223,501,855,243,244',
'-463,39,855,502,32,855,931,55,56,-463,722,57,426,34,226,899,232,43,228',
'227,224,225,236,234,230,20,231,371,209,504,84,76,79,80,303,81,82,229',
'302,-462,77,83,-261,247,-275,-237,-462,248,59,728,78,-275,-275,-275',
'209,-462,-275,-275,-275,529,-275,526,525,524,204,527,199,198,197,226',
'-275,-275,-275,228,227,224,225,113,462,899,-275,-275,462,-275,-275,-275',
'-275,-275,679,946,526,525,524,947,527,949,531,518,679,855,526,525,524',
'855,527,535,534,538,537,855,-275,-275,-275,-275,-275,-275,-275,-275',
'-275,-275,-275,-275,-275,-275,-525,675,-275,-275,-275,-281,-524,-275',
'746,855,-275,675,-281,-275,-275,899,-275,-525,-275,101,-275,-281,-275',
'-275,-275,-275,-275,-275,-275,-282,-275,855,-275,,889,,-282,,,,,890',
',,,-282,-275,-275,-275,-275,888,-275,,-275,278,66,67,68,9,54,,,550,60',
'61,,,,64,551,62,63,65,29,30,69,70,,549,,,,28,27,26,93,92,94,95,,829',
'19,526,525,524,,527,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,-274,,,,558,,679,-274,526,525,524,918,527,,,-281,-274,',
'39,,559,32,-281,,55,56,,-525,57,201,34,-281,,,43,679,202,526,525,524',
',527,20,531,,200,,84,76,79,80,,81,82,538,537,,77,83,278,66,67,68,9,54',
'59,,78,60,61,,,531,64,,62,63,65,29,30,69,70,,538,537,,,28,27,26,93,92',
'94,95,,,19,,,,,592,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
'41,42,40,229,233,238,239,240,235,237,245,246,241,242,-281,222,223,558',
',243,244,-281,39,,557,32,-525,,55,56,-281,,57,559,34,226,,232,43,228',
'227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,-282,-324,77,83',
',247,-530,-282,-324,,59,,78,-530,-530,-530,-282,-324,-530,-530,-530',
'529,-530,526,525,524,,527,-282,,,-530,-530,-530,-530,-282,108,109,110',
'111,112,,-530,-530,-282,-530,-530,-530,-530,-530,108,109,110,111,112',
',,,531,709,108,109,110,111,112,,,535,534,538,537,,-530,-530,-530,-530',
'-530,-530,-530,-530,-530,-530,-530,-530,-530,-530,,,-530,-530,-530,',
',-530,,,-530,,,-530,-530,,-530,,-530,,-530,,-530,-530,-530,-530,-530',
'-530,-530,-529,-530,-530,-530,,,,-529,-529,-529,,,-529,-529,-529,229',
'-529,-530,-530,-530,-530,,-530,,-530,-529,-529,-529,-529,,,243,244,',
',,-529,-529,,-529,-529,-529,-529,-529,,,,226,,232,,228,227,224,225,',
',230,,231,108,109,110,111,112,,-529,-529,-529,-529,-529,-529,-529,-529',
'-529,-529,-529,-529,-529,-529,,,-529,-529,-529,,,-529,,,-529,,,-529',
'-529,,-529,,-529,,-529,,-529,-529,-529,-529,-529,-529,-529,,-529,-529',
'-529,,,,,,,,,,,,,,-529,-529,-529,-529,,-529,,-529,278,66,67,68,9,54',
',,,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19',
',,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,',
',,,,,679,,526,525,524,,527,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,754',
',526,525,524,20,527,531,,,84,76,79,80,,81,82,,538,537,77,83,278,66,67',
'68,9,54,59,,78,60,61,,,,64,531,62,63,65,29,30,69,70,,535,534,538,537',
'28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,41,42,40,,,,,,,,,679,,526,525,524,,527,,,,,39,,,32,,,55',
'56,,,57,,34,,,,43,,,529,,526,525,524,20,527,531,,,84,76,79,80,,81,82',
',538,537,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,531,62,63,65,29',
'30,69,70,,535,534,538,537,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39',
',,32,,,55,56,,,57,,34,,,,43,,,754,,526,525,524,20,527,,,,84,76,79,80',
',81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,531,62,63,65,29',
'30,69,70,,535,534,538,537,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39',
',,32,,,55,56,,,57,,34,,,,43,,,529,,526,525,524,20,527,,,,84,76,79,80',
',81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,531,62,63,65,29',
'30,69,70,,535,534,538,537,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39',
',,32,,,55,56,,,57,,34,,,,43,,,529,,526,525,524,20,527,,,,84,76,79,80',
',81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,531,62,63,65,29',
'30,69,70,,535,534,538,537,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39',
',,32,,,55,56,,,57,,34,,,,43,,,754,,526,525,524,20,527,,,,84,76,79,80',
',81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,531,62,63,65,29',
'30,69,70,,535,534,538,537,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,-547,-547,-547,-547',
'235,237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232',
'43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83',
'278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,229,233,238,239,240,235,237,245,246,241,242,,-547,-547',
',,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236',
'234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,',
'78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19',
',,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229',
'-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56',
',,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79',
'80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,41,42,40,229,,,,,,,,,,,,,,,,243,244,,39,',
',32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,,,230,20,231,,,,84',
'76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,,,,,,,,,,,,,,,,243,244',
',39,,,280,,,55,56,,,57,,34,226,,232,43,228,227,224,225,,,230,20,231',
',,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,233,238,239,240',
'235,237,245,,241,242,,,,,,243,244,,39,,,280,,,55,56,,,57,,34,226,,232',
'43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83',
'278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243',
'244,,39,,,280,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230',
'20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44',
',10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,,,,,,,,,',
',,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225',
',,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,',
',,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,-547',
'-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56,,,57',
',34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81',
'82,,,,77,83,5,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70',
',,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,7,10,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,41,42,40,229,233,238,239,240,235,237,245,246,241,242',
',-547,-547,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224',
'225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9',
'54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95',
',,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
'229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39,,,32,,',
'55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84',
'76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,-547,-547,-547,-547,235',
'237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228',
'227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66',
'67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
'41,42,40,229,233,238,239,240,235,237,,,241,242,,,,,,243,244,,39,,,32',
',,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84',
'76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,,,,,,,,,,,,,,,,243,244',
',39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,229,,,,,,,,,,,,,,,,243,244,,39',
',,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,,,,20,,,,,84,76,79',
'80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,41,42,40,229,,,,,,,,,,,,,,,,243,244,,39,',
',32,,,55,56,,,57,,34,226,,,43,228,227,224,225,,,,20,,,,,84,76,79,80',
',81,82,,,,77,83,5,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,7,10,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,,57',
',34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,269,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,',
',,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,607,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
'229,233,238,239,240,235,237,245,246,241,242,,222,223,,,243,244,,214',
',,220,,,55,56,,,57,,,226,,232,43,228,227,224,225,236,234,230,20,231',
',,,84,76,79,80,,81,82,,,,77,83,105,247,,,,104,59,,78,66,67,68,,54,,',
',60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,',
'221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,529,299,526',
'525,524,,527,,,,,,,,,,,,,,,335,,,32,,,55,56,,,57,,34,,,,531,709,,,,',
',,,535,534,538,537,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,293,,,97,96,98,340,53,89,88,341,,91,99,100,,85,86,,,299,,,,,,',
',,,,,,,,,,347,,,342,,,220,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,340,53,89',
'88,341,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,342,,,220,,,55,56',
',,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54,59,,78,60,61,,,',
'64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,7',
'10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,229,233,238,239',
'240,235,237,245,246,241,242,,222,223,,,243,244,,39,,,32,,,55,56,,,57',
',34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81',
'82,,,,77,83,,247,,,,373,59,,78,66,67,68,,54,,,,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,',
',,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55',
'56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,389,,,,43,,,',
',,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,',
',,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,',
',,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271',
',269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,269,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,',
',,214,,,220,,,55,56,,,57,,633,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,',
',,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,',
',,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,',
',,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,389,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,',
',,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,',
',,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,209,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,725,,,,43,,,',
',,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44',
'7,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,',
',,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,',
',,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,',
',,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56',
',,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,',
',,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,',
',,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,',
',,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,',
'28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271',
',269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,',
',,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,209,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,271,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77',
'83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269',
',43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295',
'296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,,,299,229,233,238,239,240,235,237,245,246,241,242,,222,223,,,243',
'244,,289,,,220,,,55,56,,,57,,,226,,232,,228,227,224,225,236,234,230',
',231,,,,84,76,79,80,,81,82,,,,77,83,,247,,301,,,59,,78,66,67,68,,54',
',,,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,299,,',
',,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,',
',57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,,,299,229,233,238,239,240,235,237',
'245,246,241,242,,222,223,,,243,244,,289,,,220,,,55,56,,,57,,,226,,232',
',228,227,224,225,236,234,230,,231,,,,84,76,79,80,,81,82,,,,77,83,,247',
',486,,,59,,78,66,67,68,,54,,,,60,61,,,,64,,62,63,65,295,296,69,70,,',
',,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,284',
',,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92',
'94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86',
'41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,',
',,,,214,,,220,,,55,56,,,57,,389,,,,43,,,,,,,,219,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,',
',,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,',
',,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
'41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219',
',,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,885',
',,220,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,',
',289,,,285,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,,,,,,,,,,,,',
',,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,',
'85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,',
'43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,299,,,,,,,,',
',,,,,,,,,,,289,,,285,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,',
',,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,',
',,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,504,,55',
'56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295',
'296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,633,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
'41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20',
',,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,',
',,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,',
',,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,,299,,,,,,,,,,,,,,,,,,,,841,,,220,,,55,56,,,57,,',
',,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,41,42,40,,,',
',,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,269,,43,,,,,,,,219,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53',
'89,88,90,273,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,',
',,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,41,42,40,229,233,238,239,240,235,237,245,246,241',
'242,,222,223,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227',
'224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,,247,,,,373',
'59,,78,66,67,68,,54,,,,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,',
',20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,41,42,40,229,233,238,239,240,235,237,245,246,241,242,,222,223',
',,243,244,,214,,,220,,,55,56,,,57,,,226,,232,43,228,227,224,225,236',
'234,230,219,231,,,,84,76,79,80,,81,82,,,,77,83,,247,-243,,,,59,,78,-243',
'-243,-243,,,-243,-243,-243,,-243,,,,,,,,,,-243,,,,,,,,,,-243,-243,,-243',
'-243,-243,-243,-243,,,,,,,,,,,,,,,,,,,,,,,-243,,,,,,,-243,-243,-243',
',-243,-243,-243,-243,,-243,,-243,,,,,253,-243,-243,-243,-243,,,,,,,',
',-243,-243,,-243,-243,-243,-243,-243,,,-243,,,,,,,,,,,,,,-243,,,,,-243',
'-243,-243,-243,-243,-243,-243,-243,-243,-243,-243,-243,-243,-243,-243',
',,-243,-243,-243,,,-243,,253,-243,,,-243,-243,,-243,,-243,,-243,,-243',
'-243,-243,-243,-243,-243,-243,-393,-243,-243,-243,,,,-393,-393,-393',
',,-393,-393,-393,,-393,-243,-243,,-243,,-243,,,-393,-393,-393,,,,,,',
',,-393,-393,,-393,-393,-393,-393,-393,,,,,,,,,,,,,,,,,,,,,,,-393,-393',
'-393,-393,-393,-393,-393,-393,-393,-393,-393,-393,-393,-393,,,-393,-393',
'-393,,,-393,,253,-393,,,-393,-393,,-393,,-393,,-393,,-393,-393,-393',
'-393,-393,-393,-393,-288,-393,-393,-393,,,,-288,-288,-288,,,-288,-288',
'-288,,-288,-393,-393,,-393,,-393,,,,-288,-288,,,,,,,,,-288,-288,,-288',
'-288,-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,,-288,-288,-288,-288,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,,,-288,-288,-288,,,-288,,262',
'-288,,,-288,-288,,-288,,-288,,-288,,-288,-288,-288,-288,-288,-288,-288',
'-243,-288,,-288,,,,-243,-243,-243,,,-243,-243,-243,,-243,-288,-288,',
'-288,,-288,,,,-243,,,,,,,,,,-243,-243,,-243,-243,-243,-243,-243,,,,',
',610,401,,,611,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132',
',,-243,151,152,138,139,,,-243,,,253,,253,-243,,,,,143,142,,127,148,145',
'144,140,141,135,133,125,147,126,,,153,-243,,,,,,,,,,,,,,-243,,,,,-243',
'164,175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194',
'173,162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178',
',,,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,,83,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178,',
',,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,,83,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178,',
',,,,159,166,157,158,154,155,156,116,118,115,,117,,,,,,,,149,150,,146',
'128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143',
'142,,127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,',
'83,164,175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194',
'173,162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178',
',,,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,,,153,84,,,,,,,,,,,83,164',
'175,165,188,161,181,171,170,191,192,186,169,168,163,189,193,194,173',
'162,176,180,182,174,167,,,,183,190,185,184,177,187,172,160,179,178,',
',,,,159,166,157,158,154,155,156,116,118,,,117,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,,,153,164,175,165,188,161',
'181,171,170,191,192,186,169,168,163,189,193,194,173,162,176,180,182',
'174,167,,,,183,190,185,358,357,359,356,160,179,178,,,,,,159,166,157',
'158,353,354,355,351,118,89,88,352,,91,,,,,,149,150,,146,128,129,130',
'137,134,136,,,131,132,,,,151,152,138,139,,,,,,363,,,,,,,,143,142,,127',
'148,145,144,140,141,135,133,125,147,126,696,408,153,,697,,,,,,,,149',
'150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253',
',,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126,699,408',
'153,,700,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151',
'152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133',
'125,147,126,459,401,153,,460,,,,,,,,149,150,,146,128,129,130,137,134',
'136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145',
'144,140,141,135,133,125,147,126,612,408,153,,613,,,,,,,,149,150,,146',
'128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,',
',143,142,,127,148,145,144,140,141,135,133,125,147,126,612,408,153,,613',
',,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147',
'126,610,401,153,,611,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131',
'132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140',
'141,135,133,125,147,126,459,401,153,,460,,,,,,,,149,150,,146,128,129',
'130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,,,,,,,,,143,142,,127',
'148,145,144,140,141,135,133,125,147,126,459,401,153,,460,,,,,,,,149',
'150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,',
',,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126,941,408',
'153,,940,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151',
'152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133',
'125,147,126,922,401,153,,923,,,,,,,,149,150,,146,128,129,130,137,134',
'136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145',
'144,140,141,135,133,125,147,126,645,408,153,,646,,,,,,,,149,150,,146',
'128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,',
',143,142,,127,148,145,144,140,141,135,133,125,147,126,642,401,153,,643',
',,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147',
'126,924,408,153,,925,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131',
'132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140',
'141,135,133,125,147,126,404,408,153,,403,,,,,,,,149,150,,146,128,129',
'130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142',
',127,148,145,144,140,141,135,133,125,147,126,397,401,153,,398,,,,,,',
',149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,',
',,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
'694,401,153,,695,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132',
',,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141',
'135,133,125,147,126,,,153,229,233,238,239,240,235,237,245,246,241,242',
',222,223,,,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230',
',231,,229,233,238,239,240,235,237,245,246,241,242,,222,223,,247,243',
'244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231,,229,233',
'238,239,240,235,237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,',
',,,,226,,232,,228,227,224,225,236,234,230,,231,,229,233,238,239,240',
'235,237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232',
',228,227,224,225,236,234,230,,231,,229,233,238,239,240,235,237,245,246',
'241,242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225',
'236,234,230,,231,,229,233,238,239,240,235,237,245,246,241,242,,222,223',
',247,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231',
',229,233,238,239,240,235,237,245,246,241,242,,222,223,,247,243,244,',
',,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231,,229,233,238',
'239,240,235,237,245,246,241,242,,222,223,209,247,243,244,,,,,,,,,,,',
',,,226,,232,,228,227,224,225,236,234,230,,231,,229,233,238,239,240,235',
'237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232,,228',
'227,224,225,236,234,230,,231,,,,,,,,,,,,,,,,,247' ]
        racc_action_table = arr = ::Array.new(23302, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'613,757,757,757,757,757,757,613,613,613,757,757,613,613,613,757,613',
'757,757,757,757,757,757,757,614,58,613,613,613,757,757,757,757,757,757',
'757,613,613,757,613,613,613,613,613,757,757,692,757,757,757,757,757',
'757,757,757,757,346,757,757,757,326,757,757,757,757,757,613,613,613',
'613,613,613,613,613,613,613,613,613,613,613,695,19,613,613,613,757,613',
'613,757,544,613,757,757,613,613,757,613,757,613,369,613,757,613,613',
'613,613,613,613,613,757,613,58,613,332,757,757,757,757,19,757,757,868',
'545,868,757,757,613,613,613,613,612,613,757,613,757,613,863,612,612',
'612,552,637,612,612,612,115,612,637,517,333,115,115,942,487,467,612',
'612,612,612,801,692,346,369,692,325,692,612,612,677,612,612,612,612',
'612,326,924,923,485,563,326,642,346,610,563,294,695,346,336,467,544',
'922,770,680,802,544,611,612,612,612,612,612,612,612,612,612,612,612',
'612,612,612,696,643,612,612,612,694,612,612,332,496,612,342,545,612',
'612,342,612,545,612,685,612,610,612,612,612,612,612,612,612,690,612',
'612,612,697,611,552,642,625,294,482,863,693,924,517,333,863,612,612',
'612,612,87,612,481,612,801,612,942,87,87,87,294,942,87,87,87,696,87',
'643,325,564,564,625,642,325,87,642,87,87,87,924,923,642,336,802,924',
'923,87,87,802,87,87,87,87,87,922,770,653,653,697,922,770,570,570,643',
'25,696,643,421,421,366,694,466,643,457,763,505,87,87,87,87,87,87,87',
'87,87,87,87,87,87,87,324,324,87,87,87,427,87,87,697,316,87,581,316,87',
'87,466,87,457,87,212,87,468,87,87,87,87,87,87,87,564,87,213,87,464,564',
'745,763,365,25,38,366,366,366,763,341,340,87,87,87,87,90,87,763,87,427',
'87,653,90,90,90,25,570,90,90,90,215,90,421,212,433,763,438,581,581,90',
'437,90,90,90,436,213,581,38,699,745,702,90,90,38,90,90,90,90,90,299',
'299,341,340,365,365,365,433,370,341,340,433,433,435,341,340,710,666',
'341,340,215,710,90,90,90,90,90,90,90,90,90,90,90,90,90,90,341,340,90',
'90,90,699,90,90,359,37,90,303,699,90,90,359,90,699,90,707,90,699,90',
'90,90,90,90,90,90,403,90,368,90,370,370,370,403,403,403,699,423,15,403',
'403,413,403,90,90,90,90,520,90,37,90,303,90,358,645,37,276,303,405,704',
'358,276,403,403,704,403,403,403,403,403,352,593,678,396,678,678,678',
'352,678,724,859,15,859,859,859,315,859,15,315,368,368,368,403,403,403',
'403,403,403,403,403,403,403,403,403,403,403,645,367,403,403,403,395',
'403,645,593,393,403,390,645,403,593,729,645,387,403,385,403,452,403',
'403,403,403,403,403,403,404,403,74,403,397,645,398,404,404,404,379,74',
'357,404,404,678,404,403,403,357,403,74,403,859,452,404,403,434,452,452',
'452,452,521,367,367,367,404,404,353,404,404,404,404,404,661,353,658',
'397,618,398,618,618,618,397,618,398,574,574,24,434,574,574,574,434,434',
'24,404,404,404,404,404,404,404,404,404,404,404,404,404,404,351,361,404',
'404,404,618,404,351,361,657,404,522,356,404,618,618,618,618,404,356',
'404,654,404,404,404,404,404,404,404,529,404,404,404,652,848,354,848',
'848,848,329,848,747,354,355,329,748,404,404,618,404,355,404,17,17,749',
'404,540,540,540,540,540,540,3,933,933,540,540,3,508,508,540,848,540',
'540,540,540,540,540,540,751,848,848,848,848,540,540,540,540,540,540',
'540,752,675,540,675,675,675,651,675,540,540,754,540,540,540,540,540',
'540,540,540,540,756,540,540,540,536,540,540,540,540,540,531,758,531',
'531,531,211,531,949,675,949,949,949,211,949,759,662,839,675,662,540',
'762,211,540,839,319,540,540,319,539,540,648,540,839,40,40,540,851,531',
'851,851,851,337,851,540,949,335,531,773,540,540,540,540,775,540,540',
'949,949,776,540,540,656,656,656,656,656,656,540,777,540,656,656,683',
'683,851,656,778,656,656,656,656,656,656,656,779,851,851,782,783,656',
'656,656,656,656,656,656,785,753,656,753,753,753,787,753,656,656,331',
'656,656,656,656,656,656,656,656,656,789,656,656,656,330,656,656,656',
'656,656,788,792,788,788,788,647,788,795,853,541,853,853,853,320,853',
'546,318,317,644,656,804,547,656,808,809,656,656,812,813,656,860,656',
'860,860,860,656,860,788,709,312,709,709,709,656,709,853,788,311,656',
'656,656,656,308,656,656,305,853,853,656,656,664,664,664,664,664,664',
'656,860,656,664,664,304,300,641,664,709,664,664,664,664,664,664,664',
'826,709,709,709,709,664,664,664,664,664,664,664,827,931,664,931,931',
'931,298,931,664,664,833,664,664,664,664,664,664,664,664,664,293,664',
'664,664,292,664,664,664,664,664,899,289,899,899,899,288,899,855,931',
'855,855,855,288,855,283,841,290,838,282,664,281,288,664,290,838,664',
'664,279,639,664,578,664,290,838,270,664,912,899,912,912,912,267,912',
'664,855,861,266,865,664,664,664,664,866,664,664,855,855,632,664,664',
'665,665,665,665,665,665,664,871,664,665,665,252,876,912,665,877,665',
'665,665,665,665,665,665,878,912,912,879,881,665,665,665,665,665,665',
'665,630,221,665,885,887,217,216,416,665,665,214,665,665,665,665,665',
'665,665,665,665,195,665,665,665,892,665,665,665,665,665,416,416,416',
'416,416,416,416,416,416,416,416,287,416,416,306,893,416,416,287,665',
'894,306,665,895,896,665,665,287,584,665,306,665,416,898,416,665,416',
'416,416,416,416,416,416,665,416,101,44,492,665,665,665,665,39,665,665',
'453,36,286,665,665,590,416,53,416,286,22,665,594,665,53,53,53,921,286',
'53,53,53,323,53,323,323,323,16,323,13,12,10,453,53,53,53,453,453,453',
'453,7,599,932,53,53,604,53,53,53,53,53,790,934,790,790,790,935,790,936',
'323,323,897,937,897,897,897,938,897,323,323,323,323,939,53,53,53,53',
'53,53,53,53,53,53,53,53,53,53,940,790,53,53,53,700,941,53,616,943,53',
'897,700,53,53,944,53,700,53,1,53,700,53,53,53,53,53,53,53,891,53,954',
'53,,840,,891,,,,,840,,,,891,53,53,53,53,840,53,,53,703,703,703,703,703',
'703,,,334,703,703,,,,703,334,703,703,703,703,703,703,703,,334,,,,703',
'703,703,703,703,703,703,,883,703,883,883,883,,883,703,703,,703,703,703',
'703,703,703,703,703,703,,703,703,703,,703,703,703,703,703,,842,,,,884',
',927,842,927,927,927,884,927,,,925,842,,703,,884,703,925,,703,703,,925',
'703,14,703,925,,,703,914,14,914,914,914,,914,703,927,,14,,703,703,703',
'703,,703,703,927,927,,703,703,708,708,708,708,708,708,703,,703,708,708',
',,914,708,,708,708,708,708,708,708,708,,914,914,,,708,708,708,708,708',
'708,708,,,708,,,,,392,708,708,,708,708,708,708,708,708,708,708,708,',
'708,708,708,,708,708,708,708,708,392,392,392,392,392,392,392,392,392',
'392,392,646,392,392,344,,392,392,646,708,,344,708,646,,708,708,646,',
'708,344,708,392,,392,708,392,392,392,392,392,392,392,708,392,,,,708',
'708,708,708,,708,708,,555,45,708,708,,392,409,555,45,,708,,708,409,409',
'409,555,45,409,409,409,874,409,874,874,874,,874,491,,,409,409,409,409',
'491,480,480,480,480,480,,409,409,491,409,409,409,409,409,6,6,6,6,6,',
',,874,874,277,277,277,277,277,,,874,874,874,874,,409,409,409,409,409',
'409,409,409,409,409,409,409,409,409,,,409,409,409,,,409,,,409,,,409',
'409,,409,,409,,409,,409,409,409,409,409,409,409,408,409,409,409,,,,408',
'408,408,,,408,408,408,444,408,409,409,409,409,,409,,409,408,408,408',
'408,,,444,444,,,,408,408,,408,408,408,408,408,,,,444,,444,,444,444,444',
'444,,,444,,444,636,636,636,636,636,,408,408,408,408,408,408,408,408',
'408,408,408,408,408,408,,,408,408,408,,,408,,,408,,,408,408,,408,,408',
',408,,408,408,408,408,408,408,408,,408,408,408,,,,,,,,,,,,,,408,408',
'408,408,,408,,408,565,565,565,565,565,565,,,,565,565,,,,565,,565,565',
'565,565,565,565,565,,,,,,565,565,565,565,565,565,565,,,565,,,,,,565',
'565,,565,565,565,565,565,565,565,565,565,,565,565,565,,565,565,565,565',
'565,,,,,,,,,672,,672,672,672,,672,,,,,565,,,565,,,565,565,,,565,,565',
',,,565,,,819,,819,819,819,565,819,672,,,565,565,565,565,,565,565,,672',
'672,565,565,628,628,628,628,628,628,565,,565,628,628,,,,628,819,628',
'628,628,628,628,628,628,,819,819,819,819,628,628,628,628,628,628,628',
',,628,,,,,,628,628,,628,628,628,628,628,628,628,628,628,,628,628,628',
',628,628,628,628,628,,,,,,,,,824,,824,824,824,,824,,,,,628,,,628,,,628',
'628,,,628,,628,,,,628,,,518,,518,518,518,628,518,824,,,628,628,628,628',
',628,628,,824,824,628,628,718,718,718,718,718,718,628,,628,718,718,',
',,718,518,718,718,718,718,718,718,718,,518,518,518,518,718,718,718,718',
'718,718,718,,,718,,,,,,718,718,,718,718,718,718,718,718,718,718,718',
',718,718,718,,718,718,718,718,718,,,,,,,,,,,,,,,,,,,,718,,,718,,,718',
'718,,,718,,718,,,,718,,,821,,821,821,821,718,821,,,,718,718,718,718',
',718,718,,,,718,718,543,543,543,543,543,543,718,,718,543,543,,,,543',
'821,543,543,543,543,543,543,543,,821,821,821,821,543,543,543,543,543',
'543,543,,,543,,,,,,543,543,,543,543,543,543,543,543,543,543,543,,543',
'543,543,,543,543,543,543,543,,,,,,,,,,,,,,,,,,,,543,,,543,,,543,543',
',,543,,543,,,,543,,,669,,669,669,669,543,669,,,,543,543,543,543,,543',
'543,,,,543,543,767,767,767,767,767,767,543,,543,767,767,,,,767,669,767',
'767,767,767,767,767,767,,669,669,669,669,767,767,767,767,767,767,767',
',,767,,,,,,767,767,,767,767,767,767,767,767,767,767,767,,767,767,767',
',767,767,767,767,767,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,767,,,767,,767',
',,,767,,,667,,667,667,667,767,667,,,,767,767,767,767,,767,767,,,,767',
'767,796,796,796,796,796,796,767,,767,796,796,,,,796,667,796,796,796',
'796,796,796,796,,667,667,667,667,796,796,796,796,796,796,796,,,796,',
',,,,796,796,,796,796,796,796,796,796,796,796,796,,796,796,796,,796,796',
'796,796,796,,,,,,,,,,,,,,,,,,,,796,,,796,,,796,796,,,796,,796,,,,796',
',,909,,909,909,909,796,909,,,,796,796,796,796,,796,796,,,,796,796,797',
'797,797,797,797,797,796,,796,797,797,,,,797,909,797,797,797,797,797',
'797,797,,909,909,909,909,797,797,797,797,797,797,797,,,797,,,,,,797',
'797,,797,797,797,797,797,797,797,797,797,,797,797,797,,797,797,797,797',
'797,442,442,442,442,442,442,442,,,442,442,,,,,,442,442,,797,,,797,,',
'797,797,,,797,,797,442,,442,797,442,442,442,442,442,442,442,797,442',
',,,797,797,797,797,,797,797,,,,797,797,800,800,800,800,800,800,797,',
'797,800,800,,,,800,,800,800,800,800,800,800,800,,,,,,800,800,800,800',
'800,800,800,,,800,,,,,,800,800,,800,800,800,800,800,800,800,800,800',
',800,800,800,,800,800,800,800,800,432,432,432,432,432,432,432,432,432',
'432,432,,432,432,,,432,432,,800,,,800,,,800,800,,,800,,800,432,,432',
'800,432,432,432,432,432,432,432,800,432,,,,800,800,800,800,,800,800',
',,,800,800,806,806,806,806,806,806,800,,800,806,806,,,,806,,806,806',
'806,806,806,806,806,,,,,,806,806,806,806,806,806,806,,,806,,,,,,806',
'806,,806,806,806,806,806,806,806,806,806,,806,806,806,,806,806,806,806',
'806,447,447,447,447,447,447,447,,,447,447,,,,,,447,447,,806,,,806,,',
'806,806,,,806,,806,447,,447,806,447,447,447,447,447,447,447,806,447',
',,,806,806,806,806,,806,806,,,,806,806,837,837,837,837,837,837,806,',
'806,837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837,837,837',
'837,837,837,,,837,,,,,,837,837,,837,837,837,837,837,837,837,837,837',
',837,837,837,,837,837,837,837,837,443,,,,,,,,,,,,,,,,443,443,,837,,',
'837,,,837,837,,,837,,837,443,,443,837,443,443,443,443,,,443,837,443',
',,,837,837,837,837,,837,837,,,,837,837,32,32,32,32,32,32,837,,837,32',
'32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,32',
'32,,32,32,32,32,32,32,32,32,32,,32,32,32,,32,32,32,32,32,446,,,,,,,',
',,,,,,,,446,446,,32,,,32,,,32,32,,,32,,32,446,,446,32,446,446,446,446',
',,446,32,446,,,,32,32,32,32,,32,32,,,,32,32,285,285,285,285,285,285',
'32,,32,285,285,,,,285,,285,285,285,285,285,285,285,,,,,,285,285,285',
'285,285,285,285,,,285,,,,,,285,285,,285,285,285,285,285,285,285,285',
'285,,285,285,285,,285,285,285,285,285,455,455,455,455,455,455,455,455',
',455,455,,,,,,455,455,,285,,,285,,,285,285,,,285,,285,455,,455,285,455',
'455,455,455,455,455,455,285,455,,,,285,285,285,285,,285,285,,,,285,285',
'280,280,280,280,280,280,285,,285,280,280,,,,280,,280,280,280,280,280',
'280,280,,,,,,280,280,280,280,280,280,280,,,280,,,,,,280,280,,280,280',
'280,280,280,280,280,280,280,,280,280,280,,280,280,280,280,280,449,449',
'449,449,449,449,449,,,449,449,,,,,,449,449,,280,,,280,,,280,280,,,280',
',280,449,,449,280,449,449,449,449,449,449,449,280,449,,,,280,280,280',
'280,,280,280,,,,280,280,220,220,220,220,220,220,280,,280,220,220,,,',
'220,,220,220,220,220,220,220,220,,,,,,220,220,220,220,220,220,220,,',
'220,,,,,,220,220,,220,220,220,220,220,220,220,220,220,,220,220,220,',
'220,220,220,220,220,445,,,,,,,,,,,,,,,,445,445,,220,,,220,,,220,220',
',,220,,220,445,,445,220,445,445,445,445,,,445,220,445,,,,220,220,220',
'220,,220,220,,,,220,220,197,197,197,197,197,197,220,,220,197,197,,,',
'197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197,,',
'197,,,,,,197,197,,197,197,197,197,197,197,197,197,197,,197,197,197,',
'197,197,197,197,197,448,448,448,448,448,448,448,,,448,448,,,,,,448,448',
',197,,,197,,,197,197,,,197,,197,448,,448,197,448,448,448,448,448,448',
'448,197,448,,,,197,197,197,197,,197,197,,,,197,197,113,113,113,113,113',
'113,197,,197,113,113,,,,113,,113,113,113,113,113,113,113,,,,,,113,113',
'113,113,113,113,113,,,113,,,,,,113,113,113,113,113,113,113,113,113,113',
'113,113,,113,113,113,,113,113,113,113,113,431,431,431,431,431,431,431',
'431,431,431,431,,431,431,,,431,431,,113,,,113,,,113,113,,,113,,113,431',
',431,113,431,431,431,431,431,431,431,113,431,,,,113,113,113,113,,113',
'113,,,,113,113,908,908,908,908,908,908,113,,113,908,908,,,,908,,908',
'908,908,908,908,908,908,,,,,,908,908,908,908,908,908,908,,,908,,,,,',
'908,908,,908,908,908,908,908,908,908,908,908,,908,908,908,,908,908,908',
'908,908,451,451,451,451,451,451,451,,,451,451,,,,,,451,451,,908,,,908',
',,908,908,,,908,,908,451,,451,908,451,451,451,451,451,451,451,908,451',
',,,908,908,908,908,,908,908,,,,908,908,906,906,906,906,906,906,908,',
'908,906,906,,,,906,,906,906,906,906,906,906,906,,,,,,906,906,906,906',
'906,906,906,,,906,,,,,,906,906,,906,906,906,906,906,906,906,906,906',
',906,906,906,,906,906,906,906,906,450,450,450,450,450,450,450,,,450',
'450,,,,,,450,450,,906,,,906,,,906,906,,,906,,906,450,,450,906,450,450',
'450,450,450,450,450,906,450,,,,906,906,906,906,,906,906,,,,906,906,627',
'627,627,627,627,627,906,,906,627,627,,,,627,,627,627,627,627,627,627',
'627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,627,627,,627,627,627',
'627,627,627,627,627,627,,627,627,627,,627,627,627,627,627,454,454,454',
'454,454,454,454,,,454,454,,,,,,454,454,,627,,,627,,,627,627,,,627,,627',
'454,,454,627,454,454,454,454,454,454,454,627,454,,,,627,627,627,627',
',627,627,,,,627,627,620,620,620,620,620,620,627,,627,620,620,,,,620',
',620,620,620,620,620,620,620,,,,,,620,620,620,620,620,620,620,,,620',
',,,,,620,620,,620,620,620,620,620,620,620,620,620,,620,620,620,,620',
'620,620,620,620,440,,,,,,,,,,,,,,,,440,440,,620,,,620,,,620,620,,,620',
',620,440,,440,620,440,440,440,440,,,,620,,,,,620,620,620,620,,620,620',
',,,620,620,54,54,54,54,54,54,620,,620,54,54,,,,54,,54,54,54,54,54,54',
'54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,54,54,,54,54,54,54,54,54,54,54',
'54,,54,54,54,,54,54,54,54,54,439,,,,,,,,,,,,,,,,439,439,,54,,,54,,,54',
'54,,,54,,54,439,,439,54,439,439,439,439,,,,54,,,,,54,54,54,54,,54,54',
',,,54,54,900,900,900,900,900,900,54,,54,900,900,,,,900,,900,900,900',
'900,900,900,900,,,,,,900,900,900,900,900,900,900,,,900,,,,,,900,900',
',900,900,900,900,900,900,900,900,900,,900,900,900,,900,900,900,900,900',
'441,,,,,,,,,,,,,,,,441,441,,900,,,900,,,900,900,,,900,,900,441,,,900',
'441,441,441,441,,,,900,,,,,900,900,900,900,,900,900,,,,900,900,0,0,0',
'0,0,0,900,,900,0,0,,,,0,,0,0,0,0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,,,,,0',
'0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,0,,,0,,,0',
'0,,,0,,0,,,,0,,,,,,,,0,,,,,0,0,0,0,,0,0,,,,0,0,,816,816,816,,816,0,',
'0,816,816,,,,816,,816,816,816,816,816,816,816,,,,,,816,816,816,816,816',
'816,816,,,816,,,,,,,816,,,816,816,816,816,816,816,816,816,816,816,816',
'816,,816,816,816,816,816,,,,,,,,,,,,,,,,,,,,816,,,816,,,816,816,,,816',
',,,816,,816,,,,,,,,816,,,,,816,816,816,816,,816,816,,,,816,816,,43,43',
'43,,43,816,,816,43,43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43,43,43,43',
'43,43,,,43,,,,,,,43,,,43,43,43,43,43,43,43,43,,43,43,43,,43,43,43,43',
'43,,,,,,,,,,,,,,,,,,,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,,43,,,,,43',
'43,43,43,,43,43,,,,43,43,,56,56,56,,56,43,,43,56,56,,,,56,,56,56,56',
'56,56,56,56,,,,,,56,56,56,56,56,56,56,,,56,,,,,,,56,,,56,56,56,56,56',
'56,56,56,56,56,56,56,,56,56,56,56,56,,,,,,,,,,,,,,,,,,,,56,,,56,,,56',
'56,,,56,,56,,,,56,,,,,,,,56,,,,,56,56,56,56,,56,56,,,,56,56,,57,57,57',
',57,56,,56,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57',
'57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,57,57,57,57,57,,57,57,57,57',
'57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,57,,,57,,,,,,57,,,,,,,,57,,,,,57',
'57,57,57,,57,57,,,,57,57,,607,607,607,,607,57,,57,607,607,,,,607,,607',
'607,607,607,607,607,607,,,,,,607,607,607,607,607,607,607,,,607,,,,,',
',607,,,607,607,607,607,607,607,607,607,,607,607,607,,607,607,607,607',
'607,,,,,,,,,,,,,,,,,,,,607,,,607,,,607,607,,,607,,,,,,607,,,,,,,,607',
',,,,607,607,607,607,,607,607,,,,607,607,,60,60,60,,60,607,,607,60,60',
',,,60,,60,60,60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60,,,,,,,60',
',,60,60,60,60,60,60,60,60,,60,60,60,,60,60,60,60,60,,,,,,,,,,,,,,,,',
',,,60,,,60,,,60,60,,,60,,,,,,60,,,,,,,,60,,,,,60,60,60,60,,60,60,,,',
'60,60,,61,61,61,,61,60,,60,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61',
'61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61,61,61,61,61,61,,61,61,61',
',61,61,61,61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,61,,,61,,,,,,61,,,,',
',,,61,,,,,61,61,61,61,,61,61,,,,61,61,,64,64,64,,64,61,,61,64,64,,,',
'64,,64,64,64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,615,,64',
',,64,64,64,64,64,64,64,64,,64,64,64,,64,64,64,64,64,615,615,615,615',
'615,615,615,615,615,615,615,,615,615,,,615,615,,64,,,64,,,64,64,,,64',
',,615,,615,64,615,615,615,615,615,615,615,64,615,,,,64,64,64,64,,64',
'64,,,,64,64,64,615,,,,64,64,,64,65,65,65,,65,,,,65,65,,,,65,,65,65,65',
'65,65,65,65,,,,,,65,65,65,65,65,65,65,,,65,,,,,,,65,,,65,65,65,65,65',
'65,65,65,,65,65,65,,65,65,,566,65,566,566,566,,566,,,,,,,,,,,,,,,65',
',,65,,,65,65,,,65,,65,,,,566,566,,,,,,,,566,566,566,566,65,65,65,65',
',65,65,,,,65,65,,66,66,66,,66,65,,65,66,66,,,,66,,66,66,66,66,66,66',
'66,,,,,,66,66,66,66,66,66,66,,,66,,,,,,,66,,,66,66,66,66,66,66,66,66',
',66,66,66,,66,66,,,66,,,,,,,,,,,,,,,,,66,,,66,,,66,,,66,66,,,66,,,,',
',,,,,,,,,,,,,,66,66,66,66,,66,66,,,,66,66,,67,67,67,,67,66,,66,67,67',
',,,67,,67,67,67,67,67,67,67,,,,,,67,67,67,67,67,67,67,,,67,,,,,,,67',
',,67,67,67,67,67,67,67,67,,67,67,67,,67,67,,,67,,,,,,,,,,,,,,,,,,,,67',
',,67,,,67,67,,,67,,,,,,,,,,,,,,,,,,,67,67,67,67,,67,67,,,,67,67,,727',
'727,727,,727,67,,67,727,727,,,,727,,727,727,727,727,727,727,727,,,,',
',727,727,727,727,727,727,727,,,727,,,,,,,727,,,727,727,727,727,727,727',
'727,727,,727,727,727,,727,727,727,727,727,,,,,,,,,,,,,,,,,,,,727,,,727',
',,727,727,,,727,,,,,,727,,,,,,,,727,,,,,727,727,727,727,,727,727,,,',
'727,727,,606,606,606,,606,727,,727,606,606,,,,606,,606,606,606,606,606',
'606,606,,,,,,606,606,606,606,606,606,606,,,606,,,,,,,606,,,606,606,606',
'606,606,606,606,606,,606,606,606,,606,606,606,606,606,,,,,,,,,,,,,,',
',,,,,606,,,606,,,606,606,,,606,,,,,,606,,,,,,,,606,,,,,606,606,606,606',
',606,606,,,,606,606,,42,42,42,,42,606,,606,42,42,,,,42,,42,42,42,42',
'42,42,42,,,,,,42,42,42,42,42,42,42,,,42,,,,,,,42,,,42,42,42,42,42,42',
'42,42,,42,42,42,,42,42,42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42,',
',42,,,,,,42,,,,,,,,42,,,,,42,42,42,42,,42,42,,,,42,42,,41,41,41,,41',
'42,,42,41,41,,,,41,,41,41,41,41,41,41,41,,,,,,41,41,41,41,41,41,41,',
',41,,,,,,,41,,,41,41,41,41,41,41,41,41,,41,41,41,,41,41,41,41,41,,,',
',,,,,,,,,,,,,,,,41,,,41,,,41,41,,,41,,,,,,41,,,,,,,,41,,,,,41,41,41',
'41,,41,41,,,,41,41,,603,603,603,,603,41,,41,603,603,,,,603,,603,603',
'603,603,603,603,603,,,,,,603,603,603,603,603,603,603,,,603,,,,,,,603',
',,603,603,603,603,603,603,603,603,,603,603,603,,603,603,603,603,603',
',,,,,,,,,,,,,,,,,,,603,,,603,,,603,603,,,603,,,,,,603,,,,,,,,603,,,',
',603,603,603,603,,603,603,,,,603,603,,103,103,103,103,103,603,,603,103',
'103,,,,103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103,103',
'103,,,103,,,,,,103,103,103,103,103,103,103,103,103,103,103,103,,103',
'103,103,,103,103,103,103,103,733,733,733,733,733,733,733,733,733,733',
'733,,733,733,,,733,733,,103,,,103,,,103,103,,,103,,103,733,,733,103',
'733,733,733,733,733,733,733,103,733,,,,103,103,103,103,,103,103,,,,103',
'103,,733,,,,103,103,,103,108,108,108,,108,,,,108,108,,,,108,,108,108',
'108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,,,108',
',,108,108,108,108,108,108,108,108,,108,108,108,,108,108,108,108,108',
',,,,,,,,,,,,,,,,,,,108,,,108,,,108,108,,,108,,,,,,108,,,,,,,,108,,,',
',108,108,108,108,,108,108,,,,108,108,,109,109,109,,109,108,,108,109',
'109,,,,109,,109,109,109,109,109,109,109,,,,,,109,109,109,109,109,109',
'109,,,109,,,,,,,109,,,109,109,109,109,109,109,109,109,,109,109,109,',
'109,109,109,109,109,,,,,,,,,,,,,,,,,,,,109,,,109,,,109,109,,,109,,,',
',,109,,,,,,,,109,,,,,109,109,109,109,,109,109,,,,109,109,,110,110,110',
',110,109,,109,110,110,,,,110,,110,110,110,110,110,110,110,,,,,,110,110',
'110,110,110,110,110,,,110,,,,,,,110,,,110,110,110,110,110,110,110,110',
',110,110,110,,110,110,110,110,110,,,,,,,,,,,,,,,,,,,,110,,,110,,,110',
'110,,,110,,,,,,110,,,,,,,,110,,,,,110,110,110,110,,110,110,,,,110,110',
',111,111,111,,111,110,,110,111,111,,,,111,,111,111,111,111,111,111,111',
',,,,,111,111,111,111,111,111,111,,,111,,,,,,,111,,,111,111,111,111,111',
'111,111,111,,111,111,111,,111,111,111,111,111,,,,,,,,,,,,,,,,,,,,111',
',,111,,,111,111,,,111,,,,,,111,,,,,,,,111,,,,,111,111,111,111,,111,111',
',,,111,111,,112,112,112,112,112,111,,111,112,112,,,,112,,112,112,112',
'112,112,112,112,,,,,,112,112,112,112,112,112,112,,,112,,,,,,112,112',
',112,112,112,112,112,112,112,112,112,,112,112,112,,112,112,112,112,112',
',,,,,,,,,,,,,,,,,,,112,,,112,,,112,112,,,112,,112,,,,112,,,,,,,,112',
',,,,112,112,112,112,,112,112,,,,112,112,,602,602,602,,602,112,,112,602',
'602,,,,602,,602,602,602,602,602,602,602,,,,,,602,602,602,602,602,602',
'602,,,602,,,,,,,602,,,602,602,602,602,602,602,602,602,,602,602,602,',
'602,602,602,602,602,,,,,,,,,,,,,,,,,,,,602,,,602,,,602,602,,,602,,,',
',,602,,,,,,,,602,,,,,602,602,602,602,,602,602,,,,602,602,,725,725,725',
',725,602,,602,725,725,,,,725,,725,725,725,725,725,725,725,,,,,,725,725',
'725,725,725,725,725,,,725,,,,,,,725,,,725,725,725,725,725,725,725,725',
',725,725,725,,725,725,725,725,725,,,,,,,,,,,,,,,,,,,,725,,,725,,,725',
'725,,,725,,,,,,725,,,,,,,,725,,,,,725,725,725,725,,725,725,,,,725,725',
',598,598,598,,598,725,,725,598,598,,,,598,,598,598,598,598,598,598,598',
',,,,,598,598,598,598,598,598,598,,,598,,,,,,,598,,,598,598,598,598,598',
'598,598,598,,598,598,598,,598,598,598,598,598,,,,,,,,,,,,,,,,,,,,598',
',,598,,,598,598,,,598,,,,,,598,,,,,,,,598,,,,,598,598,598,598,,598,598',
',,,598,598,,597,597,597,,597,598,,598,597,597,,,,597,,597,597,597,597',
'597,597,597,,,,,,597,597,597,597,597,597,597,,,597,,,,,,,597,,,597,597',
'597,597,597,597,597,597,,597,597,597,,597,597,597,597,597,,,,,,,,,,',
',,,,,,,,,597,,,597,,,597,597,,,597,,,,,,597,,,,,,,,597,,,,,597,597,597',
'597,,597,597,,,,597,597,,198,198,198,,198,597,,597,198,198,,,,198,,198',
'198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,',
',198,,,198,198,198,198,198,198,198,198,,198,198,198,,198,198,198,198',
'198,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,198,,,198,,198,,,,198,,,,,,,',
'198,,,,,198,198,198,198,,198,198,,,,198,198,,199,199,199,,199,198,,198',
'199,199,,,,199,,199,199,199,199,199,199,199,,,,,,199,199,199,199,199',
'199,199,,,199,,,,,,,199,,,199,199,199,199,199,199,199,199,,199,199,199',
',199,199,199,199,199,,,,,,,,,,,,,,,,,,,,199,,,199,,,199,199,,,199,,',
',,,199,,,,,,,,199,,,,,199,199,199,199,,199,199,,,,199,199,,200,200,200',
',200,199,,199,200,200,,,,200,,200,200,200,200,200,200,200,,,,,,200,200',
'200,200,200,200,200,,,200,,,,,,,200,,,200,200,200,200,200,200,200,200',
'200,200,200,200,,200,200,200,200,200,,,,,,,,,,,,,,,,,,,,200,,,200,,',
'200,200,,,200,,200,,200,,200,,,,,,,,200,,,,,200,200,200,200,,200,200',
',,,200,200,,596,596,596,,596,200,,200,596,596,,,,596,,596,596,596,596',
'596,596,596,,,,,,596,596,596,596,596,596,596,,,596,,,,,,,596,,,596,596',
'596,596,596,596,596,596,596,596,596,596,,596,596,596,596,596,,,,,,,',
',,,,,,,,,,,,596,,,596,,,596,596,,,596,,,,596,,596,,,,,,,,596,,,,,596',
'596,596,596,,596,596,,,,596,596,,595,595,595,,595,596,,596,595,595,',
',,595,,595,595,595,595,595,595,595,,,,,,595,595,595,595,595,595,595',
',,595,,,,,,,595,,,595,595,595,595,595,595,595,595,595,595,595,595,,595',
'595,595,595,595,,,,,,,,,,,,,,,,,,,,595,,,595,,,595,595,,,595,,595,,595',
',595,,,,,,,,595,,,,,595,595,595,595,,595,595,,,,595,595,,203,203,203',
',203,595,,595,203,203,,,,203,,203,203,203,203,203,203,203,,,,,,203,203',
'203,203,203,203,203,,,203,,,,,,,203,,,203,203,203,203,203,203,203,203',
',203,203,203,,203,203,203,203,203,,,,,,,,,,,,,,,,,,,,203,,,203,,,203',
'203,,,203,,,,,,203,,,,,,,,203,,,,,203,203,203,203,,203,203,,,,203,203',
',204,204,204,,204,203,,203,204,204,,,,204,,204,204,204,204,204,204,204',
',,,,,204,204,204,204,204,204,204,,,204,,,,,,,204,,,204,204,204,204,204',
'204,204,204,,204,204,204,,204,204,204,204,204,,,,,,,,,,,,,,,,,,,,204',
',,204,,,204,204,,,204,,204,,,,204,,,,,,,,204,,,,,204,204,204,204,,204',
'204,,,,204,204,,205,205,205,,205,204,,204,205,205,,,,205,,205,205,205',
'205,205,205,205,,,,,,205,205,205,205,205,205,205,,,205,,,,,,,205,,,205',
'205,205,205,205,205,205,205,,205,205,205,,205,205,205,205,205,,,,,,',
',,,,,,,,,,,,,205,,,205,,,205,205,,,205,,,,,,205,,,,,,,,205,,,,,205,205',
'205,205,,205,205,,,,205,205,,206,206,206,,206,205,,205,206,206,,,,206',
',206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206,,,206',
',,,,,,206,,,206,206,206,206,206,206,206,206,,206,206,206,,206,206,206',
'206,206,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,206,,,206,,,,,,206,,,,,,',
',206,,,,,206,206,206,206,,206,206,,,,206,206,,207,207,207,,207,206,',
'206,207,207,,,,207,,207,207,207,207,207,207,207,,,,,,207,207,207,207',
'207,207,207,,,207,,,,,,,207,,,207,207,207,207,207,207,207,207,,207,207',
'207,,207,207,207,207,207,,,,,,,,,,,,,,,,,,,,207,,,207,,,207,207,,,207',
',,,,,207,,,,,,,,207,,,,,207,207,207,207,,207,207,,,,207,207,,208,208',
'208,,208,207,,207,208,208,,,,208,,208,208,208,208,208,208,208,,,,,,208',
'208,208,208,208,208,208,,,208,,,,,,,208,,,208,208,208,208,208,208,208',
'208,,208,208,208,,208,208,208,208,208,,,,,,,,,,,,,,,,,,,,208,,,208,',
',208,208,,,208,,,,,,208,,,,,,,,208,,,,,208,208,208,208,,208,208,,,,208',
'208,208,592,592,592,,592,208,,208,592,592,,,,592,,592,592,592,592,592',
'592,592,,,,,,592,592,592,592,592,592,592,,,592,,,,,,,592,,,592,592,592',
'592,592,592,592,592,,592,592,592,,592,592,592,592,592,,,,,,,,,,,,,,',
',,,,,592,,,592,,,592,592,,,592,,,,,,592,,,,,,,,592,,,,,592,592,592,592',
',592,592,,,,592,592,,591,591,591,,591,592,,592,591,591,,,,591,,591,591',
'591,591,591,591,591,,,,,,591,591,591,591,591,591,591,,,591,,,,,,,591',
',,591,591,591,591,591,591,591,591,,591,591,591,,591,591,591,591,591',
',,,,,,,,,,,,,,,,,,,591,,,591,,,591,591,,,591,,591,,,,591,,,,,,,,591',
',,,,591,591,591,591,,591,591,,,,591,591,,5,5,5,5,5,591,,591,5,5,,,,5',
',5,5,5,5,5,5,5,,,,,,5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,',
'5,5,5,,5,5,5,5,5,,,,,,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,5',
',,,,5,5,5,5,,5,5,,,,5,5,,327,327,327,,327,5,,5,327,327,,,,327,,327,327',
'327,327,327,327,327,,,,,,327,327,327,327,327,327,327,,,327,,,,,,,327',
',,327,327,327,327,327,327,327,327,,327,327,327,,327,327,327,327,327',
',,,,,,,,,,,,,,,,,,,327,,,327,,,327,327,,,327,,,,,,327,,,,,,,,327,,,',
',327,327,327,327,,327,327,,,,327,327,,633,633,633,,633,327,,327,633',
'633,,,,633,,633,633,633,633,633,633,633,,,,,,633,633,633,633,633,633',
'633,,,633,,,,,,,633,,,633,633,633,633,633,633,633,633,,633,633,633,',
'633,633,633,633,633,,,,,,,,,,,,,,,,,,,,633,,,633,,,633,633,,,633,,,',
',,633,,,,,,,,633,,,,,633,633,633,633,,633,633,,,,633,633,,638,638,638',
',638,633,,633,638,638,,,,638,,638,638,638,638,638,638,638,,,,,,638,638',
'638,638,638,638,638,,,638,,,,,,,638,,,638,638,638,638,638,638,638,638',
',638,638,638,,638,638,,,638,,,,,,,,,,,,,,,,,,,,638,,,638,,,638,638,',
',638,,,,,,,,,,,,,,,,,,,638,638,638,638,,638,638,,,,638,638,,888,888',
'888,,888,638,,638,888,888,,,,888,,888,888,888,888,888,888,888,,,,,,888',
'888,888,888,888,888,888,,,888,,,,,,,888,,,888,888,888,888,888,888,888',
'888,888,888,888,888,,888,888,888,888,888,,,,,,,,,,,,,,,,,,,,888,,,888',
',,888,888,,,888,,888,,888,,888,,,,,,,,888,,,,,888,888,888,888,,888,888',
',,,888,888,,219,219,219,,219,888,,888,219,219,,,,219,,219,219,219,219',
'219,219,219,,,,,,219,219,219,219,219,219,219,,,219,,,,,,,219,,,219,219',
'219,219,219,219,219,219,,219,219,219,,219,219,219,219,219,,,,,,,,,,',
',,,,,,,,,219,,,219,,,219,219,,,219,,,,,,219,,,,,,,,219,,,,,219,219,219',
'219,,219,219,,,,219,219,,20,20,20,,20,219,,219,20,20,,,,20,,20,20,20',
'20,20,20,20,,,,,,20,20,20,20,20,20,20,,,20,,,,,,,20,,,20,20,20,20,20',
'20,20,20,,20,20,20,,20,20,20,20,20,,,,,,,,,,,,,,,,,,,,20,,,20,,,20,20',
',,20,,,,,,20,,,,,,,,20,,,,,20,20,20,20,,20,20,,,,20,20,,562,562,562',
',562,20,,20,562,562,,,,562,,562,562,562,562,562,562,562,,,,,,562,562',
'562,562,562,562,562,,,562,,,,,,,562,,,562,562,562,562,562,562,562,562',
',562,562,562,,562,562,562,562,562,,,,,,,,,,,,,,,,,,,,562,,,562,,,562',
'562,,,562,,,,,,562,,,,,,,,562,,,,,562,562,562,562,,562,562,,,,562,562',
',222,222,222,,222,562,,562,222,222,,,,222,,222,222,222,222,222,222,222',
',,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222,222,222,222',
'222,222,222,,222,222,222,,222,222,222,222,222,,,,,,,,,,,,,,,,,,,,222',
',,222,,,222,222,,,222,,,,,,222,,,,,,,,222,,,,,222,222,222,222,,222,222',
',,,222,222,,223,223,223,,223,222,,222,223,223,,,,223,,223,223,223,223',
'223,223,223,,,,,,223,223,223,223,223,223,223,,,223,,,,,,,223,,,223,223',
'223,223,223,223,223,223,,223,223,223,,223,223,223,223,223,,,,,,,,,,',
',,,,,,,,,223,,,223,,,223,223,,,223,,,,,,223,,,,,,,,223,,,,,223,223,223',
'223,,223,223,,,,223,223,,224,224,224,,224,223,,223,224,224,,,,224,,224',
'224,224,224,224,224,224,,,,,,224,224,224,224,224,224,224,,,224,,,,,',
',224,,,224,224,224,224,224,224,224,224,,224,224,224,,224,224,224,224',
'224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,224,,,224,,,,,,224,,,,,,,,224',
',,,,224,224,224,224,,224,224,,,,224,224,,225,225,225,,225,224,,224,225',
'225,,,,225,,225,225,225,225,225,225,225,,,,,,225,225,225,225,225,225',
'225,,,225,,,,,,,225,,,225,225,225,225,225,225,225,225,,225,225,225,',
'225,225,225,225,225,,,,,,,,,,,,,,,,,,,,225,,,225,,,225,225,,,225,,,',
',,225,,,,,,,,225,,,,,225,225,225,225,,225,225,,,,225,225,,226,226,226',
',226,225,,225,226,226,,,,226,,226,226,226,226,226,226,226,,,,,,226,226',
'226,226,226,226,226,,,226,,,,,,,226,,,226,226,226,226,226,226,226,226',
',226,226,226,,226,226,226,226,226,,,,,,,,,,,,,,,,,,,,226,,,226,,,226',
'226,,,226,,,,,,226,,,,,,,,226,,,,,226,226,226,226,,226,226,,,,226,226',
',227,227,227,,227,226,,226,227,227,,,,227,,227,227,227,227,227,227,227',
',,,,,227,227,227,227,227,227,227,,,227,,,,,,,227,,,227,227,227,227,227',
'227,227,227,,227,227,227,,227,227,227,227,227,,,,,,,,,,,,,,,,,,,,227',
',,227,,,227,227,,,227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,,227,227',
',,,227,227,,228,228,228,,228,227,,227,228,228,,,,228,,228,228,228,228',
'228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228',
'228,228,228,228,228,228,,228,228,228,,228,228,228,228,228,,,,,,,,,,',
',,,,,,,,,228,,,228,,,228,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228',
'228,,228,228,,,,228,228,,229,229,229,,229,228,,228,229,229,,,,229,,229',
'229,229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,',
',229,,,229,229,229,229,229,229,229,229,,229,229,229,,229,229,229,229',
'229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,229,,,229,,,,,,229,,,,,,,,229',
',,,,229,229,229,229,,229,229,,,,229,229,,230,230,230,,230,229,,229,230',
'230,,,,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230',
'230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,230,,230,230,230,',
'230,230,230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,230,,,230,,,',
',,230,,,,,,,,230,,,,,230,230,230,230,,230,230,,,,230,230,,231,231,231',
',231,230,,230,231,231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231',
'231,231,231,231,231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231',
',231,231,231,,231,231,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231',
'231,,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,,231,231,,,,231,231',
',232,232,232,,232,231,,231,232,232,,,,232,,232,232,232,232,232,232,232',
',,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232',
'232,232,232,,232,232,232,,232,232,232,232,232,,,,,,,,,,,,,,,,,,,,232',
',,232,,,232,232,,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232,,232,232',
',,,232,232,,233,233,233,,233,232,,232,233,233,,,,233,,233,233,233,233',
'233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233',
'233,233,233,233,233,233,,233,233,233,,233,233,233,233,233,,,,,,,,,,',
',,,,,,,,,233,,,233,,,233,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233',
'233,,233,233,,,,233,233,,234,234,234,,234,233,,233,234,234,,,,234,,234',
'234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,',
',234,,,234,234,234,234,234,234,234,234,,234,234,234,,234,234,234,234',
'234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,234,,,234,,,,,,234,,,,,,,,234',
',,,,234,234,234,234,,234,234,,,,234,234,,235,235,235,,235,234,,234,235',
'235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235,235,235',
'235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,235,,235,235,235,',
'235,235,235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235,,,235,,,',
',,235,,,,,,,,235,,,,,235,235,235,235,,235,235,,,,235,235,,236,236,236',
',236,235,,235,236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236',
'236,236,236,236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236',
',236,236,236,,236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236',
'236,,,236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,,236,236,,,,236,236',
',237,237,237,,237,236,,236,237,237,,,,237,,237,237,237,237,237,237,237',
',,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237',
'237,237,237,,237,237,237,,237,237,237,237,237,,,,,,,,,,,,,,,,,,,,237',
',,237,,,237,237,,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,,237,237',
',,,237,237,,238,238,238,,238,237,,237,238,238,,,,238,,238,238,238,238',
'238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238',
'238,238,238,238,238,238,,238,238,238,,238,238,238,238,238,,,,,,,,,,',
',,,,,,,,,238,,,238,,,238,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238',
'238,,238,238,,,,238,238,,239,239,239,,239,238,,238,239,239,,,,239,,239',
'239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,',
',239,,,239,239,239,239,239,239,239,239,,239,239,239,,239,239,239,239',
'239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,239,,,239,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,,239,239,,,,239,239,,240,240,240,,240,239,,239,240',
'240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240,240,240',
'240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,240,,240,240,240,',
'240,240,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,240,,,240,,,',
',,240,,,,,,,,240,,,,,240,240,240,240,,240,240,,,,240,240,,241,241,241',
',241,240,,240,241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241',
'241,241,241,241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241',
',241,241,241,,241,241,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241',
'241,,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,,241,241,,,,241,241',
',242,242,242,,242,241,,241,242,242,,,,242,,242,242,242,242,242,242,242',
',,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242',
'242,242,242,,242,242,242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242',
',,242,,,242,242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,,242,242',
',,,242,242,,243,243,243,,243,242,,242,243,243,,,,243,,243,243,243,243',
'243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243',
'243,243,243,243,243,243,,243,243,243,,243,243,243,243,243,,,,,,,,,,',
',,,,,,,,,243,,,243,,,243,243,,,243,,,,,,243,,,,,,,,243,,,,,243,243,243',
'243,,243,243,,,,243,243,,244,244,244,,244,243,,243,244,244,,,,244,,244',
'244,244,244,244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,',
',244,,,244,244,244,244,244,244,244,244,,244,244,244,,244,244,244,244',
'244,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,244,,,244,,,,,,244,,,,,,,,244',
',,,,244,244,244,244,,244,244,,,,244,244,,245,245,245,,245,244,,244,245',
'245,,,,245,,245,245,245,245,245,245,245,,,,,,245,245,245,245,245,245',
'245,,,245,,,,,,,245,,,245,245,245,245,245,245,245,245,,245,245,245,',
'245,245,245,245,245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245,,,245,,,',
',,245,,,,,,,,245,,,,,245,245,245,245,,245,245,,,,245,245,,246,246,246',
',246,245,,245,246,246,,,,246,,246,246,246,246,246,246,246,,,,,,246,246',
'246,246,246,246,246,,,246,,,,,,,246,,,246,246,246,246,246,246,246,246',
',246,246,246,,246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246',
'246,,,246,,,,,,246,,,,,,,,246,,,,,246,246,246,246,,246,246,,,,246,246',
',247,247,247,,247,246,,246,247,247,,,,247,,247,247,247,247,247,247,247',
',,,,,247,247,247,247,247,247,247,,,247,,,,,,,247,,,247,247,247,247,247',
'247,247,247,,247,247,247,,247,247,247,247,247,,,,,,,,,,,,,,,,,,,,247',
',,247,,,247,247,,,247,,,,,,247,,,,,,,,247,,,,,247,247,247,247,,247,247',
',,,247,247,,559,559,559,,559,247,,247,559,559,,,,559,,559,559,559,559',
'559,559,559,,,,,,559,559,559,559,559,559,559,,,559,,,,,,,559,,,559,559',
'559,559,559,559,559,559,559,559,559,559,,559,559,559,559,559,,,,,,,',
',,,,,,,,,,,,559,,,559,,,559,559,,,559,,559,,559,,559,,,,,,,,559,,,,',
'559,559,559,559,,559,559,,,,559,559,,363,363,363,,363,559,,559,363,363',
',,,363,,363,363,363,363,363,363,363,,,,,,363,363,363,363,363,363,363',
',,363,,,,,,,363,,,363,363,363,363,363,363,363,363,,363,363,363,,363',
'363,363,363,363,,,,,,,,,,,,,,,,,,,,363,,,363,,,363,363,,,363,,,,,,363',
',,,,,,,363,,,,,363,363,363,363,,363,363,,,,363,363,,549,549,549,,549',
'363,,363,549,549,,,,549,,549,549,549,549,549,549,549,,,,,,549,549,549',
'549,549,549,549,,,549,,,,,,,549,,,549,549,549,549,549,549,549,549,549',
'549,549,549,,549,549,549,549,549,,,,,,,,,,,,,,,,,,,,549,,,549,,,549',
'549,,,549,,549,,549,,549,,,,,,,,549,,,,,549,549,549,549,,549,549,,,',
'549,549,,253,253,253,,253,549,,549,253,253,,,,253,,253,253,253,253,253',
'253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,253',
'253,253,253,253,253,253,253,253,253,,253,253,253,253,253,,,,,,,,,,,',
',,,,,,,,253,,,253,,,253,253,,,253,,253,,253,,253,,,,,,,,253,,,,,253',
'253,253,253,,253,253,,,,253,253,,254,254,254,,254,253,,253,254,254,',
',,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254,254,254,254',
',,254,,,,,,,254,,,254,254,254,254,254,254,254,254,254,254,254,254,,254',
'254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,254,,,254,,254,,254',
',254,,,,,,,,254,,,,,254,254,254,254,,254,254,,,,254,254,,262,262,262',
',262,254,,254,262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262',
'262,262,262,262,262,,,262,,,,,,,262,,,262,262,262,262,262,262,262,262',
'262,262,262,262,,262,262,262,262,262,,,,,,,,,,,,,,,,,,,,262,,,262,,',
'262,262,,,262,,262,,262,,262,,,,,,,,262,,,,,262,262,262,262,,262,262',
',,,262,262,262,548,548,548,,548,262,,262,548,548,,,,548,,548,548,548',
'548,548,548,548,,,,,,548,548,548,548,548,548,548,,,548,,,,,,,548,,,548',
'548,548,548,548,548,548,548,,548,548,548,,548,548,548,548,548,,,,,,',
',,,,,,,,,,,,,548,,,548,,,548,548,,,548,,548,,,,548,,,,,,,,548,,,,,548',
'548,548,548,,548,548,,,,548,548,,426,426,426,,426,548,,548,426,426,',
',,426,,426,426,426,426,426,426,426,,,,,,426,426,426,426,426,426,426',
',,426,,,,,,,426,,,426,426,426,426,426,426,426,426,426,426,426,426,,426',
'426,426,426,426,,,,,,,,,,,,,,,,,,,,426,,,426,,,426,426,,,426,,426,,426',
',426,,,,,,,,426,,,,,426,426,426,426,,426,426,,,,426,426,,428,428,428',
',428,426,,426,428,428,,,,428,,428,428,428,428,428,428,428,,,,,,428,428',
'428,428,428,428,428,,,428,,,,,,,428,,,428,428,428,428,428,428,428,428',
',428,428,428,,428,428,428,428,428,,,,,,,,,,,,,,,,,,,,428,,,428,,,428',
'428,,,428,,,,,,428,,,,,,,,428,,,,,428,428,428,428,,428,428,,,,428,428',
',269,269,269,,269,428,,428,269,269,,,,269,,269,269,269,269,269,269,269',
',,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,269,269,269',
'269,269,269,,269,269,269,,269,269,269,269,269,,,,,,,,,,,,,,,,,,,,269',
',,269,,,269,269,,,269,,,,,,269,,,,,,,,269,,,,,269,269,269,269,,269,269',
',,,269,269,,741,741,741,,741,269,,269,741,741,,,,741,,741,741,741,741',
'741,741,741,,,,,,741,741,741,741,741,741,741,,,741,,,,,,,741,,,741,741',
'741,741,741,741,741,741,,741,741,741,,741,741,741,741,741,,,,,,,,,,',
',,,,,,,,,741,,,741,,,741,741,,,741,,,,,,741,,,,,,,,741,,,,,741,741,741',
'741,,741,741,,,,741,741,,271,271,271,,271,741,,741,271,271,,,,271,,271',
'271,271,271,271,271,271,,,,,,271,271,271,271,271,271,271,,,271,,,,,',
',271,,,271,271,271,271,271,271,271,271,,271,271,271,,271,271,271,271',
'271,,,,,,,,,,,,,,,,,,,,271,,,271,,,271,271,,,271,,,,,,271,,,,,,,,271',
',,,,271,271,271,271,,271,271,,,,271,271,,273,273,273,,273,271,,271,273',
'273,,,,273,,273,273,273,273,273,273,273,,,,,,273,273,273,273,273,273',
'273,,,273,,,,,,,273,,,273,273,273,273,273,273,273,273,,273,273,273,',
'273,273,273,273,273,,,,,,,,,,,,,,,,,,,,273,,,273,,,273,273,,,273,,,',
',,273,,,,,,,,273,,,,,273,273,273,273,,273,273,,,,273,273,,742,742,742',
',742,273,,273,742,742,,,,742,,742,742,742,742,742,742,742,,,,,,742,742',
'742,742,742,742,742,,,742,,,,,,,742,,,742,742,742,742,742,742,742,742',
',742,742,742,,742,742,742,742,742,,,,,,,,,,,,,,,,,,,,742,,,742,,,742',
'742,,,742,,,,,,742,,,,,,,,742,,,,,742,742,742,742,,742,742,,,,742,742',
',743,743,743,,743,742,,742,743,743,,,,743,,743,743,743,743,743,743,743',
',,,,,743,743,743,743,743,743,743,,,743,,,,,,,743,,,743,743,743,743,743',
'743,743,743,,743,743,743,,743,743,743,743,743,,,,,,,,,,,,,,,,,,,,743',
',,743,,,743,743,,,743,,,,,,743,,,,,,,,743,,,,,743,743,743,743,,743,743',
',,,743,743,,278,278,278,278,278,743,,743,278,278,,,,278,,278,278,278',
'278,278,278,278,,,,,,278,278,278,278,278,278,278,,,278,,,,,,278,278',
',278,278,278,278,278,278,278,278,278,,278,278,278,,278,278,278,278,278',
',,,,,,,,,,,,,,,,,,,278,,,278,,,278,278,,,278,,278,,,,278,,,,,,,,278',
',,,,278,278,278,278,,278,278,,,,278,278,,744,744,744,,744,278,,278,744',
'744,,,,744,,744,744,744,744,744,744,744,,,,,,744,744,744,744,744,744',
'744,,,744,,,,,,,744,,,744,744,744,744,744,744,744,744,,744,744,744,',
'744,744,744,744,744,,,,,,,,,,,,,,,,,,,,744,,,744,,,744,744,,,744,,,',
',,744,,,,,,,,744,,,,,744,744,744,744,,744,744,,,,744,744,,34,34,34,',
'34,744,,744,34,34,,,,34,,34,34,34,34,34,34,34,,,,,,34,34,34,34,34,34',
'34,,,34,,,,,,,34,,,34,34,34,34,34,34,34,34,,34,34,34,,34,34,,,34,740',
'740,740,740,740,740,740,740,740,740,740,,740,740,,,740,740,,34,,,34',
',,34,34,,,34,,,740,,740,,740,740,740,740,740,740,740,,740,,,,34,34,34',
'34,,34,34,,,,34,34,,740,,34,,,34,,34,649,649,649,,649,,,,649,649,,,',
'649,,649,649,649,649,649,649,649,,,,,,649,649,649,649,649,649,649,,',
'649,,,,,,,649,,,649,649,649,649,649,649,649,649,,649,649,649,,649,649',
',,649,,,,,,,,,,,,,,,,,,,,649,,,649,,,649,649,,,649,,,,,,,,,,,,,,,,,',
',649,649,649,649,,649,649,,,,649,649,,429,429,429,,429,649,,649,429',
'429,,,,429,,429,429,429,429,429,429,429,,,,,,429,429,429,429,429,429',
'429,,,429,,,,,,,429,,,429,429,429,429,429,429,429,429,,429,429,429,',
'429,429,429,429,429,,,,,,,,,,,,,,,,,,,,429,,,429,,,429,429,,,429,,,',
',,429,,,,,,,,429,,,,,429,429,429,429,,429,429,,,,429,429,,746,746,746',
',746,429,,429,746,746,,,,746,,746,746,746,746,746,746,746,,,,,,746,746',
'746,746,746,746,746,,,746,,,,,,,746,,,746,746,746,746,746,746,746,746',
',746,746,746,,746,746,746,746,746,,,,,,,,,,,,,,,,,,,,746,,,746,,,746',
'746,,,746,,,,,,746,,,,,,,,746,,,,,746,746,746,746,,746,746,,,,746,746',
',284,284,284,,284,746,,746,284,284,,,,284,,284,284,284,284,284,284,284',
',,,,,284,284,284,284,284,284,284,,,284,,,,,,,284,,,284,284,284,284,284',
'284,284,284,,284,284,284,,284,284,,,284,503,503,503,503,503,503,503',
'503,503,503,503,,503,503,,,503,503,,284,,,284,,,284,284,,,284,,,503',
',503,,503,503,503,503,503,503,503,,503,,,,284,284,284,284,,284,284,',
',,284,284,,503,,284,,,284,,284,33,33,33,,33,,,,33,33,,,,33,,33,33,33',
'33,33,33,33,,,,,,33,33,33,33,33,33,33,,,33,,,,,,,33,,,33,33,33,33,33',
'33,33,33,,33,33,33,,33,33,,,33,,,,,,,,,,,,,,,,,,,,33,,,33,,,33,33,,',
'33,,33,,,,,,,,,,,,,,,,,33,33,33,33,,33,33,,,,33,33,,430,430,430,,430',
'33,,33,430,430,,,,430,,430,430,430,430,430,430,430,,,,,,430,430,430',
'430,430,430,430,,,430,,,,,,,430,,,430,430,430,430,430,430,430,430,,430',
'430,430,,430,430,430,430,430,,,,,,,,,,,,,,,,,,,,430,,,430,,,430,430',
',,430,,,,,,430,,,,,,,,430,,,,,430,430,430,430,,430,430,,,,430,430,,513',
'513,513,,513,430,,430,513,513,,,,513,,513,513,513,513,513,513,513,,',
',,,513,513,513,513,513,513,513,,,513,,,,,,,513,,,513,513,513,513,513',
'513,513,513,513,513,513,513,,513,513,513,513,513,,,,,,,,,,,,,,,,,,,',
'513,,,513,,,513,513,,,513,,,,,,513,,,,,,,,513,,,,,513,513,513,513,,513',
'513,,,,513,513,,510,510,510,,510,513,,513,510,510,,,,510,,510,510,510',
'510,510,510,510,,,,,,510,510,510,510,510,510,510,,,510,,,,,,,510,,,510',
'510,510,510,510,510,510,510,510,510,510,510,,510,510,510,510,510,,,',
',,,,,,,,,,,,,,,,510,,,510,,,510,510,,,510,,510,,,,510,,,,,,,,510,,,',
',510,510,510,510,,510,510,,,,510,510,,506,506,506,,506,510,,510,506',
'506,,,,506,,506,506,506,506,506,506,506,,,,,,506,506,506,506,506,506',
'506,,,506,,,,,,,506,,,506,506,506,506,506,506,506,506,,506,506,506,',
'506,506,506,506,506,,,,,,,,,,,,,,,,,,,,506,,,506,,,506,506,,,506,,506',
',,,506,,,,,,,,506,,,,,506,506,506,506,,506,506,,,,506,506,,504,504,504',
',504,506,,506,504,504,,,,504,,504,504,504,504,504,504,504,,,,,,504,504',
'504,504,504,504,504,,,504,,,,,,,504,,,504,504,504,504,504,504,504,504',
',504,504,504,,504,504,504,504,504,,,,,,,,,,,,,,,,,,,,504,,,504,,,504',
'504,,,504,,,,,,504,,,,,,,,504,,,,,504,504,504,504,,504,504,,,,504,504',
',500,500,500,,500,504,,504,500,500,,,,500,,500,500,500,500,500,500,500',
',,,,,500,500,500,500,500,500,500,,,500,,,,,,,500,,,500,500,500,500,500',
'500,500,500,,500,500,500,,500,500,500,500,500,,,,,,,,,,,,,,,,,,,,500',
',,500,,,500,500,,,500,,,,,,500,,,,,,,,500,,,,,500,500,500,500,,500,500',
',,,500,500,,30,30,30,,30,500,,500,30,30,,,,30,,30,30,30,30,30,30,30',
',,,,,30,30,30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30,30,30,30,30,30',
'30,30,30,,30,30,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,,30,,30',
',30,,30,,,,,,,,30,,,,,30,30,30,30,,30,30,,,,30,30,,499,499,499,,499',
'30,,30,499,499,,,,499,,499,499,499,499,499,499,499,,,,,,499,499,499',
'499,499,499,499,,,499,,,,,,,499,,,499,499,499,499,499,499,499,499,,499',
'499,499,,499,499,499,499,499,,,,,,,,,,,,,,,,,,,,499,,,499,,,499,499',
',,499,,,,,,499,,,,,,,,499,,,,,499,499,499,499,,499,499,,,,499,499,,831',
'831,831,,831,499,,499,831,831,,,,831,,831,831,831,831,831,831,831,,',
',,,831,831,831,831,831,831,831,,,831,,,,,,,831,,,831,831,831,831,831',
'831,831,831,,831,831,831,,831,831,,,831,,,,,,,,,,,,,,,,,,,,831,,,831',
',,831,831,,,831,,,,,,,,,,,,,,,,,,,831,831,831,831,,831,831,,,,831,831',
',498,498,498,,498,831,,831,498,498,,,,498,,498,498,498,498,498,498,498',
',,,,,498,498,498,498,498,498,498,,,498,,,,,,,498,,,498,498,498,498,498',
'498,498,498,,498,498,498,,498,498,498,498,498,,,,,,,,,,,,,,,,,,,,498',
',,498,,,498,498,,,498,,,,,,498,,,,,,,,498,,,,,498,498,498,498,,498,498',
',,,498,498,,495,495,495,,495,498,,498,495,495,,,,495,,495,495,495,495',
'495,495,495,,,,,,495,495,495,495,495,495,495,,,495,,,,,,,495,,,495,495',
'495,495,495,495,495,495,,495,495,495,,495,495,,,495,,,,,,,,,,,,,,,,',
',,,495,,,495,,,495,495,,,495,,,,,,,,,,,,,,,,,,,495,495,495,495,,495',
'495,,,,495,495,,301,301,301,,301,495,,495,301,301,,,,301,,301,301,301',
'301,301,301,301,,,,,,301,301,301,301,301,301,301,,,301,,,,,,,301,,,301',
'301,301,301,301,301,301,301,,301,301,301,,301,301,,,301,,,,,,,,,,,,',
',,,,,,,301,,,301,,,301,301,,,301,,,,,,,,,,,,,,,,,,,301,301,301,301,',
'301,301,,,,301,301,,673,673,673,,673,301,,301,673,673,,,,673,,673,673',
'673,673,673,673,673,,,,,,673,673,673,673,673,673,673,,,673,,,,,,,673',
',,673,673,673,673,673,673,673,673,,673,673,673,,673,673,673,673,673',
',,,,,,,,,,,,,,,,,,,673,,,673,,,673,673,,,673,,,,,,673,,,,,,,,673,,,',
',673,673,673,673,,673,673,,,,673,673,,488,488,488,,488,673,,673,488',
'488,,,,488,,488,488,488,488,488,488,488,,,,,,488,488,488,488,488,488',
'488,,,488,,,,,,,488,,,488,488,488,488,488,488,488,488,488,488,488,488',
',488,488,488,488,488,,,,,,,,,,,,,,,,,,,,488,,,488,,,488,488,,,488,,488',
',488,,488,,,,,,,,488,,,,,488,488,488,488,,488,488,,,,488,488,,486,486',
'486,,486,488,,488,486,486,,,,486,,486,486,486,486,486,486,486,,,,,,486',
'486,486,486,486,486,486,,,486,,,,,,,486,,,486,486,486,486,486,486,486',
'486,,486,486,486,,486,486,,,486,,,,,,,,,,,,,,,,,,,,486,,,486,,,486,486',
',,486,,,,,,,,,,,,,,,,,,,486,486,486,486,,486,486,,,,486,486,,698,698',
'698,,698,486,,486,698,698,,,,698,,698,698,698,698,698,698,698,,,,,,698',
'698,698,698,698,698,698,,,698,,,,,,,698,,,698,698,698,698,698,698,698',
'698,,698,698,698,,698,698,698,698,698,,,,,,,,,,,,,,,,,,,,698,,,698,',
',698,698,,,698,,,,,,698,,,,,,,,698,,,,,698,698,698,698,,698,698,,,,698',
'698,,817,817,817,,817,698,,698,817,817,,,,817,,817,817,817,817,817,817',
'817,,,,,,817,817,817,817,817,817,817,,,817,,,,,,,817,,,817,817,817,817',
'817,817,817,817,,817,817,817,,817,817,817,817,817,,,,,,,,,,,,,,,,,,',
',817,,,817,,,817,817,,,817,,,,,,817,,,,,,,,817,,,,,817,817,817,817,',
'817,817,,,,817,817,,310,310,310,,310,817,,817,310,310,,,,310,,310,310',
'310,310,310,310,310,,,,,,310,310,310,310,310,310,310,,,310,,,,,,,310',
',,310,310,310,310,310,310,310,310,,310,310,310,,310,310,310,310,310',
',,,,,,,,,,,,,,,,,,,310,,,310,310,,310,310,,,310,,,,,,310,,,,,,,,310',
',,,,310,310,310,310,,310,310,,,,310,310,,347,347,347,,347,310,,310,347',
'347,,,,347,,347,347,347,347,347,347,347,,,,,,347,347,347,347,347,347',
'347,,,347,,,,,,,347,,,347,347,347,347,347,347,347,347,,347,347,347,',
'347,347,347,347,347,,,,,,,,,,,,,,,,,,,,347,,,347,,,347,347,,,347,,,',
',,347,,,,,,,,347,,,,,347,347,347,347,,347,347,,,,347,347,,471,471,471',
',471,347,,347,471,471,,,,471,,471,471,471,471,471,471,471,,,,,,471,471',
'471,471,471,471,471,,,471,,,,,,,471,,,471,471,471,471,471,471,471,471',
'471,471,471,471,,471,471,471,471,471,,,,,,,,,,,,,,,,,,,,471,,,471,,',
'471,471,,,471,,471,,471,,471,,,,,,,,471,,,,,471,471,471,471,,471,471',
',,,471,471,,313,313,313,,313,471,,471,313,313,,,,313,,313,313,313,313',
'313,313,313,,,,,,313,313,313,313,313,313,313,,,313,,,,,,,313,,,313,313',
'313,313,313,313,313,313,,313,313,313,,313,313,313,313,313,,,,,,,,,,',
',,,,,,,,,313,,,313,,,313,313,,,313,,,,,,313,,,,,,,,313,,,,,313,313,313',
'313,,313,313,,,,313,313,,29,29,29,,29,313,,313,29,29,,,,29,,29,29,29',
'29,29,29,29,,,,,,29,29,29,29,29,29,29,,,29,,,,,,,29,,,29,29,29,29,29',
'29,29,29,29,29,29,29,,29,29,29,29,29,,,,,,,,,,,,,,,,,,,,29,,,29,,,29',
'29,,,29,,29,,29,,29,,,,,,,,29,,,,,29,29,29,29,,29,29,,,,29,29,,771,771',
'771,,771,29,,29,771,771,,,,771,,771,771,771,771,771,771,771,,,,,,771',
'771,771,771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771,771,771',
'771,,771,771,771,,771,771,,,771,,,,,,,,,,,,,,,,,,,,771,,,771,,,771,771',
',,771,,,,,,,,,,,,,,,,,,,771,771,771,771,,771,771,,,,771,771,,473,473',
'473,,473,771,,771,473,473,,,,473,,473,473,473,473,473,473,473,,,,,,473',
'473,473,473,473,473,473,,,473,,,,,,,473,,,473,473,473,473,473,473,473',
'473,473,473,473,473,,473,473,473,473,473,,,,,,,,,,,,,,,,,,,,473,,,473',
',,473,473,,,473,,,,473,,473,,,,,,,,473,,,,,473,473,473,473,,473,473',
',,,473,473,,28,28,28,,28,473,,473,28,28,,,,28,,28,28,28,28,28,28,28',
',,,,,28,28,28,28,28,28,28,,,28,,,,,,,28,,,28,28,28,28,28,28,28,28,28',
'28,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,28,,,28,,,28,28,,,28,,28',
',28,,28,,,,,,,,28,,,,,28,28,28,28,,28,28,,,,28,28,,799,799,799,,799',
'28,,28,799,799,,,,799,,799,799,799,799,799,799,799,,,,,,799,799,799',
'799,799,799,799,,,799,,,,,,,799,,,799,799,799,799,799,799,799,799,,799',
'799,799,,799,799,799,799,799,,,,,,,,,,,,,,,,,,,,799,,,799,,,799,799',
',,799,,799,,,,799,,,,,,,,799,,,,,799,799,799,799,,799,799,,,,799,799',
',475,475,475,,475,799,,799,475,475,,,,475,,475,475,475,475,475,475,475',
',,,,,475,475,475,475,475,475,475,,,475,,,,,,,475,,,475,475,475,475,475',
'475,475,475,,475,475,475,,475,475,475,475,475,,,,,,,,,,,,,,,,,,,,475',
',,475,,,475,475,,,475,,,,,,475,,,,,,,,475,,,,,475,475,475,475,,475,475',
',,,475,475,,479,479,479,479,479,475,,475,479,479,,,,479,,479,479,479',
'479,479,479,479,,,,,,479,479,479,479,479,479,479,,,479,,,,,,479,479',
',479,479,479,479,479,479,479,479,479,,479,479,479,,479,479,479,479,479',
'818,818,818,818,818,818,818,818,818,818,818,,818,818,,,818,818,,479',
',,479,,,479,479,,,479,,479,818,,818,479,818,818,818,818,818,818,818',
'479,818,,,,479,479,479,479,,479,479,,,,479,479,,818,,,,479,479,,479',
'794,794,794,,794,,,,794,794,,,,794,,794,794,794,794,794,794,794,,,,',
',794,794,794,794,794,794,794,,,794,,,,,,,794,,,794,794,794,794,794,794',
'794,794,,794,794,794,,794,794,794,794,794,,,,,,,,,,,,,,,,,,,,794,,,794',
',,794,794,,,794,,,,,,794,,,,,,,,794,,,,,794,794,794,794,,794,794,,,',
'794,794,,328,328,328,,328,794,,794,328,328,,,,328,,328,328,328,328,328',
'328,328,,,,,,328,328,328,328,328,328,328,,,328,,,,,,,328,,,328,328,328',
'328,328,328,328,328,,328,328,328,,328,328,328,328,328,,,,,,,,,,,,,,',
',,,,,328,,,328,,,328,328,,,328,,,,,,328,,,,,,,,328,,,,,328,328,328,328',
',328,328,,,,328,328,,389,389,389,,389,328,,328,389,389,,,,389,,389,389',
'389,389,389,389,389,,,,,,389,389,389,389,389,389,389,,,389,,,,,,,389',
',,389,389,389,389,389,389,389,389,,389,389,389,,389,389,389,389,389',
'264,264,264,264,264,264,264,264,264,264,264,,264,264,,,264,264,,389',
',,389,,,389,389,,,389,,,264,,264,389,264,264,264,264,264,264,264,389',
'264,,,,389,389,389,389,,389,389,,,,389,389,,264,461,,,,389,,389,461',
'461,461,,,461,461,461,,461,,,,,,,,,,461,,,,,,,,,,461,461,,461,461,461',
'461,461,,,,,,,,,,,,,,,,,,,,,,,399,,,,,,,399,399,399,,461,399,399,399',
',399,,461,,,,,461,461,399,399,399,,,,,,,,,399,399,,399,399,399,399,399',
',,461,,,,,,,,,,,,,,461,,,,,461,399,399,399,399,399,399,399,399,399,399',
'399,399,399,399,,,399,399,399,,,399,,399,399,,,399,399,,399,,399,,399',
',399,399,399,399,399,399,399,26,399,399,399,,,,26,26,26,,,26,26,26,',
'26,399,399,,399,,399,,,26,26,26,,,,,,,,,26,26,,26,26,26,26,26,,,,,,',
',,,,,,,,,,,,,,,,26,26,26,26,26,26,26,26,26,26,26,26,26,26,,,26,26,26',
',,26,,26,26,,,26,26,,26,,26,,26,,26,26,26,26,26,26,26,27,26,26,26,,',
',27,27,27,,,27,27,27,,27,26,26,,26,,26,,,,27,27,,,,,,,,,27,27,,27,27',
'27,27,27,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27',
'27,,,27,27,27,,,27,,27,27,,,27,27,,27,,27,,27,,27,27,27,27,27,27,27',
'458,27,,27,,,,458,458,458,,,458,458,458,,458,27,27,,27,,27,,,,458,,',
',,,,,,,458,458,,458,458,458,458,458,,,,,,424,424,,,424,,,,,,,,424,424',
',424,424,424,424,424,424,424,,,424,424,,,458,424,424,424,424,,,458,',
',424,,458,458,,,,,424,424,,424,424,424,424,424,424,424,424,424,424,424',
',,424,458,,,,,,,,,,,,,,458,,,,,458,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9',
'9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9,,,,,,9,9,9,9,9,9,9,9,9,,,9,,,,',
',,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9,9,,,,,,,,,,,,,,9,9,,9,9,9,9,9,9',
'9,9,9,9,9,,,9,9,,,,,,,,,,,9,380,380,380,380,380,380,380,380,380,380',
'380,380,380,380,380,380,380,380,380,380,380,380,380,380,,,,380,380,380',
'380,380,380,380,380,380,380,,,,,,380,380,380,380,380,380,380,380,380',
',,380,,,,,,,,380,380,,380,380,380,380,380,380,380,,,380,380,,,,380,380',
'380,380,,,,,,,,,,,,,,380,380,,380,380,380,380,380,380,380,380,380,380',
'380,,,380,380,,,,,,,,,,,380,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,,,,8',
'8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8',
'8,8,8,,,8,8,,,,,,,,,,,8,588,588,588,588,588,588,588,588,588,588,588',
'588,588,588,588,588,588,588,588,588,588,588,588,588,,,,588,588,588,588',
'588,588,588,588,588,588,,,,,,588,588,588,588,588,588,588,588,588,,,588',
',,,,,,,588,588,,588,588,588,588,588,588,588,,,588,588,,,,588,588,588',
'588,,,,,,,,,,,,,,588,588,,588,588,588,588,588,588,588,588,588,588,588',
',,588,588,,,,,,,,,,,588,711,711,711,711,711,711,711,711,711,711,711',
'711,711,711,711,711,711,711,711,711,711,711,711,711,,,,711,711,711,711',
'711,711,711,711,711,711,,,,,,711,711,711,711,711,711,711,711,711,,,711',
',,,,,,,711,711,,711,711,711,711,711,711,711,,,711,711,,,,711,711,711',
'711,,,,,,,,,,,,,,711,711,,711,711,711,711,711,711,711,711,711,711,711',
',,711,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68',
'68,68,68,,,,68,68,68,68,68,68,68,68,68,68,,,,,,68,68,68,68,68,68,68',
'68,68,68,68,68,,68,,,,,,68,68,,68,68,68,68,68,68,68,,,68,68,,,,68,68',
'68,68,,,,,,68,,,,,,,,68,68,,68,68,68,68,68,68,68,68,68,68,68,551,551',
'68,,551,,,,,,,,551,551,,551,551,551,551,551,551,551,,,551,551,,,,551',
'551,551,551,,,,,,551,,,,,,,,551,551,,551,551,551,551,551,551,551,551',
'551,551,551,557,557,551,,557,,,,,,,,557,557,,557,557,557,557,557,557',
'557,,,557,557,,,,557,557,557,557,,,,,,557,,,,,,,,557,557,,557,557,557',
'557,557,557,557,557,557,557,557,558,558,557,,558,,,,,,,,558,558,,558',
'558,558,558,558,558,558,,,558,558,,,,558,558,558,558,,,,,,558,,,,,,',
',558,558,,558,558,558,558,558,558,558,558,558,558,558,425,425,558,,425',
',,,,,,,425,425,,425,425,425,425,425,425,425,,,425,425,,,,425,425,425',
'425,,,,,,425,,,,,,,,425,425,,425,425,425,425,425,425,425,425,425,425',
'425,502,502,425,,502,,,,,,,,502,502,,502,502,502,502,502,502,502,,,502',
'502,,,,502,502,502,502,,,,,,502,,,,,,,,502,502,,502,502,502,502,502',
'502,502,502,502,502,502,501,501,502,,501,,,,,,,,501,501,,501,501,501',
'501,501,501,501,,,501,501,,,,501,501,501,501,,,,,,501,,,,,,,,501,501',
',501,501,501,501,501,501,501,501,501,501,501,251,251,501,,251,,,,,,',
',251,251,,251,251,251,251,251,251,251,,,251,251,,,,251,251,251,251,',
',,,,,,,,,,,,251,251,,251,251,251,251,251,251,251,251,251,251,251,250',
'250,251,,250,,,,,,,,250,250,,250,250,250,250,250,250,250,,,250,250,',
',,250,250,250,250,,,,,,,,,,,,,,250,250,,250,250,250,250,250,250,250',
'250,250,250,250,918,918,250,,918,,,,,,,,918,918,,918,918,918,918,918',
'918,918,,,918,918,,,,918,918,918,918,,,,,,918,,,,,,,,918,918,,918,918',
'918,918,918,918,918,918,918,918,918,889,889,918,,889,,,,,,,,889,889',
',889,889,889,889,889,889,889,,,889,889,,,,889,889,889,889,,,,,,889,',
',,,,,,889,889,,889,889,889,889,889,889,889,889,889,889,889,490,490,889',
',490,,,,,,,,490,490,,490,490,490,490,490,490,490,,,490,490,,,,490,490',
'490,490,,,,,,490,,,,,,,,490,490,,490,490,490,490,490,490,490,490,490',
'490,490,489,489,490,,489,,,,,,,,489,489,,489,489,489,489,489,489,489',
',,489,489,,,,489,489,489,489,,,,,,489,,,,,,,,489,489,,489,489,489,489',
'489,489,489,489,489,489,489,890,890,489,,890,,,,,,,,890,890,,890,890',
'890,890,890,890,890,,,890,890,,,,890,890,890,890,,,,,,890,,,,,,,,890',
'890,,890,890,890,890,890,890,890,890,890,890,890,202,202,890,,202,,',
',,,,,202,202,,202,202,202,202,202,202,202,,,202,202,,,,202,202,202,202',
',,,,,202,,,,,,,,202,202,,202,202,202,202,202,202,202,202,202,202,202',
'201,201,202,,201,,,,,,,,201,201,,201,201,201,201,201,201,201,,,201,201',
',,,201,201,201,201,,,,,,201,,,,,,,,201,201,,201,201,201,201,201,201',
'201,201,201,201,201,550,550,201,,550,,,,,,,,550,550,,550,550,550,550',
'550,550,550,,,550,550,,,,550,550,550,550,,,,,,550,,,,,,,,550,550,,550',
'550,550,550,550,550,550,550,550,550,550,,,550,738,738,738,738,738,738',
'738,738,738,738,738,,738,738,,,738,738,,,,,,,,,,,,,,,738,,738,,738,738',
'738,738,738,738,738,,738,,726,726,726,726,726,726,726,726,726,726,726',
',726,726,,738,726,726,,,,,,,,,,,,,,,726,,726,,726,726,726,726,726,726',
'726,,726,,731,731,731,731,731,731,731,731,731,731,731,,731,731,,726',
'731,731,,,,,,,,,,,,,,,731,,731,,731,731,731,731,731,731,731,,731,,411',
'411,411,411,411,411,411,411,411,411,411,,411,411,,731,411,411,,,,,,',
',,,,,,,,411,,411,,411,411,411,411,411,411,411,,411,,21,21,21,21,21,21',
'21,21,21,21,21,,21,21,,411,21,21,,,,,,,,,,,,,,,21,,21,,21,21,21,21,21',
'21,21,,21,,650,650,650,650,650,650,650,650,650,650,650,,650,650,,21',
'650,650,,,,,,,,,,,,,,,650,,650,,650,650,650,650,650,650,650,,650,,456',
'456,456,456,456,456,456,456,456,456,456,,456,456,,650,456,456,,,,,,',
',,,,,,,,456,,456,,456,456,456,456,456,456,456,,456,,736,736,736,736',
'736,736,736,736,736,736,736,,736,736,456,456,736,736,,,,,,,,,,,,,,,736',
',736,,736,736,736,736,736,736,736,,736,,815,815,815,815,815,815,815',
'815,815,815,815,,815,815,,736,815,815,,,,,,,,,,,,,,,815,,815,,815,815',
'815,815,815,815,815,,815,,,,,,,,,,,,,,,,,815' ]
        racc_action_check = arr = ::Array.new(23302, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  4624,  1345,   nil,   624,   nil,  9640,  1637,  1168, 21438, 21190,
  1159,   nil,  1134,  1182,  1398,   425,  1131,   704,   nil,    -8,
 10390, 22990,  1222,   nil,   589,   289, 20842, 20951, 19781, 19406,
 17531,   nil,  3124, 16656, 16015,   nil,  1111,   393,   293,  1181,
   781,  6507,  6382,  4874,  1104,  1550,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,  1246,  4374,   nil,  4999,  5124,     0,   nil,
  5374,  5499,   nil,   nil,  5624,  5757,  5882,  6007, 21798,   nil,
   nil,   nil,   nil,   nil,   495,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   260,   nil,   nil,
   390,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1229,   nil,  6757,   nil,   nil,   nil,   nil,  6890,  7015,
  7140,  7265,  7390,  3749,   nil,    92,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  1045,   nil,  3624,  8015,  8140,
  8265, 22698, 22638,  8640,  8765,  8890,  9015,  9140,  9265,   nil,
   nil,   737,   273,   285,  1109,   319,  1025,  1073,   nil, 10265,
  3499,  1066, 10640, 10765, 10890, 11015, 11140, 11265, 11390, 11515,
 11640, 11765, 11890, 12015, 12140, 12265, 12390, 12515, 12640, 12765,
 12890, 13015, 13140, 13265, 13390, 13515, 13640, 13765,   nil,   nil,
 22278, 22218,  1034, 14265, 14390,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 14515,   nil, 20539,   nil,   976,   971,   nil, 15015,
  1006, 15265,   nil, 15390,   nil,   nil,   403,  1647, 15765,   951,
  3374,   953,   987,   944, 16523,  3249,  1164,  1118,   987,  1005,
   998,   nil,   964,   923,   159,   nil,   nil,   nil,   946,   373,
   877, 18156,   nil,   395,   939,   923,  1121,   nil,   920,   nil,
 18906,   974,   964, 19281,   nil,   432,   223,   857,   838,   707,
   860,   nil,   nil,  1210,   304,   152,    48,  9765, 20414,   601,
   912,   783,    89,   125,  1311,   799,   163,   826,   nil,   nil,
   360,   359,   170,   nil,  1507,   nil,    55, 19031,   nil,   nil,
   nil,   611,   466,   569,   646,   654,   623,   543,   449,   401,
   nil,   612,   nil, 14015,   nil,   317,   259,   520,   441,    39,
   382,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   506,
 21314,   nil,   nil,   nil,   nil,   486,   nil,   467,   nil, 20539,
   461,   nil,  1504,   462,   nil,   455,   417,   526,   528, 20733,
   nil,   nil,   nil,   499,   608,   442,   nil,   nil,  1741,  1632,
   nil, 22944,   nil,   379,   nil,   nil,  1118,   nil,   nil,   nil,
   nil,   281,   nil,   420, 21058, 22038, 14765,   259, 14890, 16273,
 16781,  3749,  2749,   343,   569,   381,   353,   349,   345,  4374,
  4249,  4499,  2624,  2999,  1690,  3499,  3124,  2874,  3624,  3374,
  3999,  3874,   534,  1173,  4124,  3249, 23082,   249, 21060,   nil,
   nil, 20667,   nil,   nil,   247,   nil,   247,    80,   235,   nil,
   nil, 19156,   nil, 19656,   nil, 20031,   nil,   nil,   nil, 20156,
  1623,   136,   120,   nil,   nil,    48, 18531,    27, 18406, 22518,
 22458,  1577,  1142,   nil,   nil, 18031,    90,   nil, 17906, 17656,
 17406, 22158, 22098, 16523, 17281,   311, 17156,   nil,   720,   nil,
 17031,   nil,   nil, 16906,   nil,   nil,   nil,   120,  2052,   nil,
   391,   511,   570,   nil,   nil,   nil,   nil,   nil,   nil,   582,
   nil,   758,   nil,   nil,   nil,   nil,   752,   nil,   nil,   786,
   743,   931,   nil,  2249,    63,    96,   933,   946, 14640, 14140,
 22758, 21858,   116,   nil,   nil,  1549,   nil, 21918, 21978, 13890,
   nil,   nil, 10515,    52,   243,  1874,  5770,   nil,   nil,   nil,
   275,   nil,   nil,   nil,   611,   nil,   nil,   nil,   971,   nil,
   nil,   291,   nil,   nil,  1082,   nil,   nil,   nil, 21562,   nil,
  1115,  9515,  9390,   458,  1157,  8515,  8390,  7890,  7765,  1184,
   nil,   nil,  7515,  6632,  1188,   nil,  6257,  5249,   nil,   nil,
    96,   109,   130,     0,  -102,  5624,  1206,   nil,   605,   nil,
  4249,   nil,   nil,   nil,   nil,   173,   nil,  4124,  1999,   nil,
  1025,   nil,  1029,  9890,   nil,   nil,  1762,    12, 10015,   958,
   nil,   881,   156,   187,   863,   502,  1504,   850,   710, 16148,
 23036,   719,   655,   270,   701,   nil,   868,   568,   567,   nil,
   nil,   526,   698,   nil,   993,  1118,   320,  2427,   nil,  2302,
   nil,   nil,  1897, 18281,   nil,   729,   nil,    39,   494,   nil,
    66,   nil,   nil,   867,   nil,   215,   nil,   nil,   nil,   nil,
   230,   nil,    34,   125,   191,    56,   186,   219, 18656,   398,
  1254,   nil,   299,  1379,   406,   nil,   nil,   480,  1504,   921,
   324, 21686,   nil,   nil,   nil,   nil,   nil,   nil,  2124,   nil,
   nil,   nil,   nil,   nil,   423,  7640, 22852,  6132,   nil,   465,
   nil, 22898,   nil,  6757,   nil,   nil, 23128,   nil, 22806,   nil,
 16015, 15140, 15515, 15640, 15890,   289, 16398,   600,   604,   613,
   nil,   659,   648,   854,   654,   nil,   790,     0,   698,   814,
   nil,   nil,   700,   299,   nil,   nil,   nil,  2374,   nil,   nil,
   179, 19531,   nil,   766,   nil,   749,   857,   750,   755,   763,
   nil,   nil,   766,   767,   nil,   775,   nil,   784,   883,   795,
  1239,   nil,   926,   nil, 20289,   932,  2499,  2624,   nil, 19906,
  2749,   135,   167,   nil,   945,   nil,  2874,   nil,   948,   832,
   nil,   nil,   849,   833,   nil, 23174,  4749, 18781, 20156,  1927,
   nil,  2177,   nil,   nil,  2022,   nil,   909,   900,   nil,   nil,
   nil, 17781,   nil,   927,   nil,   nil,   nil,  2999,   999,   748,
  1283,  1019,  1369,   nil,   nil,   nil,   nil,   nil,   671,   nil,
   nil,   794,   nil,   891,   nil,  1015,   nil,   nil,   nil,   502,
   913,   975,   nil,   124,   nil,  1097,  1102,   nil,   107,   nil,
   nil,  1117,   nil,   nil,  1596,   nil,  1002,  1005,  1013,  1016,
   nil,  1017,   nil,  1365,  1373,  1102,   nil,  1151, 10140, 22398,
 22578,  1278,  1049,  1070,  1075,  1078,  1079,  1249,  1088,  1008,
  4499,   nil,   nil,   nil,   nil,   nil,  3999,   nil,  3874,  2552,
   nil,   nil,  1044,   nil,  1430,   nil,   nil,   nil, 22338,   nil,
   nil,  1130,   178,   164,   163,  1384,   nil,  1401,   nil,   nil,
   nil,   979,  1152,   738,  1282,  1286,  1168,  1172,  1176,  1182,
  1237,  1243,   140,  1206,  1212,   nil,   nil,   nil,   nil,   765,
   nil,   nil,   nil,   nil,  1228,   nil ]

racc_action_default = [
    -3,  -547,    -1,  -533,    -4,  -547,    -7,  -547,  -547,  -547,
  -547,   -27,  -547,  -547,  -547,  -274,  -547,   -39,   -42,  -535,
  -547,   -47,   -49,   -50,   -51,  -255,  -255,  -255,  -285,  -320,
  -321,   -67,   -11,   -71,   -79,   -81,  -547,  -462,  -463,  -547,
  -547,  -547,  -547,  -547,  -535,  -236,  -267,  -268,  -269,  -270,
  -271,  -272,  -273,  -523,   -11,  -277,  -546,  -515,  -293,  -375,
  -547,  -547,  -298,  -301,  -533,  -547,  -547,  -547,  -547,  -322,
  -323,  -411,  -412,  -413,  -414,  -415,  -430,  -418,  -419,  -432,
  -434,  -423,  -428,  -444,  -432,  -446,  -447,  -521,  -451,  -452,
  -522,  -454,  -455,  -456,  -457,  -458,  -459,  -460,  -461,  -466,
  -467,  -547,    -2,  -534,  -542,  -543,  -544,    -6,  -547,  -547,
  -547,  -547,  -547,    -3,   -15,  -547,  -110,  -111,  -112,  -113,
  -114,  -115,  -116,  -117,  -118,  -122,  -123,  -124,  -125,  -126,
  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,
  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,
  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,
  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,
  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,
  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,
  -187,  -188,  -189,  -190,  -191,   -20,  -119,   -11,  -547,  -547,
  -245,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -535,  -536,
   -46,  -547,  -462,  -463,  -547,  -274,  -547,  -547,  -228,  -547,
   -11,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -381,  -383,
  -547,  -547,   -56,  -245,  -547,  -292,  -386,  -395,  -397,   -62,
  -392,   -63,  -535,   -64,  -237,  -250,  -259,  -259,  -254,  -547,
  -260,  -547,  -517,  -547,   -65,   -66,  -533,   -12,  -547,   -69,
   -11,  -535,  -547,   -72,   -75,   -11,   -87,   -88,  -547,  -547,
   -95,  -285,  -288,  -535,  -547,  -320,  -321,  -324,  -393,  -547,
   -77,  -547,   -83,  -282,  -448,  -449,  -547,  -213,  -214,  -229,
  -547,  -403,  -547,  -547,  -238,  -539,  -539,  -547,  -547,  -539,
  -547,  -294,  -295,  -487,   -48,  -547,  -547,  -547,  -547,  -533,
  -547,  -534,  -462,  -463,  -547,  -547,  -274,  -547,  -334,  -335,
  -105,  -106,  -547,  -108,  -547,  -274,  -547,  -547,  -462,  -463,
  -313,  -110,  -111,  -151,  -152,  -153,  -169,  -174,  -181,  -184,
  -315,  -547,  -513,  -547,  -416,  -547,  -547,  -547,  -547,  -547,
  -547,   956,    -5,  -545,   -21,   -22,   -23,   -24,   -25,  -547,
  -547,   -17,   -18,   -19,  -120,  -547,   -28,   -37,   -38,  -547,
  -547,   -29,  -194,  -535,  -246,  -259,  -259,  -524,  -525,  -255,
  -390,  -526,  -527,  -525,  -524,  -255,  -389,  -391,  -526,  -527,
   -35,  -202,   -36,  -547,   -40,   -41,  -192,  -260,   -43,   -44,
   -45,  -535,  -291,  -547,  -547,  -547,  -245,  -282,  -547,  -547,
  -547,  -203,  -204,  -205,  -206,  -207,  -208,  -209,  -210,  -215,
  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -225,
  -226,  -227,  -230,  -231,  -232,  -233,  -535,  -364,  -255,  -524,
  -525,  -255,   -54,   -57,  -535,  -256,  -364,  -364,  -535,  -287,
  -251,  -547,  -252,  -547,  -257,  -547,  -261,  -520,   -10,  -534,
   -14,  -535,   -68,  -280,   -84,   -73,  -547,  -535,  -245,  -547,
  -547,   -94,  -547,  -448,  -449,  -547,   -80,   -85,  -547,  -547,
  -547,  -547,  -547,  -234,  -547,  -546,  -546,  -276,  -278,  -239,
  -541,  -540,  -241,  -541,  -283,  -284,  -516,  -547,  -487,  -378,
  -512,  -512,  -512,  -486,  -488,  -489,  -490,  -491,  -492,  -493,
  -494,  -547,  -496,  -502,  -504,  -505,  -507,  -508,  -509,  -547,
   -11,  -325,  -326,   -11,  -547,  -547,  -547,  -547,  -547,  -245,
  -547,  -547,  -282,  -306,  -105,  -106,  -107,  -547,  -547,  -245,
  -309,  -468,  -547,  -547,  -547,   -11,  -487,  -317,  -531,  -532,
  -535,  -417,  -431,  -436,  -547,  -438,  -420,  -433,  -547,  -435,
  -422,  -547,  -425,  -427,  -547,  -445,    -8,   -16,  -547,   -26,
  -266,  -547,  -547,  -394,  -547,  -247,  -249,  -547,  -547,   -58,
  -244,  -387,  -547,  -547,   -60,  -388,  -547,  -547,  -290,  -537,
  -524,  -525,  -524,  -525,  -535,  -192,  -547,  -365,  -369,  -367,
   -11,   -52,  -384,   -53,  -385,  -364,  -242,   -11,   -11,  -286,
  -259,  -258,  -262,  -547,  -518,  -519,   -13,   -70,  -547,   -76,
   -82,  -535,  -524,  -525,  -243,   -91,   -93,  -547,   -78,  -547,
  -201,  -211,  -212,  -535,  -546,  -332,   -11,  -404,  -546,  -405,
  -406,  -535,  -539,  -376,   -11,   -11,  -369,  -547,  -479,  -547,
  -482,  -484,  -547,  -547,  -336,  -547,  -338,  -340,  -347,  -493,
  -535,  -506,  -510,  -546,  -327,  -546,  -299,  -328,  -329,  -302,
  -547,  -305,  -547,  -535,  -524,  -525,  -528,  -281,  -547,  -105,
  -106,  -109,  -535,   -11,  -547,  -470,  -311,  -547,   -11,  -487,
  -547,  -547,  -514,  -437,  -440,  -441,  -442,  -443,   -11,  -421,
  -424,  -426,  -429,  -121,  -264,  -547,  -195,  -547,  -538,  -259,
   -31,  -197,   -32,  -198,   -59,   -33,  -200,   -34,  -199,   -61,
  -193,  -547,  -547,  -547,  -547,  -394,  -547,  -512,  -512,  -512,
  -363,  -547,  -369,  -547,  -493,  -500,  -547,   -11,  -547,  -547,
  -253,  -263,   -74,   -89,   -86,  -289,    -9,   -11,  -410,  -333,
  -547,  -547,  -408,  -547,  -240,  -547,  -547,  -535,  -512,  -512,
  -497,  -511,  -512,  -512,  -503,  -512,  -498,  -535,  -547,  -345,
  -547,  -495,  -547,  -330,  -547,  -547,   -11,   -11,  -304,  -547,
   -11,  -394,  -547,  -394,  -547,  -469,   -11,  -314,  -547,  -535,
  -472,  -318,  -547,  -265,   -30,  -196,  -248,  -547,  -235,  -354,
  -356,  -547,  -359,  -361,  -547,  -366,  -547,  -370,  -371,  -373,
  -374,  -547,  -382,  -547,  -396,  -398,  -409,   -11,   -96,   -97,
  -547,  -547,  -104,  -407,  -279,  -379,  -380,  -377,  -547,  -475,
  -477,  -547,  -480,  -547,  -483,  -547,  -485,  -337,  -339,  -343,
  -547,  -348,  -296,  -547,  -297,  -547,  -547,  -262,  -546,  -307,
  -310,  -547,  -316,  -471,  -487,  -439,  -512,  -512,  -512,  -512,
  -501,  -512,  -368,  -547,  -499,  -547,   -55,  -403,  -245,  -547,
  -547,  -103,  -512,  -512,  -512,  -512,  -341,  -547,  -346,  -547,
   -11,  -300,  -303,  -399,  -400,  -401,   -11,  -312,   -11,  -547,
  -351,  -353,  -547,  -357,  -547,  -360,  -362,  -372,  -547,  -282,
  -402,  -535,  -524,  -525,  -528,  -102,  -473,  -547,  -476,  -478,
  -481,  -547,  -344,  -546,  -547,  -547,  -512,  -512,  -512,  -512,
  -281,  -528,  -394,  -512,  -342,  -331,  -308,  -319,  -349,  -547,
  -352,  -355,  -358,  -474,  -512,  -350 ]

clist = [
'119,119,505,312,360,415,393,14,114,196,283,6,14,103,124,124,6,122,122',
'314,265,265,265,267,267,267,547,211,654,252,259,261,463,519,523,211',
'211,211,300,14,288,288,593,792,540,543,686,689,102,388,472,316,319,13',
'207,412,556,279,13,464,119,14,784,708,281,509,512,211,211,516,828,211',
'334,344,344,263,274,275,748,310,2,467,325,326,107,13,329,496,620,751',
'572,680,579,582,366,297,297,627,628,370,399,405,634,880,346,350,631',
'13,631,330,14,282,780,830,6,211,211,211,211,14,14,37,328,378,6,858,37',
'297,297,297,374,375,376,377,797,256,260,777,698,906,622,106,634,624',
'703,806,565,566,711,458,461,874,327,37,286,286,13,339,661,313,752,195',
'567,766,361,13,13,380,324,324,560,827,324,337,625,37,517,663,323,472',
'322,249,372,457,466,796,332,348,348,348,903,880,265,379,409,861,658',
'770,210,364,917,365,106,321,14,211,211,211,795,367,211,211,211,211,211',
'211,324,324,324,324,266,266,266,826,37,634,368,14,666,523,631,631,614',
'37,37,787,858,581,318,369,713,784,690,830,718,265,265,749,315,267,13',
'778,362,317,265,588,757,267,1,,211,211,,745,780,898,,,,211,,701,639',
'13,,,385,523,497,876,,648,,,,14,479,14,485,480,763,288,14,945,641,,779',
',782,282,780,465,932,,869,279,721,,288,468,279,400,481,418,419,420,421',
'487,37,,211,478,,399,405,,,,492,750,,13,,13,211,211,944,,13,,,37,801',
',,,297,,,544,545,803,,,211,693,,659,,282,,16,,297,282,702,16,,,,211',
'908,119,,546,,386,391,,734,587,410,414,,739,,124,,644,122,390,904,,16',
',,390,,,37,644,37,,599,256,286,37,415,260,604,,800,774,760,106,16,,409',
'265,809,523,508,286,,762,,338,,594,,,,,211,,324,324,,,,,,,,,634,266',
',877,644,878,631,,,266,564,,644,,,,,621,497,16,623,630,106,,660,,570',
'497,16,16,,,892,,,265,,409,,561,,14,,,837,636,616,,288,409,211,,,,,',
',288,,,662,,,,600,,211,760,,707,605,,,,,,,,,,,,,,,,,13,,400,,,,936,',
',265,,409,,,,14,297,409,14,265,,,,,211,297,16,,,,,,905,413,211,,600',
'211,942,600,14,,,,,,920,,119,16,900,,704,523,,,723,,729,,,13,124,,13',
'122,,400,37,,,,211,211,,286,,211,211,400,653,211,,497,286,768,13,683',
',772,685,,,,764,14,,,,,,,14,14,,,,16,,16,320,,,288,16,811,,594,,,804',
',,,288,808,,,400,37,,14,37,,,,400,,324,14,14,13,,,594,,,,13,13,687,687',
',,37,,,,,,,,921,,773,,390,756,297,705,706,119,,211,758,759,,13,14,297',
',,,14,,13,13,,802,,,,,14,,,594,,,,,,211,769,,594,,674,692,37,,775,776',
',,,37,37,,,,,600,871,13,605,422,286,38,13,,,14,38,,,,,286,13,,,14,730',
'732,37,840,,735,737,,387,414,37,37,,644,417,,,38,287,287,,,812,,,,211',
',14,14,,324,14,,,13,,469,14,38,,863,747,,,13,,,,37,333,349,349,349,37',
',482,,297,,,833,,884,37,16,,805,,14,,836,,810,13,13,,,13,474,,476,935',
'477,13,,,,38,,15,,,783,,15,785,38,38,,865,866,,37,868,265,,409,674,',
',789,,37,,13,,838,297,,211,,15,290,290,,16,324,,16,814,,14,,,409,,,14',
',14,887,37,37,15,,37,,,,,16,37,,,336,345,345,,,,,,,,687,,,,,,,,,,,,348',
'13,,,594,38,37,13,,13,,,,,,413,15,,,608,,,590,,,15,15,933,38,16,,,,934',
',,16,16,,,,,,,674,,674,400,,,,,,,,,,,,,,,626,,,16,629,,879,37,,881,',
'16,16,37,,37,,637,,,,,,640,38,,38,,,,287,38,,893,,,894,,895,,,,632,',
'320,,635,287,15,,16,,,896,674,16,,,,,,,,,,16,,,,,,15,,,,,,657,,,,632',
',,320,,,,,,,674,,674,937,,,938,,939,,,,,16,,712,,,,,,943,,16,,,,843',
'417,,,,,,674,,,,15,,15,,,954,290,15,,,,,,,16,16,,,16,,,,,290,16,,,,',
',,,,724,,,,632,320,,,,,,,,,,,,,,,,,16,,,,,765,,,,,,,,,,,,,,,761,,,,',
',,,,,,,791,,,,,,,,,38,,,,,,,287,,,,,,,,25,287,,,786,25,,16,,,,,,16,',
'16,,,,,25,,,,,,,,25,25,25,,25,,,,,,,,,,,,,,38,,,38,,,,,25,,813,,,,25',
'25,,,25,,,,,,,38,,847,,,,,,,,,,857,,,,,,,15,,,,,,,290,,,,,,25,,873,290',
',25,25,25,25,25,25,,,,,,,,,,,,,38,,,,867,,,38,38,,,,,,,,,,287,,,320',
',,,15,,,15,287,,668,670,671,,,38,,,,,,,,38,38,,,,,15,,,,,,,,,717,,,',
',,,,,,,,25,25,25,25,,,25,25,25,25,25,25,38,,,,,38,,,,,,25,,,,38,,,,',
',,15,,,,,,,15,15,,,,,,,,,,290,,,,25,25,,,,,,290,,25,38,,,,15,,,,,,38',
',15,15,839,25,,25,,,,,25,,,,,,,,,,,,,,,,,38,38,,,38,,,,,,38,25,15,,',
',,15,,,,,,,,25,25,15,,,,,,,,349,,,,,,38,,,,25,,,,,,,,,,,,,,,,25,,,,',
'15,,,,,,,,,,15,,,,842,,820,822,823,,,,,,,,,,,,,,,,,,,,38,15,15,,,15',
'38,,38,849,850,15,,852,854,,856,,,,25,,,,,,,,,,,,,,,,345,,,,,,15,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,25,,,,,,,,,,,,,,,,25,,,,,,,15',
',910,911,913,915,15,916,15,,,,,,,,,,926,928,929,930,,,,,,,,25,,,25,',
',,,,25,,,,,,,,,,25,,,25,,,25,,,,,,,,948,950,951,952,,,,953,,,,,,,,,',
',955,,,,,,25,25,,,,25,25,,,25,,218,,,,,,,,264,264,264,,25,,,,,,,25,25',
'307,308,309,,,,,,,,,,,,,264,264,,,,,,,,,,,25,,,,,,,,25,25,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,25,,,,,25,,,,,25,,,,,,,,,,25,,,,,,,,,25,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,264,392,264',
',,411,416,,25,,25,25,,,25,,,,,,25,218,,,431,432,433,434,435,436,437',
'438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454',
'455,456,,25,,,,264,264,,,,,,,,264,,,,,,,264,,264,,264,,,,,,,,,,,,,,',
',,,,,,,,,,,,25,,,,,,,,,,503,,25,,,,,,25,,25,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,264,,411,615,392,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,264,,264,,264,,,,,,,,,,,,,264,,,,,,,,,,650,651,652,,,,,,264,,,',
'264,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,264,,,,,,,,,,264,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,264,726,,,264,264,731,733,,,,736,738,,,615',
'740,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,815',
',,,,,,,,,,,,,731,733,738,736,,818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,264,815,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264' ]
        racc_goto_table = arr = ::Array.new(2731, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'54,54,10,8,53,17,22,21,14,14,46,7,21,6,58,58,7,57,57,62,32,32,32,65',
'65,65,85,21,11,36,36,36,37,124,115,21,21,21,47,21,21,21,23,83,82,82',
'84,84,4,26,68,65,65,20,30,26,51,42,20,22,54,21,147,89,43,64,64,21,21',
'64,119,21,21,21,21,41,41,41,112,30,2,129,16,16,5,20,16,48,38,117,141',
'108,141,141,137,60,60,38,38,137,35,35,151,148,52,52,69,20,69,4,21,9',
'146,120,7,21,21,21,21,21,21,49,96,7,7,106,49,60,60,60,16,16,16,16,97',
'66,66,117,98,99,67,88,151,67,100,101,102,103,104,35,35,105,94,49,49',
'49,20,18,93,92,110,15,91,12,90,20,20,29,28,28,87,118,28,86,39,49,121',
'122,123,68,81,125,5,126,128,95,49,49,49,49,130,148,32,2,54,109,131,132',
'19,135,119,136,88,79,21,21,21,21,11,138,21,21,21,21,21,21,28,28,28,28',
'63,63,63,117,49,151,139,21,124,115,69,69,22,49,49,108,106,140,78,142',
'143,147,85,120,144,32,32,113,63,65,20,145,77,61,32,59,38,65,1,,21,21',
',23,146,109,,,,21,,51,48,20,,,9,115,46,112,,48,,,,21,6,21,47,7,23,21',
'21,83,22,,113,,113,9,146,41,109,,84,42,141,,21,41,42,66,43,28,28,28',
'28,43,49,,21,4,,35,35,,,,30,115,,20,,20,21,21,109,,20,,,49,23,,,,60',
',,16,16,23,,,21,22,,26,,9,,25,,60,9,22,25,,,,21,89,54,,4,,19,19,,37',
'14,19,19,,37,,58,,35,57,63,11,,25,,,63,,,49,35,49,,36,66,49,49,17,66',
'36,,82,64,68,88,25,,54,32,124,115,28,49,,48,,25,,30,,,,,21,,28,28,,',
',,,,,,151,63,,113,35,113,69,,,63,28,,35,,,,,36,46,25,36,65,88,,62,,28',
'46,25,25,,,113,,,32,,54,,88,,21,,,82,7,30,,21,54,21,,,,,,,21,,,65,,',
',66,,21,68,,8,66,,,,,,,,,,,,,,,,,20,,66,,,,113,,,32,,54,,,,21,60,54',
'21,32,,,,,21,60,25,,,,,,85,25,21,,66,21,23,66,21,,,,,,10,,54,25,82,',
'16,115,,,14,,65,,,20,58,,20,57,,66,49,,,,21,21,,49,,21,21,66,28,21,',
'46,49,62,20,9,,62,9,,,,46,21,,,,,,,21,21,,,,25,,25,27,,,21,25,53,,30',
',,8,,,,21,8,,,66,49,,21,49,,,,66,,28,21,21,20,,,30,,,,20,20,88,88,,',
'49,,,,,,,,22,,30,,63,9,60,88,88,54,,21,9,9,,20,21,60,,,,21,,20,20,,16',
',,,,21,,,30,,,,,,21,9,,30,,107,63,49,,9,9,,,,49,49,,,,,66,8,20,66,44',
'49,50,20,,,21,50,,,,,49,20,,,21,19,19,49,21,,19,19,,27,19,49,49,,35',
'27,,,50,50,50,,,9,,,,21,,21,21,,28,21,,,20,,44,21,50,,16,111,,,20,,',
',49,50,50,50,50,49,,44,,60,,,9,,21,49,25,,88,,21,,9,,88,20,20,,,20,27',
',27,8,27,20,,,,50,,24,,,111,,24,111,50,50,,9,9,,49,9,32,,54,107,,,107',
',49,,20,,49,60,,21,,24,24,24,,25,28,,25,19,,21,,,54,,,21,,21,9,49,49',
'24,,49,,,,,25,49,,,24,24,24,,,,,,,,88,,,,,,,,,,,,49,20,,,30,50,49,20',
',20,,,,,,25,24,,,44,,,27,,,24,24,9,50,25,,,,9,,,25,25,,,,,,,107,,107',
'66,,,,,,,,,,,,,,,44,,,25,44,,111,49,,111,,25,25,49,,49,,44,,,,,,44,50',
',50,,,,50,50,,111,,,111,,111,,,,27,,27,,27,50,24,,25,,,107,107,25,,',
',,,,,,,25,,,,,,24,,,,,,27,,,,27,,,27,,,,,,,107,,107,111,,,111,,111,',
',,,25,,44,,,,,,111,,25,,,,25,27,,,,,,107,,,,24,,24,,,111,24,24,,,,,',
',25,25,,,25,,,,,24,25,,,,,,,,,27,,,,27,27,,,,,,,,,,,,,,,,,25,,,,,44',
',,,,,,,,,,,,,,27,,,,,,,,,,,,44,,,,,,,,,50,,,,,,,50,,,,,,,,40,50,,,27',
'40,,25,,,,,,25,,25,,,,,40,,,,,,,,40,40,40,,40,,,,,,,,,,,,,,50,,,50,',
',,,40,,27,,,,40,40,,,40,,,,,,,50,,44,,,,,,,,,,44,,,,,,,24,,,,,,,24,',
',,,,40,,44,24,,40,40,40,40,40,40,,,,,,,,,,,,,50,,,,27,,,50,50,,,,,,',
',,,50,,,27,,,,24,,,24,50,,114,114,114,,,50,,,,,,,,50,50,,,,,24,,,,,',
',,,24,,,,,,,,,,,,40,40,40,40,,,40,40,40,40,40,40,50,,,,,50,,,,,,40,',
',,50,,,,,,,24,,,,,,,24,24,,,,,,,,,,24,,,,40,40,,,,,,24,,40,50,,,,24',
',,,,,50,,24,24,50,40,,40,,,,,40,,,,,,,,,,,,,,,,,50,50,,,50,,,,,,50,40',
'24,,,,,24,,,,,,,,40,40,24,,,,,,,,50,,,,,,50,,,,40,,,,,,,,,,,,,,,,40',
',,,,24,,,,,,,,,,24,,,,24,,114,114,114,,,,,,,,,,,,,,,,,,,,50,24,24,,',
'24,50,,50,114,114,24,,114,114,,114,,,,40,,,,,,,,,,,,,,,,24,,,,,,24,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,,,,,40,,,,,,,,,,,,,,,,40,,,,,,,24',
',114,114,114,114,24,114,24,,,,,,,,,,114,114,114,114,,,,,,,,40,,,40,',
',,,,40,,,,,,,,,,40,,,40,,,40,,,,,,,,114,114,114,114,,,,114,,,,,,,,,',
',114,,,,,,40,40,,,,40,40,,,40,,31,,,,,,,,31,31,31,,40,,,,,,,40,40,31',
'31,31,,,,,,,,,,,,,31,31,,,,,,,,,,,40,,,,,,,,40,40,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,40,,,,,40,,,,,40,,,,,,,,,,40,,,,,,,,,40,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,40,,,,,,,,,,40,,,,,,,,,,,,,,,,,,,31,31,31,,,31,31,,40',
',40,40,,,40,,,,,,40,31,,,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31',
'31,31,31,31,31,31,31,31,31,31,31,,40,,,,31,31,,,,,,,,31,,,,,,,31,,31',
',31,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,,,,,,31,,40,,,,,,40,,40,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,31,31,31,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,31,,31,,31,,,,,,,,,,,,,31,,,,,,,,,,31,31,31,,,,,,31',
',,,31,,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,31,,,,,,,,,,31,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,31,31,,,31,31,31,31,,,,31,31,,,31,31,,,,,',
',,,,,,,,,,,,,,,,,,,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,31,,,,,,,,,,,,,',
'31,31,31,31,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'31,,,,,,,,,,,,,,,,,31,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,31' ]
        racc_goto_check = arr = ::Array.new(2731, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   258,    80,   nil,    45,    79,    10,    11,   -51,    79,
  -309,  -477,  -491,   nil,     0,   152,    22,  -199,    92,   178,
    53,     7,  -194,  -351,   865,   361,  -149,   585,   108,    53,
    35,  1842,    -8,   nil,   nil,  -101,     4,  -220,  -369,  -288,
  1254,    47,    25,    32,   550,   nil,   -23,     4,  -214,   121,
   760,  -286,    38,   -64,    -8,   nil,   nil,     9,     6,  -129,
    62,   197,   -37,   192,  -250,    -5,   110,  -318,  -217,  -365,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   184,   181,   145,
   nil,   121,  -281,  -640,  -498,  -304,   108,  -176,   138,  -503,
    96,  -199,   104,  -350,    90,  -501,    59,  -555,  -415,  -730,
  -416,  -561,  -204,  -213,  -419,  -660,  -663,   208,  -440,  -595,
  -458,   199,  -540,  -371,   891,  -289,   nil,  -529,  -582,  -683,
  -640,  -147,  -340,   119,  -290,   159,   -65,   nil,   -73,  -177,
  -678,  -310,  -461,   nil,   nil,   125,   125,    15,   129,   145,
  -131,  -275,   157,  -334,  -331,  -416,  -555,  -607,  -718,   nil,
   nil,  -371 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   331,   277,   nil,   311,
   nil,   793,   nil,   276,   nil,   nil,   nil,    11,    12,    18,
   217,   306,   nil,   nil,   215,   216,   nil,   270,    17,   nil,
   423,    21,    22,    23,    24,   647,   nil,   nil,   nil,   nil,
   294,   394,    31,   nil,   nil,    33,    36,    35,   nil,   212,
   213,   343,   nil,   121,   402,   120,   123,    72,    73,   nil,
    45,   nil,   655,   395,   nil,   396,   407,   601,   470,   268,
   254,    46,    47,    48,    49,    50,    51,    52,   nil,   255,
    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   541,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   676,   530,   nil,   677,
   nil,   520,   nil,   522,   nil,   781,   617,   nil,   nil,   nil,
   528,   nil,   nil,   nil,   710,   nil,   nil,   406,   nil,   nil,
   nil,   nil,   nil,    71,    74,    75,   nil,   nil,   nil,   nil,
   nil,   577,   nil,   nil,   nil,   521,   532,   533,   755,   536,
   539,   272 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_none,
  2, 139, :_reduce_2,
  0, 140, :_reduce_3,
  1, 140, :_reduce_4,
  3, 140, :_reduce_5,
  2, 140, :_reduce_6,
  1, 142, :_reduce_none,
  4, 142, :_reduce_8,
  4, 145, :_reduce_9,
  2, 146, :_reduce_10,
  0, 150, :_reduce_11,
  1, 150, :_reduce_12,
  3, 150, :_reduce_13,
  2, 150, :_reduce_14,
  0, 166, :_reduce_15,
  4, 144, :_reduce_16,
  3, 144, :_reduce_17,
  3, 144, :_reduce_18,
  3, 144, :_reduce_19,
  2, 144, :_reduce_20,
  3, 144, :_reduce_21,
  3, 144, :_reduce_22,
  3, 144, :_reduce_23,
  3, 144, :_reduce_24,
  3, 144, :_reduce_25,
  4, 144, :_reduce_26,
  1, 144, :_reduce_none,
  3, 144, :_reduce_28,
  3, 144, :_reduce_29,
  6, 144, :_reduce_30,
  5, 144, :_reduce_31,
  5, 144, :_reduce_32,
  5, 144, :_reduce_33,
  5, 144, :_reduce_34,
  3, 144, :_reduce_35,
  3, 144, :_reduce_36,
  3, 144, :_reduce_37,
  3, 144, :_reduce_38,
  1, 144, :_reduce_none,
  3, 154, :_reduce_40,
  3, 154, :_reduce_41,
  1, 165, :_reduce_none,
  3, 165, :_reduce_43,
  3, 165, :_reduce_44,
  3, 165, :_reduce_45,
  2, 165, :_reduce_46,
  1, 165, :_reduce_none,
  1, 153, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  1, 170, :_reduce_none,
  4, 170, :_reduce_52,
  4, 170, :_reduce_53,
  0, 176, :_reduce_54,
  5, 174, :_reduce_55,
  2, 169, :_reduce_56,
  3, 169, :_reduce_57,
  4, 169, :_reduce_58,
  5, 169, :_reduce_59,
  4, 169, :_reduce_60,
  5, 169, :_reduce_61,
  2, 169, :_reduce_62,
  2, 169, :_reduce_63,
  2, 169, :_reduce_64,
  2, 169, :_reduce_65,
  2, 169, :_reduce_66,
  1, 155, :_reduce_67,
  3, 155, :_reduce_68,
  1, 180, :_reduce_69,
  3, 180, :_reduce_70,
  1, 179, :_reduce_none,
  2, 179, :_reduce_72,
  3, 179, :_reduce_73,
  5, 179, :_reduce_74,
  2, 179, :_reduce_75,
  4, 179, :_reduce_76,
  2, 179, :_reduce_77,
  4, 179, :_reduce_78,
  1, 179, :_reduce_79,
  3, 179, :_reduce_80,
  1, 183, :_reduce_none,
  3, 183, :_reduce_82,
  2, 182, :_reduce_83,
  3, 182, :_reduce_84,
  1, 185, :_reduce_85,
  3, 185, :_reduce_86,
  1, 184, :_reduce_87,
  1, 184, :_reduce_88,
  4, 184, :_reduce_89,
  3, 184, :_reduce_90,
  3, 184, :_reduce_91,
  3, 184, :_reduce_92,
  3, 184, :_reduce_93,
  2, 184, :_reduce_94,
  1, 184, :_reduce_95,
  1, 162, :_reduce_96,
  1, 162, :_reduce_97,
  4, 162, :_reduce_98,
  3, 162, :_reduce_99,
  3, 162, :_reduce_100,
  3, 162, :_reduce_101,
  3, 162, :_reduce_102,
  2, 162, :_reduce_103,
  1, 162, :_reduce_104,
  1, 188, :_reduce_105,
  1, 188, :_reduce_none,
  2, 189, :_reduce_107,
  1, 189, :_reduce_108,
  3, 189, :_reduce_109,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 193, :_reduce_115,
  1, 193, :_reduce_none,
  1, 151, :_reduce_none,
  1, 151, :_reduce_none,
  1, 152, :_reduce_119,
  0, 196, :_reduce_120,
  4, 152, :_reduce_121,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  3, 168, :_reduce_192,
  5, 168, :_reduce_193,
  3, 168, :_reduce_194,
  5, 168, :_reduce_195,
  6, 168, :_reduce_196,
  5, 168, :_reduce_197,
  5, 168, :_reduce_198,
  5, 168, :_reduce_199,
  5, 168, :_reduce_200,
  4, 168, :_reduce_201,
  3, 168, :_reduce_202,
  3, 168, :_reduce_203,
  3, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  3, 168, :_reduce_207,
  3, 168, :_reduce_208,
  3, 168, :_reduce_209,
  3, 168, :_reduce_210,
  4, 168, :_reduce_211,
  4, 168, :_reduce_212,
  2, 168, :_reduce_213,
  2, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  3, 168, :_reduce_218,
  3, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  3, 168, :_reduce_224,
  3, 168, :_reduce_225,
  3, 168, :_reduce_226,
  3, 168, :_reduce_227,
  2, 168, :_reduce_228,
  2, 168, :_reduce_229,
  3, 168, :_reduce_230,
  3, 168, :_reduce_231,
  3, 168, :_reduce_232,
  3, 168, :_reduce_233,
  3, 168, :_reduce_234,
  6, 168, :_reduce_235,
  1, 168, :_reduce_none,
  1, 164, :_reduce_none,
  1, 198, :_reduce_none,
  2, 198, :_reduce_none,
  4, 198, :_reduce_240,
  2, 198, :_reduce_241,
  3, 203, :_reduce_242,
  0, 204, :_reduce_243,
  1, 204, :_reduce_none,
  0, 159, :_reduce_245,
  1, 159, :_reduce_none,
  2, 159, :_reduce_none,
  4, 159, :_reduce_248,
  2, 159, :_reduce_249,
  1, 178, :_reduce_250,
  2, 178, :_reduce_251,
  2, 178, :_reduce_252,
  4, 178, :_reduce_253,
  1, 178, :_reduce_254,
  0, 207, :_reduce_255,
  2, 173, :_reduce_256,
  2, 206, :_reduce_257,
  2, 205, :_reduce_258,
  0, 205, :_reduce_259,
  1, 200, :_reduce_260,
  2, 200, :_reduce_261,
  3, 200, :_reduce_262,
  4, 200, :_reduce_263,
  3, 163, :_reduce_264,
  4, 163, :_reduce_265,
  2, 163, :_reduce_266,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_none,
  1, 197, :_reduce_275,
  3, 197, :_reduce_276,
  0, 229, :_reduce_277,
  0, 230, :_reduce_278,
  6, 197, :_reduce_279,
  3, 197, :_reduce_280,
  3, 197, :_reduce_281,
  2, 197, :_reduce_282,
  3, 197, :_reduce_283,
  3, 197, :_reduce_284,
  1, 197, :_reduce_285,
  4, 197, :_reduce_286,
  3, 197, :_reduce_287,
  1, 197, :_reduce_288,
  5, 197, :_reduce_289,
  4, 197, :_reduce_290,
  3, 197, :_reduce_291,
  2, 197, :_reduce_292,
  1, 197, :_reduce_none,
  2, 197, :_reduce_294,
  2, 197, :_reduce_295,
  6, 197, :_reduce_296,
  6, 197, :_reduce_297,
  0, 231, :_reduce_298,
  0, 232, :_reduce_299,
  7, 197, :_reduce_300,
  0, 233, :_reduce_301,
  0, 234, :_reduce_302,
  7, 197, :_reduce_303,
  5, 197, :_reduce_304,
  4, 197, :_reduce_305,
  0, 235, :_reduce_306,
  0, 236, :_reduce_307,
  9, 197, :_reduce_308,
  0, 237, :_reduce_309,
  6, 197, :_reduce_310,
  0, 238, :_reduce_311,
  7, 197, :_reduce_312,
  0, 239, :_reduce_313,
  5, 197, :_reduce_314,
  0, 240, :_reduce_315,
  6, 197, :_reduce_316,
  0, 241, :_reduce_317,
  0, 242, :_reduce_318,
  9, 197, :_reduce_319,
  1, 197, :_reduce_320,
  1, 197, :_reduce_321,
  1, 197, :_reduce_322,
  1, 197, :_reduce_323,
  1, 158, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_327,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 220, :_reduce_none,
  5, 220, :_reduce_331,
  1, 148, :_reduce_none,
  2, 148, :_reduce_333,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 243, :_reduce_336,
  3, 243, :_reduce_337,
  1, 246, :_reduce_338,
  3, 246, :_reduce_339,
  1, 245, :_reduce_none,
  4, 245, :_reduce_341,
  6, 245, :_reduce_342,
  3, 245, :_reduce_343,
  5, 245, :_reduce_344,
  2, 245, :_reduce_345,
  4, 245, :_reduce_346,
  1, 245, :_reduce_347,
  3, 245, :_reduce_348,
  6, 247, :_reduce_349,
  8, 247, :_reduce_350,
  4, 247, :_reduce_351,
  6, 247, :_reduce_352,
  4, 247, :_reduce_353,
  2, 247, :_reduce_none,
  6, 247, :_reduce_355,
  2, 247, :_reduce_356,
  4, 247, :_reduce_357,
  6, 247, :_reduce_358,
  2, 247, :_reduce_359,
  4, 247, :_reduce_360,
  2, 247, :_reduce_361,
  4, 247, :_reduce_362,
  1, 247, :_reduce_363,
  0, 175, :_reduce_364,
  1, 175, :_reduce_365,
  3, 253, :_reduce_366,
  1, 253, :_reduce_367,
  4, 253, :_reduce_368,
  0, 254, :_reduce_369,
  2, 254, :_reduce_370,
  1, 255, :_reduce_371,
  3, 255, :_reduce_372,
  1, 256, :_reduce_373,
  1, 256, :_reduce_none,
  0, 260, :_reduce_375,
  3, 218, :_reduce_376,
  4, 258, :_reduce_377,
  1, 258, :_reduce_378,
  3, 259, :_reduce_379,
  3, 259, :_reduce_380,
  0, 263, :_reduce_381,
  5, 262, :_reduce_382,
  2, 171, :_reduce_383,
  4, 171, :_reduce_384,
  4, 171, :_reduce_385,
  2, 217, :_reduce_386,
  4, 217, :_reduce_387,
  4, 217, :_reduce_388,
  3, 217, :_reduce_389,
  3, 217, :_reduce_390,
  3, 217, :_reduce_391,
  2, 217, :_reduce_392,
  1, 217, :_reduce_393,
  4, 217, :_reduce_394,
  0, 265, :_reduce_395,
  5, 216, :_reduce_396,
  0, 266, :_reduce_397,
  5, 216, :_reduce_398,
  5, 222, :_reduce_399,
  1, 267, :_reduce_400,
  1, 267, :_reduce_none,
  6, 147, :_reduce_402,
  0, 147, :_reduce_403,
  1, 268, :_reduce_404,
  1, 268, :_reduce_none,
  1, 268, :_reduce_none,
  2, 269, :_reduce_407,
  1, 269, :_reduce_none,
  2, 149, :_reduce_409,
  1, 149, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_414,
  1, 271, :_reduce_415,
  2, 271, :_reduce_416,
  3, 272, :_reduce_417,
  1, 272, :_reduce_418,
  1, 272, :_reduce_419,
  3, 210, :_reduce_420,
  4, 211, :_reduce_421,
  3, 212, :_reduce_422,
  0, 276, :_reduce_423,
  3, 276, :_reduce_424,
  1, 277, :_reduce_425,
  2, 277, :_reduce_426,
  3, 213, :_reduce_427,
  0, 279, :_reduce_428,
  3, 279, :_reduce_429,
  0, 273, :_reduce_430,
  2, 273, :_reduce_431,
  0, 274, :_reduce_432,
  2, 274, :_reduce_433,
  0, 275, :_reduce_434,
  2, 275, :_reduce_435,
  1, 278, :_reduce_436,
  2, 278, :_reduce_437,
  0, 281, :_reduce_438,
  4, 278, :_reduce_439,
  1, 280, :_reduce_440,
  1, 280, :_reduce_441,
  1, 280, :_reduce_442,
  1, 280, :_reduce_none,
  1, 194, :_reduce_444,
  3, 195, :_reduce_445,
  1, 270, :_reduce_446,
  1, 270, :_reduce_447,
  2, 270, :_reduce_448,
  2, 270, :_reduce_449,
  1, 186, :_reduce_450,
  1, 186, :_reduce_451,
  1, 186, :_reduce_452,
  1, 186, :_reduce_453,
  1, 186, :_reduce_454,
  1, 187, :_reduce_455,
  1, 187, :_reduce_456,
  1, 187, :_reduce_457,
  1, 187, :_reduce_458,
  1, 187, :_reduce_459,
  1, 187, :_reduce_460,
  1, 187, :_reduce_461,
  1, 214, :_reduce_462,
  1, 214, :_reduce_463,
  1, 157, :_reduce_464,
  1, 157, :_reduce_465,
  1, 161, :_reduce_466,
  1, 161, :_reduce_467,
  1, 224, :_reduce_468,
  3, 224, :_reduce_469,
  2, 224, :_reduce_470,
  3, 226, :_reduce_471,
  2, 226, :_reduce_472,
  6, 261, :_reduce_473,
  8, 261, :_reduce_474,
  4, 261, :_reduce_475,
  6, 261, :_reduce_476,
  4, 261, :_reduce_477,
  6, 261, :_reduce_478,
  2, 261, :_reduce_479,
  4, 261, :_reduce_480,
  6, 261, :_reduce_481,
  2, 261, :_reduce_482,
  4, 261, :_reduce_483,
  2, 261, :_reduce_484,
  4, 261, :_reduce_485,
  1, 261, :_reduce_486,
  0, 261, :_reduce_487,
  1, 257, :_reduce_488,
  1, 257, :_reduce_489,
  1, 257, :_reduce_490,
  1, 257, :_reduce_491,
  1, 244, :_reduce_none,
  1, 244, :_reduce_none,
  1, 283, :_reduce_494,
  3, 283, :_reduce_495,
  1, 248, :_reduce_496,
  3, 248, :_reduce_497,
  3, 284, :_reduce_498,
  3, 285, :_reduce_499,
  1, 249, :_reduce_500,
  3, 249, :_reduce_501,
  1, 282, :_reduce_502,
  3, 282, :_reduce_503,
  1, 286, :_reduce_none,
  1, 286, :_reduce_none,
  2, 250, :_reduce_506,
  1, 250, :_reduce_507,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  2, 252, :_reduce_510,
  2, 251, :_reduce_511,
  0, 251, :_reduce_512,
  1, 227, :_reduce_none,
  3, 227, :_reduce_514,
  0, 215, :_reduce_515,
  2, 215, :_reduce_none,
  1, 202, :_reduce_517,
  3, 202, :_reduce_518,
  3, 288, :_reduce_519,
  2, 288, :_reduce_520,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 264, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 141, :_reduce_none,
  1, 141, :_reduce_none,
  0, 167, :_reduce_none,
  1, 167, :_reduce_none,
  2, 181, :_reduce_537,
  2, 160, :_reduce_538,
  0, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 225, :_reduce_542,
  1, 225, :_reduce_none,
  1, 143, :_reduce_none,
  2, 143, :_reduce_none,
  0, 199, :_reduce_546 ]

racc_reduce_n = 547

racc_shift_n = 956

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tREGEXP_OPT => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tCHARACTER => 134,
  :tEQL => 135,
  :tLOWEST => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "primary",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@19",
  "f_args",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@23",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby19.y', 51)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 56)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 60)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 64)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 68)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby19.y', 74)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 79)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 95)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 100)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 104)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 108)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 112)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 117)
  def _reduce_15(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 121)
  def _reduce_16(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 125)
  def _reduce_17(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 131)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 137)
  def _reduce_19(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 141)
  def _reduce_20(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 145)
  def _reduce_21(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 150)
  def _reduce_22(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 155)
  def _reduce_23(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 159)
  def _reduce_24(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 163)
  def _reduce_25(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 171)
  def _reduce_26(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'ruby19.y', 176)
  def _reduce_28(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 180)
  def _reduce_29(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 184)
  def _reduce_30(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 191)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 198)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 205)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 212)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 219)
  def _reduce_35(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 223)
  def _reduce_36(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 228)
  def _reduce_37(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 232)
  def _reduce_38(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'ruby19.y', 239)
  def _reduce_40(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 243)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'ruby19.y', 249)
  def _reduce_43(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 253)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 257)
  def _reduce_45(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 261)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

module_eval(<<'.,.,', 'ruby19.y', 273)
  def _reduce_52(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 278)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 284)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 288)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 295)
  def _reduce_56(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 300)
  def _reduce_57(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 309)
  def _reduce_58(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 314)
  def _reduce_59(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 323)
  def _reduce_60(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 328)
  def _reduce_61(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 337)
  def _reduce_62(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 342)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 347)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 352)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 357)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 363)
  def _reduce_67(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 367)
  def _reduce_68(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 372)
  def _reduce_69(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 376)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'ruby19.y', 382)
  def _reduce_72(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 387)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 392)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 398)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 403)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 409)
  def _reduce_77(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 413)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 418)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 422)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'ruby19.y', 429)
  def _reduce_82(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 434)
  def _reduce_83(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 438)
  def _reduce_84(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 443)
  def _reduce_85(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 447)
  def _reduce_86(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 452)
  def _reduce_87(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 456)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 460)
  def _reduce_89(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 464)
  def _reduce_90(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 468)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 472)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 476)
  def _reduce_93(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 481)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 486)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 491)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 495)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 499)
  def _reduce_98(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 503)
  def _reduce_99(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 507)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 511)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 515)
  def _reduce_102(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 520)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 525)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 530)
  def _reduce_105(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'ruby19.y', 536)
  def _reduce_107(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 540)
  def _reduce_108(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 544)
  def _reduce_109(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

module_eval(<<'.,.,', 'ruby19.y', 553)
  def _reduce_115(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

module_eval(<<'.,.,', 'ruby19.y', 562)
  def _reduce_119(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 566)
  def _reduce_120(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 570)
  def _reduce_121(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

module_eval(<<'.,.,', 'ruby19.y', 591)
  def _reduce_192(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 595)
  def _reduce_193(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 605)
  def _reduce_194(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 609)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 619)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 626)
  def _reduce_197(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 633)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 640)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 647)
  def _reduce_200(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[2], [ val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 651)
  def _reduce_201(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[1], [ val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 655)
  def _reduce_202(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 659)
  def _reduce_203(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 663)
  def _reduce_204(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 667)
  def _reduce_205(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 671)
  def _reduce_206(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 675)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 679)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 683)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 687)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 691)
  def _reduce_211(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.integer(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 698)
  def _reduce_212(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.float(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 705)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 709)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 713)
  def _reduce_215(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 717)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 721)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 725)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 729)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 733)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 737)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 741)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 745)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 749)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 753)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 757)
  def _reduce_226(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 761)
  def _reduce_227(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 765)
  def _reduce_228(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 769)
  def _reduce_229(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 773)
  def _reduce_230(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 777)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 781)
  def _reduce_232(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 785)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 789)
  def _reduce_234(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 794)
  def _reduce_235(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

module_eval(<<'.,.,', 'ruby19.y', 805)
  def _reduce_240(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 809)
  def _reduce_241(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 814)
  def _reduce_242(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 819)
  def _reduce_243(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 244 omitted

module_eval(<<'.,.,', 'ruby19.y', 825)
  def _reduce_245(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 246 omitted

# reduce 247 omitted

module_eval(<<'.,.,', 'ruby19.y', 831)
  def _reduce_248(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 835)
  def _reduce_249(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 840)
  def _reduce_250(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 844)
  def _reduce_251(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 848)
  def _reduce_252(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 853)
  def _reduce_253(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 859)
  def _reduce_254(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 863)
  def _reduce_255(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 868)
  def _reduce_256(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 875)
  def _reduce_257(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 880)
  def _reduce_258(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 884)
  def _reduce_259(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 889)
  def _reduce_260(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 893)
  def _reduce_261(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 897)
  def _reduce_262(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 901)
  def _reduce_263(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 906)
  def _reduce_264(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 910)
  def _reduce_265(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 914)
  def _reduce_266(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

module_eval(<<'.,.,', 'ruby19.y', 927)
  def _reduce_275(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 931)
  def _reduce_276(val, _values, result)
                          result = @builder.begin_keyword(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 935)
  def _reduce_277(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 940)
  def _reduce_278(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 944)
  def _reduce_279(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 950)
  def _reduce_280(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 954)
  def _reduce_281(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 958)
  def _reduce_282(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 962)
  def _reduce_283(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 966)
  def _reduce_284(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 970)
  def _reduce_285(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 974)
  def _reduce_286(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 978)
  def _reduce_287(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 982)
  def _reduce_288(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 986)
  def _reduce_289(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 991)
  def _reduce_290(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 995)
  def _reduce_291(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 999)
  def _reduce_292(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby19.y', 1008)
  def _reduce_294(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1014)
  def _reduce_295(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1022)
  def _reduce_296(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1029)
  def _reduce_297(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1036)
  def _reduce_298(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1040)
  def _reduce_299(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1044)
  def _reduce_300(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1049)
  def _reduce_301(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1053)
  def _reduce_302(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1057)
  def _reduce_303(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1062)
  def _reduce_304(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1070)
  def _reduce_305(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1078)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1082)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1086)
  def _reduce_308(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1092)
  def _reduce_309(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1097)
  def _reduce_310(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1111)
  def _reduce_311(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1119)
  def _reduce_312(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1129)
  def _reduce_313(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1134)
  def _reduce_314(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1146)
  def _reduce_315(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1152)
  def _reduce_316(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1161)
  def _reduce_317(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1165)
  def _reduce_318(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1171)
  def _reduce_319(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1180)
  def _reduce_320(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1184)
  def _reduce_321(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1188)
  def _reduce_322(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1192)
  def _reduce_323(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

module_eval(<<'.,.,', 'ruby19.y', 1201)
  def _reduce_327(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

module_eval(<<'.,.,', 'ruby19.y', 1210)
  def _reduce_331(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 332 omitted

module_eval(<<'.,.,', 'ruby19.y', 1221)
  def _reduce_333(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 334 omitted

# reduce 335 omitted

module_eval(<<'.,.,', 'ruby19.y', 1229)
  def _reduce_336(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1235)
  def _reduce_337(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1240)
  def _reduce_338(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1244)
  def _reduce_339(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby19.y', 1250)
  def _reduce_341(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1257)
  def _reduce_342(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1265)
  def _reduce_343(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1270)
  def _reduce_344(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1276)
  def _reduce_345(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1282)
  def _reduce_346(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1289)
  def _reduce_347(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1293)
  def _reduce_348(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1299)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1306)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1314)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1320)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1327)
  def _reduce_353(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 354 omitted

module_eval(<<'.,.,', 'ruby19.y', 1334)
  def _reduce_355(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1341)
  def _reduce_356(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1345)
  def _reduce_357(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1351)
  def _reduce_358(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1358)
  def _reduce_359(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1363)
  def _reduce_360(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1369)
  def _reduce_361(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1374)
  def _reduce_362(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1380)
  def _reduce_363(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1385)
  def _reduce_364(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1389)
  def _reduce_365(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1394)
  def _reduce_366(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1398)
  def _reduce_367(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1402)
  def _reduce_368(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1407)
  def _reduce_369(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1411)
  def _reduce_370(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1416)
  def _reduce_371(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1420)
  def _reduce_372(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1425)
  def _reduce_373(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 374 omitted

module_eval(<<'.,.,', 'ruby19.y', 1430)
  def _reduce_375(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1434)
  def _reduce_376(val, _values, result)
                          result = [ val[1], val[2] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1441)
  def _reduce_377(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1445)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1450)
  def _reduce_379(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1454)
  def _reduce_380(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1459)
  def _reduce_381(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1463)
  def _reduce_382(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1470)
  def _reduce_383(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1476)
  def _reduce_384(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1482)
  def _reduce_385(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1489)
  def _reduce_386(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1495)
  def _reduce_387(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1501)
  def _reduce_388(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1507)
  def _reduce_389(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1511)
  def _reduce_390(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1517)
  def _reduce_391(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1523)
  def _reduce_392(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1529)
  def _reduce_393(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1533)
  def _reduce_394(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1538)
  def _reduce_395(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1542)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1548)
  def _reduce_397(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1552)
  def _reduce_398(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1559)
  def _reduce_399(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1565)
  def _reduce_400(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 401 omitted

module_eval(<<'.,.,', 'ruby19.y', 1571)
  def _reduce_402(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1584)
  def _reduce_403(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1589)
  def _reduce_404(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 405 omitted

# reduce 406 omitted

module_eval(<<'.,.,', 'ruby19.y', 1596)
  def _reduce_407(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 408 omitted

module_eval(<<'.,.,', 'ruby19.y', 1602)
  def _reduce_409(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

module_eval(<<'.,.,', 'ruby19.y', 1612)
  def _reduce_414(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1617)
  def _reduce_415(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1621)
  def _reduce_416(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1626)
  def _reduce_417(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1630)
  def _reduce_418(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1634)
  def _reduce_419(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1639)
  def _reduce_420(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1644)
  def _reduce_421(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1650)
  def _reduce_422(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1655)
  def _reduce_423(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1659)
  def _reduce_424(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1664)
  def _reduce_425(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1668)
  def _reduce_426(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1673)
  def _reduce_427(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1678)
  def _reduce_428(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1682)
  def _reduce_429(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1687)
  def _reduce_430(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1691)
  def _reduce_431(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1696)
  def _reduce_432(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1700)
  def _reduce_433(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1705)
  def _reduce_434(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1709)
  def _reduce_435(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1714)
  def _reduce_436(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1718)
  def _reduce_437(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1722)
  def _reduce_438(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1727)
  def _reduce_439(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1735)
  def _reduce_440(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1739)
  def _reduce_441(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1743)
  def _reduce_442(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 443 omitted

module_eval(<<'.,.,', 'ruby19.y', 1750)
  def _reduce_444(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1755)
  def _reduce_445(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1760)
  def _reduce_446(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1764)
  def _reduce_447(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1768)
  def _reduce_448(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.integer(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1773)
  def _reduce_449(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.float(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1779)
  def _reduce_450(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1783)
  def _reduce_451(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1787)
  def _reduce_452(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1791)
  def _reduce_453(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1795)
  def _reduce_454(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1800)
  def _reduce_455(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1804)
  def _reduce_456(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1808)
  def _reduce_457(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1812)
  def _reduce_458(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1816)
  def _reduce_459(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1820)
  def _reduce_460(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1824)
  def _reduce_461(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1829)
  def _reduce_462(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1833)
  def _reduce_463(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1838)
  def _reduce_464(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1842)
  def _reduce_465(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1847)
  def _reduce_466(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1851)
  def _reduce_467(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1856)
  def _reduce_468(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1860)
  def _reduce_469(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1864)
  def _reduce_470(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1870)
  def _reduce_471(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1876)
  def _reduce_472(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1881)
  def _reduce_473(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1888)
  def _reduce_474(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1896)
  def _reduce_475(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1902)
  def _reduce_476(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1909)
  def _reduce_477(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1915)
  def _reduce_478(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1922)
  def _reduce_479(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1927)
  def _reduce_480(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1933)
  def _reduce_481(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1940)
  def _reduce_482(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1945)
  def _reduce_483(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1951)
  def _reduce_484(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1956)
  def _reduce_485(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1962)
  def _reduce_486(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1966)
  def _reduce_487(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1971)
  def _reduce_488(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1975)
  def _reduce_489(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1979)
  def _reduce_490(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1983)
  def _reduce_491(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 492 omitted

# reduce 493 omitted

module_eval(<<'.,.,', 'ruby19.y', 1991)
  def _reduce_494(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1997)
  def _reduce_495(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2002)
  def _reduce_496(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2006)
  def _reduce_497(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2011)
  def _reduce_498(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2018)
  def _reduce_499(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2025)
  def _reduce_500(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2029)
  def _reduce_501(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2034)
  def _reduce_502(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2038)
  def _reduce_503(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 504 omitted

# reduce 505 omitted

module_eval(<<'.,.,', 'ruby19.y', 2045)
  def _reduce_506(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2051)
  def _reduce_507(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 508 omitted

# reduce 509 omitted

module_eval(<<'.,.,', 'ruby19.y', 2058)
  def _reduce_510(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2065)
  def _reduce_511(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2069)
  def _reduce_512(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 513 omitted

module_eval(<<'.,.,', 'ruby19.y', 2075)
  def _reduce_514(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2080)
  def _reduce_515(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 516 omitted

module_eval(<<'.,.,', 'ruby19.y', 2086)
  def _reduce_517(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2090)
  def _reduce_518(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2095)
  def _reduce_519(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2099)
  def _reduce_520(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

module_eval(<<'.,.,', 'ruby19.y', 2110)
  def _reduce_537(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2114)
  def _reduce_538(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

module_eval(<<'.,.,', 'ruby19.y', 2120)
  def _reduce_542(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

module_eval(<<'.,.,', 'ruby19.y', 2129)
  def _reduce_546(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby19
  end   # module Parser
