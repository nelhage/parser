# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class RubyMotion < Parser::Base

module_eval(<<'...end rubymotion.y/module_eval...', 'rubymotion.y', 2137)

  def version
    19 # closest released match: v1_9_0_2
  end

  def default_encoding
    Encoding::BINARY
  end
...end rubymotion.y/module_eval...
##### State transition tables begin ###

clist = [
'-279,5,63,64,65,7,51,-279,-279,-279,57,58,-279,-279,-279,61,-279,59',
'60,62,23,24,66,67,476,270,-279,-279,-279,22,28,27,90,89,91,92,-279,-279',
'17,-279,-279,-279,-279,-279,6,41,8,9,94,93,95,84,50,86,85,87,549,88',
'96,97,528,82,83,38,39,37,-279,-279,-279,-279,-279,-279,-279,-279,-279',
'-279,-279,-279,-279,-279,680,449,-279,-279,-279,36,590,-279,30,-86,-279',
'52,53,-279,-279,54,-279,32,-279,570,-279,40,-279,-279,-279,-279,-279',
'-279,-279,18,-279,269,-279,-91,81,73,76,77,655,78,79,559,-93,749,74',
'80,-279,-279,-279,-279,-448,-279,56,-279,75,-91,-90,-448,-448,-448,653',
'-87,-448,-448,-448,-73,-448,-88,-90,680,205,-59,528,-458,-448,270,-448',
'-448,-448,-92,-458,548,569,-88,528,528,-448,-448,785,-448,-448,-448',
'-448,-448,102,528,-87,663,-523,101,102,102,561,560,562,101,101,206,602',
'496,202,203,495,-89,-78,813,-448,-448,-448,-448,-448,-448,-448,-448',
'-448,-448,-448,-448,-448,-448,-89,680,-448,-448,-448,480,-448,-448,-83',
'265,-448,663,601,-448,-448,664,-448,-85,-448,644,-448,534,-448,-448',
'-448,-448,-448,-448,-448,206,-448,269,-448,102,-87,652,-79,602,101,102',
'-90,484,-80,-82,101,-90,-448,-448,-448,-448,-526,-448,559,-448,-84,-448',
'102,-526,-526,-526,-522,101,-526,-526,-526,-522,-526,-88,102,102,206',
'601,-88,101,101,-526,-526,-526,-526,102,-87,270,796,-526,101,-87,-526',
'-526,644,-526,-526,-526,-526,-526,202,203,602,-89,-80,540,-82,102,-89',
'541,-451,-81,101,202,203,559,414,-451,559,561,560,566,-526,-526,-526',
'-526,-526,-526,-526,-526,-526,-526,-526,-526,-526,-526,601,795,-526',
'-526,-526,-526,733,-526,202,203,-526,-461,-526,-526,-526,265,-526,-522',
'-526,732,-526,-526,-526,-526,-526,-526,-526,-526,-526,-93,-526,-526',
'-526,559,-80,483,-82,269,559,-526,561,560,571,561,560,-526,-526,-526',
'-526,-526,-451,-526,712,-526,206,-89,731,-451,-451,-451,-86,485,-451',
'-451,-451,483,-451,206,-90,206,-80,265,-82,-80,-451,-82,-451,-451,-451',
'-80,102,-82,663,-520,-92,101,-451,-451,206,-451,-451,-451,-451,-451',
'561,560,557,-526,102,561,560,564,274,101,-526,-88,370,602,-84,-522,102',
'372,371,-526,-92,101,-451,-451,-451,-451,-451,-451,-451,-451,-451,-451',
'-451,-451,-451,-451,823,-526,-451,-451,-451,-451,-451,-451,-392,583',
'-451,601,-451,-451,-451,764,-451,-520,-451,782,-451,-451,-451,-451,-451',
'-451,-451,-451,-451,-279,-451,73,-451,478,479,-259,-279,-279,-279,-520',
'74,582,-279,-279,760,-279,-451,-451,-451,-451,75,-451,-82,-451,554,-451',
'262,-519,-90,102,-392,555,206,263,101,-279,-279,-392,-279,-279,-279',
'-279,-279,225,720,671,-392,511,510,509,515,512,225,671,-80,511,510,509',
'515,512,-88,296,297,804,-392,-279,-279,-279,-279,-279,-279,-279,-279',
'-279,-279,-279,-279,-279,-279,-448,469,-279,-279,-279,225,590,-448,-79',
'491,-279,468,-519,-279,-87,-461,-448,206,-279,637,-279,-261,-279,-279',
'-279,-279,-279,-279,-279,-526,-279,-58,-279,-455,-519,201,-526,-526',
'-526,265,-455,-448,-526,-526,787,-526,-279,-279,-448,-83,456,-279,898',
'225,-526,-91,492,671,-78,511,510,509,515,512,-86,-526,-526,-454,-526',
'-526,-526,-526,-526,496,-454,265,498,742,-85,511,510,509,515,512,-93',
'222,-453,202,203,224,223,220,221,-453,667,-526,-526,-526,-526,-526,-526',
'-526,-526,-526,-526,-526,-526,-526,-526,-457,-456,-526,-526,-526,517',
'587,-457,-456,206,-526,637,-459,-526,521,520,524,523,-526,-459,-526',
'449,-526,-526,-526,-526,-526,-526,-526,447,-526,-526,-526,445,671,499',
'511,510,509,515,512,496,791,644,498,102,-526,-526,655,-81,101,-526,791',
'644,500,-89,5,63,64,65,7,51,815,706,707,57,58,708,96,97,61,517,59,60',
'62,23,24,66,67,202,203,817,524,523,22,28,27,90,89,91,92,820,671,17,511',
'510,509,515,512,6,41,8,9,94,93,95,84,50,86,85,87,821,88,96,97,655,82',
'83,38,39,37,671,206,511,510,509,515,512,671,667,511,510,509,515,512',
'544,496,-279,855,498,36,824,543,30,-279,205,52,53,416,-523,54,545,32',
'-279,202,203,40,671,667,511,510,509,515,512,18,517,415,670,206,81,73',
'76,77,831,78,79,524,523,832,74,80,5,63,64,65,7,51,56,637,75,57,58,447',
'413,517,61,449,59,60,62,23,24,66,67,449,524,523,840,841,22,28,27,90',
'89,91,92,206,671,17,511,510,509,515,512,6,41,8,9,94,93,95,84,50,86,85',
'87,843,88,96,97,844,82,83,38,39,37,671,847,511,510,509,515,512,671,667',
'511,510,509,515,512,-280,849,544,670,851,36,851,-280,30,918,206,52,53',
'746,856,54,-280,32,545,735,858,40,671,667,511,510,509,515,512,18,517',
'373,860,206,81,73,76,77,534,78,79,524,523,361,74,80,5,63,64,65,7,51',
'56,363,75,57,58,456,206,517,61,866,59,60,62,23,24,66,67,538,524,523',
'868,206,22,28,27,90,89,91,92,871,671,17,511,510,509,515,512,6,41,8,9',
'94,93,95,84,50,86,85,87,-262,88,96,97,456,82,83,38,39,37,671,295,511',
'510,509,515,512,671,667,511,510,509,515,512,410,539,-460,-322,721,36',
'-260,411,30,-460,-322,52,53,714,878,54,412,32,-460,-322,711,40,671,667',
'511,510,509,515,512,18,517,882,883,885,81,73,76,77,447,78,79,524,523',
'294,74,80,5,63,64,65,7,51,56,574,75,57,58,575,891,517,61,578,59,60,62',
'23,24,66,67,-259,524,523,206,683,22,28,27,90,89,91,92,534,671,17,511',
'510,509,515,512,6,41,8,9,94,93,95,84,50,86,85,87,265,88,96,97,676,82',
'83,38,39,37,772,674,511,510,509,900,512,671,667,511,510,509,515,512',
'536,244,-273,199,902,36,903,537,30,-273,200,52,53,673,908,54,535,32',
'-273,198,665,40,671,910,511,510,509,515,512,18,517,913,915,851,81,73',
'76,77,851,78,79,524,523,662,74,80,5,63,64,65,7,51,56,919,75,57,58,659',
'657,517,61,491,59,60,62,23,24,66,67,655,524,523,592,206,22,28,27,90',
'89,91,92,225,772,17,511,510,509,644,512,6,41,8,9,94,93,95,84,50,86,85',
'87,928,88,96,97,486,82,83,38,39,37,225,487,222,851,851,889,224,223,220',
'221,412,-279,890,851,932,225,239,240,-279,36,225,888,30,-523,900,52',
'53,-279,225,54,197,32,222,196,228,40,224,223,220,221,195,225,226,18',
'227,225,637,194,81,73,76,77,222,78,79,447,224,223,74,80,5,63,64,65,7',
'51,56,206,75,57,58,193,489,206,61,626,59,60,62,23,24,66,67,104,105,106',
'107,108,22,28,27,90,89,91,92,225,-73,17,104,105,106,107,108,6,41,8,9',
'94,93,95,84,50,86,85,87,206,88,96,97,474,82,83,38,39,37,225,475,222',
'900,-273,-460,224,223,-280,206,473,-273,-460,948,949,-280,239,240,951',
'36,-273,-460,30,851,-280,52,53,851,851,54,-523,32,222,-522,228,40,224',
'223,220,221,-280,98,226,18,227,851,900,-280,81,73,76,77,206,78,79,851',
'-280,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67',
'104,105,106,107,108,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95',
'84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,229,234,235,236,231,233',
'241,242,237,238,-279,-545,-545,,,239,240,-279,36,,,30,-523,,52,53,-279',
',54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81,73,76,77',
',78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,225,,,,,,,,,,,,,,,,239,240,,36,,,276,,',
'52,53,,,54,,32,222,,228,40,224,223,220,221,,,226,18,227,,,,81,73,76',
'77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,225,-545,-545,-545,-545,231,233,,,-545',
'-545,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223,220',
'221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
'225,,,,,,,,,,,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224',
'223,220,221,,,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7',
'51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
'225,-545,-545,-545,-545,231,233,,,-545,-545,,,,,,239,240,,36,,,276,',
',52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81',
'73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,225,-545,-545,-545,-545,231,233',
',,-545,-545,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223',
'220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65',
'7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,225,-545,-545,-545,-545,231,233,,,-545,-545,,,,,,239,240,,36,,,30',
',,52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81',
'73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,225,229,234,235,236,231,233,241',
',237,238,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223',
'220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65',
'7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,225,229,234,235,236,231,233,,,237,238,,,,,,239,240,,36,,,30,,,52',
'53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81,73',
'76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,225,-545,-545,-545,-545,231,233,',
',-545,-545,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223',
'220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65',
'7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,576,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240',
',36,,,30,,,52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18',
'227,,,,81,73,76,77,,78,79,,,,74,80,,243,-527,-226,,,56,,75,-527,-527',
'-527,,,-527,-527,-527,514,-527,511,510,509,515,512,,,,-527,-527,-527',
'-527,,,,,,,,-527,-527,,-527,-527,-527,-527,-527,,,,,,,,,517,,,,,,,,',
'521,520,524,523,,-527,-527,-527,-527,-527,-527,-527,-527,-527,-527,-527',
'-527,-527,-527,,,-527,-527,-527,,,-527,,,-527,,,-527,-527,,-527,,-527',
',-527,,-527,-527,-527,-527,-527,-527,-527,-528,-527,-527,-527,,,,-528',
'-528,-528,,,-528,-528,-528,225,-528,-527,-527,-527,-527,,-527,,-527',
'-528,-528,-528,-528,,,239,240,,,,-528,-528,,-528,-528,-528,-528,-528',
',,,222,,228,,224,223,220,221,,,,,,,,,,,,-528,-528,-528,-528,-528,-528',
'-528,-528,-528,-528,-528,-528,-528,-528,,,-528,-528,-528,,,-528,,,-528',
',,-528,-528,,-528,,-528,,-528,,-528,-528,-528,-528,-528,-528,-528,,-528',
'-528,-528,,,,,,,,,,,,,,-528,-528,-528,-528,,-528,,-528,5,63,64,65,7',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,',
'17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225',
'229,234,235,236,231,233,241,242,237,238,,-545,-545,,,239,240,,36,,,276',
',,52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,81',
'73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,225,-545,-545,-545,-545,231,233',
',,-545,-545,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223',
'220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65',
'7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,225,,,,,,,,,,,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,,40,224',
'223,220,221,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56',
',75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225',
',,,,,,,,,,,,,,,239,240,,36,,,30,,,52,53,,,54,,32,222,,228,40,224,223',
'220,221,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,',
',,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77',
',78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54',
',32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73',
'76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53',
',,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64,65',
'7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81',
'73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8,9,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
'53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,5,63,64',
'65,7,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,',
',,81,73,76,77,,78,79,,,,74,80,5,63,64,65,7,51,56,,75,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,579,6,41,8,9,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,,239,240,,36,,,30,,,52,53,,,54,,32,222',
',228,40,224,223,220,221,232,230,226,18,227,,,,81,73,76,77,,78,79,,,',
'74,80,,243,-274,,,,56,,75,-274,-274,-274,,,-274,-274,-274,742,-274,511',
'510,509,515,512,,,,,-274,-274,-274,,,,,,,,-274,-274,,-274,-274,-274',
'-274,-274,,,,,,,,,517,,,,,,,,,521,520,524,523,,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,,,-274,-274,-274,,,-274',
',,-274,,,-274,-274,,-274,,-274,,-274,,-274,-274,-274,-274,-274,-274',
'-274,,-274,742,-274,511,510,509,515,512,,,,,,,,,-274,-274,-274,-274',
',-274,,-274,63,64,65,,51,,,,57,58,,,,61,517,59,60,62,23,24,66,67,,521',
'520,524,523,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,',
',,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76',
'77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86',
'85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52',
'53,,,54,,254,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215',
',,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93',
'95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,',
',,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96',
'97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40',
',,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41',
',,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,',
',,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,',
',,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,17,,,,,576,,41,,,94,93,95,84,50,86,85,87,,88',
'96,97,,82,83,38,39,37,225,229,234,235,236,231,233,241,242,237,238,,218',
'219,,,239,240,,210,,,216,,,52,53,,,54,,,222,,228,40,224,223,220,221',
'232,230,226,18,227,,,,81,73,76,77,,78,79,,,,74,80,102,243,,,,101,56',
',75,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97',
',82,83,,514,291,511,510,509,515,512,,,,,,,,,,,,,,,326,,,30,,,52,53,',
',54,,32,,,,517,,,,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80,',
'63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,331,50,86,85,332,,88,96,97',
',82,83,,514,291,511,510,509,515,512,,,,,,,,,,,,338,,,333,,,216,,,52',
'53,,,54,,,,,,517,,,,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,331,50,86,85,332,,88,96,97',
',82,83,,742,291,511,510,509,515,512,,,,,,,,,,,,,,,333,,,216,,,52,53',
',,54,,,,,,517,,,,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80,,63',
'64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290',
'90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215',
',,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',607,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,7,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
'225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240,,36,',
'-226,30,,,52,53,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18',
'227,,,,81,73,76,77,,78,79,,,,74,80,,243,,-226,,363,56,,75,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,',
'17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,',
',,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76',
'77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,',
'54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,7,51,56',
',75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,6,41,8,9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,',
',,,,,,,,,,,,,,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73,76',
'77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91',
'92,,,217,,,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,514,291',
'511,510,509,515,512,,,,,,,,,,,,,,,880,,,216,,,52,53,,,54,,,,,,517,701',
',,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,,,291,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,284,,,216,,,52,53,,,54,,,222,,228,,224,223,220',
'221,232,230,226,,227,,,,81,73,76,77,,78,79,,,,74,80,,243,,293,,,56,',
'75,63,64,65,,51,,,,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97',
',82,83,,514,291,511,510,509,515,512,,,,,,,,,,,,,,,284,,,281,,,52,53',
',,54,,280,,,,517,,,,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,380,,,,40,,,,,,',
',215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,380,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74',
'80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82',
'83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,',
',215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,',
'94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,',
',,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,',
'54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91',
'92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52',
'53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,',
',17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,',
',,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76',
'77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,',
'54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,206,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91',
'92,,,217,,,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,514,291',
'511,510,509,515,512,,,,,,,,,,,,,,,837,,,216,,,52,53,,,54,,,,,,517,503',
',,,,,,,521,520,524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,607,,,,40,,,,,,,,215,,,,',
'81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,',
',216,,,52,53,,,54,,380,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74',
'80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255',
'28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96',
'97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252',
',40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75',
'57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217',
',,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,',
',,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,',
'41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,',
',,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76',
'77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257',
'66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86',
'85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52',
'53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63',
'64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290',
'90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83',
'38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215',
',,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90',
'89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94',
'93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,',
',,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,',
',,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,',
',,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,',
',,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78',
'79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67',
',,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85',
'87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,',
'54,,254,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,',
'51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,',
',,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59',
'60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93',
'95,84,50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210',
',,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,',
',,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,',
',,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259',
'88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,461,53,,,54',
',254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,',
'51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91',
'92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,,,215',
',,,,81,73,76,77,,78,79,,,,74,80,206,63,64,65,,51,56,,75,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41',
',,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,',
',,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79',
',,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,',
',,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',607,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,',
'51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50',
'86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97',
',82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,607,,252',
',40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75',
'57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217',
',,,,,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,,291,225,229,234',
'235,236,231,233,241,242,237,238,,218,219,,,239,240,,284,,,216,,,52,53',
',,54,,,222,,228,,224,223,220,221,232,230,226,,227,,,,81,73,76,77,,78',
'79,,,,74,80,,243,,471,,,56,,75,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97',
',82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,607,,252',
',40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75',
'57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,',
'75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85',
'87,259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,254,,252,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95',
'84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216',
',,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63',
'64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,18,,',
',,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,',
',216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80',
',63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286',
'290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,',
'82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,718,,,,40',
',,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58',
',,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,',
',,,287,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,,514,291,511,510,509',
'515,512,,,,,,,,,,,,,,,284,,,281,,,52,53,,,54,,,,,,517,,,,,,,,,521,520',
'524,523,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61',
',59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,41',
',,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,',
',,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79',
',,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,',
',,,255,286,290,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87',
',88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54',
',,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56',
',75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92',
',,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,',
',,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256',
'257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,,514,291,511,510,509,515,512,,,,,,,,,,',
',,,,284,,,281,,,52,53,,,54,,,,,,517,701,,,,,,,,521,520,524,523,81,73',
'76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53',
',,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91',
'92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,489,,52,53,,,54,,,,,,40,,,,,,,,215,,,,',
'81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,,,291,,,,,,,,,,,,,,,,,,,,284,,,281',
',,52,53,,,54,,,,,,,,,,,,,,,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,',
'81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84',
'50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,',
',52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64',
'65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39',
'37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,',
'81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60',
'62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93',
'95,84,50,86,85,87,,88,96,97,,82,83,,,291,,,,,,,,,,,,,,,,,,,,284,,,281',
',,52,53,,,54,,,,,,,,,,,,,,,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38',
'39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,254,,252,,40,,,,,,',
',215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,7,51,56,,75,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,6,41,8',
'9,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,',
',,,36,,,30,,,52,53,,,54,,32,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,',
',,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96',
'97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40',
',,,,,,,215,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58',
',,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217,,,',
',,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,',
',,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77,',
'78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,256,257,66',
'67,,,,,,255,286,290,90,89,91,92,,,217,,,,,,,287,,,94,93,95,84,50,86',
'85,87,,88,96,97,,82,83,,,291,,,,,,,,,,,,,,,,,,,,284,,,281,,,52,53,,',
'54,,,,,,,,,,,,,,,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75',
'57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91,92,,,217',
',,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,',
',,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81,73,76,77',
',78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50,86,85,87',
'259,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,',
'54,,,,252,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65,,51',
'56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89,91',
'92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,,88,96,97,,82,83,38,39,37',
',,,,,,,,,,,,,,,,,,,210,,,216,,,52,53,,,54,,,,,,40,,,,,,,,215,,,,,81',
'73,76,77,,78,79,,,,74,80,,63,64,65,,51,56,,75,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,95,84,50',
'86,85,87,,88,96,97,,82,83,38,39,37,,,,,,,,,,,,,,,,,,,,210,,,216,,,52',
'53,,,54,,,,,,40,,,,,,,,18,,,,,81,73,76,77,,78,79,,,,74,80,,63,64,65',
',51,56,,75,57,58,,,,61,,59,60,62,256,257,66,67,,,,,,255,286,290,90,89',
'91,92,,,217,,,,,,,41,,,94,93,95,84,50,86,85,87,259,88,96,97,,82,83,38',
'39,37,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240',
',210,,,216,,,52,53,,,54,,,222,252,228,40,224,223,220,221,232,230,226',
'215,227,,,,81,73,76,77,,78,79,,,,74,80,,243,-232,,,,56,,75,-232,-232',
'-232,,,-232,-232,-232,,-232,,,,,,,,,,-232,,,,,,,,,,-232,-232,,-232,-232',
'-232,-232,-232,,,,,,,,,,,,-232,,,,,,,-232,-232,-232,,,-232,-232,-232',
',-232,,,,,,-232,,,,-232,,,-232,,,,,265,-232,-232,-232,,-232,-232,-232',
'-232,-232,,,,,,,,,,,,,,-232,,,,,,,,,-232,,,,,-232,,-232,-232,-232,-232',
'-232,-232,-232,-232,,-232,,-232,,,,,265,-232,-232,-232,-232,,,,,,,,',
'-232,-232,,-232,-232,-232,-232,-232,,,-232,,,,,,,,,,,,,,-232,,,,,-232',
'-232,-232,-232,-232,-232,-232,-232,-232,-232,-232,-232,-232,-232,-232',
',,-232,-232,-232,,,-232,,265,-232,,,-232,-232,,-232,,-232,,-232,,-232',
'-232,-232,-232,-232,-232,-232,-391,-232,-232,-232,,,,-391,-391,-391',
',,-391,-391,-391,,-391,-232,-232,,-232,,-232,,,-391,-391,-391,,,,,,',
',,-391,-391,,-391,-391,-391,-391,-391,,,,,,,,,,,,,,,,,,,,,,,-391,-391',
'-391,-391,-391,-391,-391,-391,-391,-391,-391,-391,-391,-391,,,-391,-391',
'-391,,,-391,,265,-391,,,-391,-391,,-391,,-391,,-391,,-391,-391,-391',
'-391,-391,-391,-391,-286,-391,-391,-391,,,,-286,-286,-286,,,-286,-286',
'-286,,-286,-391,-391,,-391,,-391,,,,-286,-286,,,,,,,,,-286,-286,,-286',
'-286,-286,-286,-286,,,,,,,,,,,,,,,,,,,,,,,-286,-286,-286,-286,-286,-286',
'-286,-286,-286,-286,-286,-286,-286,-286,,,-286,-286,-286,,,-286,,274',
'-286,,,-286,-286,,-286,,-286,,-286,,-286,-286,-286,-286,-286,-286,-286',
',-286,,-286,,,,,,,,,,,,,,-286,-286,,-286,,-286,160,171,161,184,157,177',
'167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170',
'163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154',
'150,151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130,132',
',,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157,177',
'167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170',
'163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154',
'150,151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130,132',
',,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157,177',
'167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170',
'163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154',
'150,151,152,112,114,111,,113,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140',
'136,137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157',
'177,167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178',
'170,163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153',
'154,150,151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140',
'136,137,131,129,121,143,122,,,149,81,,,,,,,,,,,80,160,171,161,184,157',
'177,167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178',
'170,163,,,,179,186,181,348,347,349,346,156,175,174,,,,,,155,162,153',
'154,343,344,345,341,114,86,85,342,,88,,,,,,145,146,,142,124,125,126',
'133,130,132,,,127,128,,,,147,148,134,135,,,,,,353,,,,,,,,139,138,,123',
'144,141,140,136,137,131,129,121,143,122,,,149,160,171,161,184,157,177',
'167,166,187,188,182,165,164,159,185,189,190,169,158,172,176,178,170',
'163,,,,179,186,181,180,173,183,168,156,175,174,,,,,,155,162,153,154',
'150,151,152,112,114,,,113,,,,,,,,145,146,,142,124,125,126,133,130,132',
',,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,593,393,149,,594,,,,,,,,145,146,,142,124,125',
'126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138',
',123,144,141,140,136,137,131,129,121,143,122,923,393,149,,924,,,,,,',
',145,146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134,135,',
',,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143,122',
'691,400,149,,692,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128',
',,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137',
'131,129,121,143,122,925,400,149,,926,,,,,,,,145,146,,142,124,125,126',
'133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123',
'144,141,140,136,137,131,129,121,143,122,942,400,149,,941,,,,,,,,145',
'146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265',
',,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143,122,688,400',
'149,,689,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147',
'148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129',
'121,143,122,389,393,149,,390,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141',
'140,136,137,131,129,121,143,122,633,400,149,,634,,,,,,,,145,146,,142',
'124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,',
',139,138,,123,144,141,140,136,137,131,129,121,143,122,630,393,149,,631',
',,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134',
'135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143',
'122,686,393,149,,687,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127',
'128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,453,393,149,,454,,,,,,,,145,146,,142,124,125',
'126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,,,,,,,,,139,138,,123',
'144,141,140,136,137,131,129,121,143,122,453,393,149,,454,,,,,,,,145',
'146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,',
',,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143,122,595,400',
'149,,596,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147',
'148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129',
'121,143,122,593,393,149,,594,,,,,,,,145,146,,142,124,125,126,133,130',
'132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141',
'140,136,137,131,129,121,143,122,395,400,149,,397,,,,,,,,145,146,,142',
'124,125,126,133,130,132,,,127,128,,,,147,148,134,135,,,,,,265,,,,,,',
',139,138,,123,144,141,140,136,137,131,129,121,143,122,453,393,149,,454',
',,,,,,,145,146,,142,124,125,126,133,130,132,,,127,128,,,,147,148,134',
'135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136,137,131,129,121,143',
'122,595,400,149,,596,,,,,,,,145,146,,142,124,125,126,133,130,132,,,127',
'128,,,,147,148,134,135,,,,,,265,,,,,,,,139,138,,123,144,141,140,136',
'137,131,129,121,143,122,,,149,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232,230',
'226,,227,,225,229,234,235,236,231,233,241,242,237,238,,218,219,,243',
'239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227,,225',
'229,234,235,236,231,233,241,242,237,238,,218,219,,243,239,240,,,,,,',
',,,,,,,,222,,228,,224,223,220,221,232,230,226,,227,,225,229,234,235',
'236,231,233,241,242,237,238,,218,219,,243,239,240,,,,,,,,,,,,,,,222',
',228,,224,223,220,221,232,230,226,,227,,225,229,234,235,236,231,233',
'241,242,237,238,,218,219,206,243,239,240,,,,,,,,,,,,,,,222,,228,,224',
'223,220,221,232,230,226,,227,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,243,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232',
'230,226,,227,,225,229,234,235,236,231,233,241,242,237,238,,218,219,',
'243,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227',
',225,229,234,235,236,231,233,241,242,237,238,,218,219,,243,239,240,',
',,,,,,,,,,,,,222,,228,,224,223,220,221,232,230,226,,227,,225,229,234',
'235,236,231,233,241,242,237,238,,218,219,,243,239,240,,,,,,,,,,,,,,',
'222,,228,,224,223,220,221,232,230,226,,227,,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,243,239,240,,,,,,,,,,,,,,,222,,228,,224',
'223,220,221,232,230,226,,227,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,243,239,240,,,,,,,,,,,,,,,222,,228,,224,223,220,221,232',
'230,226,,227,,,,,,,,,,,,,,,,,243' ]
        racc_action_table = arr = ::Array.new(23141, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'596,216,216,216,216,216,216,596,596,596,216,216,596,596,596,216,596',
'216,216,216,216,216,216,216,284,55,596,596,596,216,216,216,216,216,216',
'216,596,596,216,596,596,596,596,596,216,216,216,216,216,216,216,216',
'216,216,216,216,337,216,216,216,318,216,216,216,216,216,596,596,596',
'596,596,596,596,596,596,596,596,596,596,596,799,617,596,596,596,216',
'596,596,216,324,596,216,216,596,596,216,596,216,596,359,596,216,596',
'596,596,596,596,596,596,216,596,55,596,689,216,216,216,216,654,216,216',
'356,327,617,216,216,596,596,596,596,84,596,216,596,216,596,924,84,84',
'84,502,798,84,84,84,625,84,686,687,531,17,625,317,343,84,26,84,84,84',
'538,343,337,359,923,859,763,84,84,669,84,84,84,84,84,318,684,944,514',
'689,318,799,337,356,356,356,799,337,17,463,307,641,641,307,925,324,734',
'84,84,84,84,84,84,84,84,84,84,84,84,84,84,688,530,84,84,84,292,84,84',
'689,26,84,671,463,84,84,514,84,327,84,864,84,864,84,84,84,84,84,84,84',
'672,84,26,84,3,734,502,798,462,3,531,924,296,686,687,531,924,84,84,84',
'84,595,84,358,84,538,84,317,595,595,595,925,317,595,595,595,688,595',
'923,859,763,641,462,923,859,763,595,595,595,595,684,944,288,684,691',
'684,944,595,595,677,595,595,595,595,595,407,407,443,925,630,333,631',
'530,925,333,342,688,530,556,556,360,211,342,567,358,358,358,595,595',
'595,595,595,595,595,595,595,595,595,595,595,595,443,682,595,595,595',
'691,595,595,550,550,595,209,691,595,595,288,595,691,595,594,595,691',
'595,595,595,595,595,595,595,211,595,595,595,355,630,413,631,288,357',
'691,360,360,360,567,567,633,595,595,595,595,87,595,567,595,407,595,593',
'87,87,87,209,297,87,87,87,295,87,556,594,685,630,290,631,630,87,631',
'87,87,87,630,321,631,742,332,413,321,87,87,287,87,87,87,87,87,355,355',
'355,633,550,357,357,357,286,550,633,593,111,614,295,633,696,111,111',
'633,295,696,87,87,87,87,87,87,87,87,87,87,87,87,87,87,742,633,87,87',
'87,332,87,87,756,390,87,614,332,87,87,646,87,332,87,663,87,332,87,87',
'87,87,87,87,87,397,87,71,87,291,291,645,397,397,397,332,71,389,397,397',
'642,397,87,87,87,87,71,87,390,87,351,87,25,331,390,702,756,351,694,25',
'702,397,397,756,397,397,397,397,397,300,580,670,756,670,670,670,670',
'670,640,855,389,855,855,855,855,855,389,37,37,699,756,397,397,397,397',
'397,397,397,397,397,397,397,397,397,397,331,279,397,397,397,639,397',
'331,580,303,397,278,331,397,580,35,331,277,397,636,397,717,397,397,397',
'397,397,397,397,395,397,275,397,349,331,14,395,395,395,635,349,341,395',
'395,670,395,397,397,341,397,264,397,855,439,395,397,304,898,35,898,898',
'898,898,898,35,395,395,348,395,395,395,395,395,308,348,632,308,601,14',
'601,601,601,601,601,14,439,347,15,15,439,439,439,439,347,898,395,395',
'395,395,395,395,395,395,395,395,395,395,395,395,344,346,395,395,395',
'601,395,344,346,629,395,627,345,395,601,601,601,601,395,345,395,253',
'395,395,395,395,395,395,395,250,395,395,395,249,951,309,951,951,951',
'951,951,650,675,675,650,549,395,395,601,395,549,395,934,934,310,395',
'652,652,652,652,652,652,736,560,560,652,652,560,560,560,652,951,652',
'652,652,652,652,652,652,305,305,737,951,951,652,652,652,652,652,652',
'652,738,785,652,785,785,785,785,785,652,652,652,652,652,652,652,652',
'652,652,652,652,740,652,652,652,741,652,652,652,652,652,667,620,667',
'667,667,667,667,851,785,851,851,851,851,851,335,311,634,785,311,652',
'744,335,652,634,217,652,652,213,634,652,335,652,634,316,316,652,928',
'667,928,928,928,928,928,652,851,212,667,752,652,652,652,652,753,652',
'652,851,851,754,652,652,653,653,653,653,653,653,652,755,652,653,653',
'618,210,928,653,312,653,653,653,653,653,653,653,606,928,928,767,768',
'653,653,653,653,653,653,653,769,517,653,517,517,517,517,517,653,653',
'653,653,653,653,653,653,653,653,653,653,770,653,653,653,774,653,653',
'653,653,653,856,775,856,856,856,856,856,849,517,849,849,849,849,849',
'476,778,879,517,779,653,781,476,653,879,784,653,653,604,786,653,476',
'653,879,599,789,653,847,856,847,847,847,847,847,653,849,191,792,597',
'653,653,653,653,322,653,653,849,849,98,653,653,909,909,909,909,909,909',
'653,323,653,909,909,588,41,847,909,801,909,909,909,909,909,909,909,326',
'847,847,805,806,909,909,909,909,909,909,909,809,787,909,787,787,787',
'787,787,909,909,909,909,909,909,909,909,909,909,909,909,810,909,909',
'909,584,909,909,909,909,909,900,36,900,900,900,900,900,915,787,915,915',
'915,915,915,208,328,282,42,581,909,577,208,909,282,42,909,909,570,822',
'909,208,909,282,42,564,909,913,900,913,913,913,913,913,909,915,825,826',
'827,909,909,909,909,829,909,909,915,915,34,909,909,907,907,907,907,907',
'907,909,374,909,907,907,375,837,913,907,381,907,907,907,907,907,907',
'907,383,913,913,387,533,907,907,907,907,907,907,907,532,932,907,932',
'932,932,932,932,907,907,907,907,907,907,907,907,907,907,907,907,396',
'907,907,907,527,907,907,907,907,907,843,525,843,843,843,857,843,820',
'932,820,820,820,820,820,325,20,838,13,861,907,862,325,907,838,13,907',
'907,522,867,907,325,907,838,13,515,907,662,872,662,662,662,662,662,907',
'820,873,874,875,907,907,907,907,877,907,907,820,820,507,907,907,901',
'901,901,901,901,901,907,880,907,901,901,506,505,662,901,887,901,901',
'901,901,901,901,901,504,662,662,409,493,901,901,901,901,901,901,901',
'438,655,901,655,655,655,490,655,901,901,901,901,901,901,901,901,901',
'901,901,901,893,901,901,901,298,901,901,901,901,901,431,298,438,894',
'895,836,438,438,438,438,298,692,836,896,897,421,431,431,692,901,420',
'836,901,692,899,901,901,692,422,901,12,901,431,11,431,901,431,431,431',
'431,10,423,431,901,431,424,481,9,901,901,901,901,420,901,901,920,420',
'420,901,901,551,551,551,551,551,551,901,922,901,551,551,8,477,472,551',
'470,551,551,551,551,551,551,551,109,109,109,109,109,551,551,551,551',
'551,551,551,419,467,551,362,362,362,362,362,551,551,551,551,551,551',
'551,551,551,551,551,551,466,551,551,551,283,551,551,551,551,551,429',
'283,419,933,285,835,419,419,891,464,283,285,835,935,936,891,429,429',
'937,551,285,835,551,938,891,551,551,939,940,551,941,551,429,942,429',
'551,429,429,429,429,541,1,429,551,429,945,946,541,551,551,551,551,458',
'551,551,956,541,,551,551,695,695,695,695,695,695,551,,551,695,695,,',
',695,,695,695,695,695,695,695,695,4,4,4,4,4,695,695,695,695,695,695',
'695,,,695,,,,,,695,695,695,695,695,695,695,695,695,695,695,695,,695',
'695,695,,695,695,695,695,695,418,418,418,418,418,418,418,418,418,418',
'418,926,418,418,,,418,418,926,695,,,695,926,,695,695,926,,695,,695,418',
',418,695,418,418,418,418,418,418,418,695,418,,,,695,695,695,695,,695',
'695,,,,695,695,281,281,281,281,281,281,695,,695,281,281,,,,281,,281',
'281,281,281,281,281,281,,,,,,281,281,281,281,281,281,281,,,281,,,,,',
'281,281,281,281,281,281,281,281,281,281,281,281,,281,281,281,,281,281',
'281,281,281,430,,,,,,,,,,,,,,,,430,430,,281,,,281,,,281,281,,,281,,281',
'430,,430,281,430,430,430,430,,,430,281,430,,,,281,281,281,281,,281,281',
',,,281,281,700,700,700,700,700,700,281,,281,700,700,,,,700,,700,700',
'700,700,700,700,700,,,,,,700,700,700,700,700,700,700,,,700,,,,,,700',
'700,700,700,700,700,700,700,700,700,700,700,,700,700,700,,700,700,700',
'700,700,428,428,428,428,428,428,428,,,428,428,,,,,,428,428,,700,,,700',
',,700,700,,,700,,700,428,,428,700,428,428,428,428,428,428,428,700,428',
',,,700,700,700,700,,700,700,,,,700,700,710,710,710,710,710,710,700,',
'700,710,710,,,,710,,710,710,710,710,710,710,710,,,,,,710,710,710,710',
'710,710,710,,,710,,,,,,710,710,710,710,710,710,710,710,710,710,710,710',
',710,710,710,,710,710,710,710,710,432,,,,,,,,,,,,,,,,432,432,,710,,',
'710,,,710,710,,,710,,710,432,,432,710,432,432,432,432,,,432,710,432',
',,,710,710,710,710,,710,710,,,,710,710,276,276,276,276,276,276,710,',
'710,276,276,,,,276,,276,276,276,276,276,276,276,,,,,,276,276,276,276',
'276,276,276,,,276,,,,,,276,276,276,276,276,276,276,276,276,276,276,276',
',276,276,276,,276,276,276,276,276,433,433,433,433,433,433,433,,,433',
'433,,,,,,433,433,,276,,,276,,,276,276,,,276,,276,433,,433,276,433,433',
'433,433,433,433,433,276,433,,,,276,276,276,276,,276,276,,,,276,276,623',
'623,623,623,623,623,276,,276,623,623,,,,623,,623,623,623,623,623,623',
'623,,,,,,623,623,623,623,623,623,623,,,623,,,,,,623,623,623,623,623',
'623,623,623,623,623,623,623,,623,623,623,,623,623,623,623,623,434,434',
'434,434,434,434,434,,,434,434,,,,,,434,434,,623,,,623,,,623,623,,,623',
',623,434,,434,623,434,434,434,434,434,434,434,623,434,,,,623,623,623',
'623,,623,623,,,,623,623,644,644,644,644,644,644,623,,623,644,644,,,',
'644,,644,644,644,644,644,644,644,,,,,,644,644,644,644,644,644,644,,',
'644,,,,,,644,644,644,644,644,644,644,644,644,644,644,644,,644,644,644',
',644,644,644,644,644,435,435,435,435,435,435,435,,,435,435,,,,,,435',
'435,,644,,,644,,,644,644,,,644,,644,435,,435,644,435,435,435,435,435',
'435,435,644,435,,,,644,644,644,644,,644,644,,,,644,644,748,748,748,748',
'748,748,644,,644,748,748,,,,748,,748,748,748,748,748,748,748,,,,,,748',
'748,748,748,748,748,748,,,748,,,,,,748,748,748,748,748,748,748,748,748',
'748,748,748,,748,748,748,,748,748,748,748,748,441,441,441,441,441,441',
'441,441,,441,441,,,,,,441,441,,748,,,748,,,748,748,,,748,,748,441,,441',
'748,441,441,441,441,441,441,441,748,441,,,,748,748,748,748,,748,748',
',,,748,748,529,529,529,529,529,529,748,,748,529,529,,,,529,,529,529',
'529,529,529,529,529,,,,,,529,529,529,529,529,529,529,,,529,,,,,,529',
'529,529,529,529,529,529,529,529,529,529,529,,529,529,529,,529,529,529',
'529,529,440,440,440,440,440,440,440,,,440,440,,,,,,440,440,,529,,,529',
',,529,529,,,529,,529,440,,440,529,440,440,440,440,440,440,440,529,440',
',,,529,529,529,529,,529,529,,,,529,529,760,760,760,760,760,760,529,',
'529,760,760,,,,760,,760,760,760,760,760,760,760,,,,,,760,760,760,760',
'760,760,760,,,760,,,,,,760,760,760,760,760,760,760,760,760,760,760,760',
',760,760,760,,760,760,760,760,760,437,437,437,437,437,437,437,,,437',
'437,,,,,,437,437,,760,,,760,,,760,760,,,760,,760,437,,437,760,437,437',
'437,437,437,437,437,760,437,,,,760,760,760,760,,760,760,,,,760,760,622',
'622,622,622,622,622,760,,760,622,622,,,,622,,622,622,622,622,622,622',
'622,,,,,,622,622,622,622,622,622,622,,,622,,,,,378,622,622,622,622,622',
'622,622,622,622,622,622,622,,622,622,622,,622,622,622,622,622,378,378',
'378,378,378,378,378,378,378,378,378,,378,378,,,378,378,,622,,,622,,',
'622,622,,,622,,622,378,,378,622,378,378,378,378,378,378,378,622,378',
',,,622,622,622,622,,622,622,,,,622,622,,378,400,378,,,622,,622,400,400',
'400,,,400,400,400,701,400,701,701,701,701,701,,,,400,400,400,400,,,',
',,,,400,400,,400,400,400,400,400,,,,,,,,,701,,,,,,,,,701,701,701,701',
',400,400,400,400,400,400,400,400,400,400,400,400,400,400,,,400,400,400',
',,400,,,400,,,400,400,,400,,400,,400,,400,400,400,400,400,400,400,401',
'400,400,400,,,,401,401,401,,,401,401,401,426,401,400,400,400,400,,400',
',400,401,401,401,401,,,426,426,,,,401,401,,401,401,401,401,401,,,,426',
',426,,426,426,426,426,,,,,,,,,,,,401,401,401,401,401,401,401,401,401',
'401,401,401,401,401,,,401,401,401,,,401,,,401,,,401,401,,401,,401,,401',
',401,401,401,401,401,401,401,,401,401,401,,,,,,,,,,,,,,401,401,401,401',
',401,,401,30,30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,',
',,30,30,30,30,30,30,30,,,30,,,,,,30,30,30,30,30,30,30,30,30,30,30,30',
',30,30,30,,30,30,30,30,30,417,417,417,417,417,417,417,417,417,417,417',
',417,417,,,417,417,,30,,,30,,,30,30,,,30,,30,417,,417,30,417,417,417',
'417,417,417,417,30,417,,,,30,30,30,30,,30,30,,,,30,30,194,194,194,194',
'194,194,30,,30,194,194,,,,194,,194,194,194,194,194,194,194,,,,,,194',
'194,194,194,194,194,194,,,194,,,,,,194,194,194,194,194,194,194,194,194',
'194,194,194,,194,194,194,,194,194,194,194,194,436,436,436,436,436,436',
'436,,,436,436,,,,,,436,436,,194,,,194,,,194,194,,,194,,194,436,,436',
'194,436,436,436,436,436,436,436,194,436,,,,194,194,194,194,,194,194',
',,,194,194,193,193,193,193,193,193,194,,194,193,193,,,,193,,193,193',
'193,193,193,193,193,,,,,,193,193,193,193,193,193,193,,,193,,,,,,193',
'193,193,193,193,193,193,193,193,193,193,193,,193,193,193,,193,193,193',
'193,193,427,,,,,,,,,,,,,,,,427,427,,193,,,193,,,193,193,,,193,,193,427',
',,193,427,427,427,427,,,,193,,,,,193,193,193,193,,193,193,,,,193,193',
'834,834,834,834,834,834,193,,193,834,834,,,,834,,834,834,834,834,834',
'834,834,,,,,,834,834,834,834,834,834,834,,,834,,,,,,834,834,834,834',
'834,834,834,834,834,834,834,834,,834,834,834,,834,834,834,834,834,425',
',,,,,,,,,,,,,,,425,425,,834,,,834,,,834,834,,,834,,834,425,,425,834',
'425,425,425,425,,,,834,,,,,834,834,834,834,,834,834,,,,834,834,793,793',
'793,793,793,793,834,,834,793,793,,,,793,,793,793,793,793,793,793,793',
',,,,,793,793,793,793,793,793,793,,,793,,,,,,793,793,793,793,793,793',
'793,793,793,793,793,793,,793,793,793,,793,793,793,793,793,,,,,,,,,,',
',,,,,,,,,793,,,793,,,793,793,,,793,,793,,,,793,,,,,,,,793,,,,,793,793',
'793,793,,793,793,,,,793,793,794,794,794,794,794,794,793,,793,794,794',
',,,794,,794,794,794,794,794,794,794,,,,,,794,794,794,794,794,794,794',
',,794,,,,,,794,794,794,794,794,794,794,794,794,794,794,794,,794,794',
'794,,794,794,794,794,794,,,,,,,,,,,,,,,,,,,,794,,,794,,,794,794,,,794',
',794,,,,794,,,,,,,,794,,,,,794,794,794,794,,794,794,,,,794,794,803,803',
'803,803,803,803,794,,794,803,803,,,,803,,803,803,803,803,803,803,803',
',,,,,803,803,803,803,803,803,803,,,803,,,,,,803,803,803,803,803,803',
'803,803,803,803,803,803,,803,803,803,,803,803,803,803,803,,,,,,,,,,',
',,,,,,,,,803,,,803,,,803,803,,,803,,803,,,,803,,,,,,,,803,,,,,803,803',
'803,803,,803,803,,,,803,803,603,603,603,603,603,603,803,,803,603,603',
',,,603,,603,603,603,603,603,603,603,,,,,,603,603,603,603,603,603,603',
',,603,,,,,,603,603,603,603,603,603,603,603,603,603,603,603,,603,603',
'603,,603,603,603,603,603,,,,,,,,,,,,,,,,,,,,603,,,603,,,603,603,,,603',
',603,,,,603,,,,,,,,603,,,,,603,603,603,603,,603,603,,,,603,603,0,0,0',
'0,0,0,603,,603,0,0,,,,0,,0,0,0,0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,,,,,0',
'0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,0,,,0,,,0',
'0,,,0,,0,,,,0,,,,,,,,0,,,,,0,0,0,0,,0,0,,,,0,0,797,797,797,797,797,797',
'0,,0,797,797,,,,797,,797,797,797,797,797,797,797,,,,,,797,797,797,797',
'797,797,797,,,797,,,,,,797,797,797,797,797,797,797,797,797,797,797,797',
',797,797,797,,797,797,797,797,797,,,,,,,,,,,,,,,,,,,,797,,,797,,,797',
'797,,,797,,797,,,,797,,,,,,,,797,,,,,797,797,797,797,,797,797,,,,797',
'797,526,526,526,526,526,526,797,,797,526,526,,,,526,,526,526,526,526',
'526,526,526,,,,,,526,526,526,526,526,526,526,,,526,,,,,,526,526,526',
'526,526,526,526,526,526,526,526,526,,526,526,526,,526,526,526,526,526',
',,,,,,,,,,,,,,,,,,,526,,,526,,,526,526,,,526,,526,,,,526,,,,,,,,526',
',,,,526,526,526,526,,526,526,,,,526,526,51,51,51,51,51,51,526,,526,51',
'51,,,,51,,51,51,51,51,51,51,51,,,,,,51,51,51,51,51,51,51,,,51,,,,,386',
'51,51,51,51,51,51,51,51,51,51,51,51,,51,51,51,,51,51,51,51,51,386,386',
'386,386,386,386,386,386,386,386,386,,386,386,,,386,386,,51,,,51,,,51',
'51,,,51,,51,386,,386,51,386,386,386,386,386,386,386,51,386,,,,51,51',
'51,51,,51,51,,,,51,51,,386,50,,,,51,,51,50,50,50,,,50,50,50,817,50,817',
'817,817,817,817,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50,,,,,,,,,817',
',,,,,,,,817,817,817,817,,50,50,50,50,50,50,50,50,50,50,50,50,50,50,',
',50,50,50,,,50,,,50,,,50,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,815',
'50,815,815,815,815,815,,,,,,,,,50,50,50,50,,50,,50,720,720,720,,720',
',,,720,720,,,,720,815,720,720,720,720,720,720,720,,815,815,815,815,720',
'720,720,720,720,720,720,,,720,,,,,,,720,,,720,720,720,720,720,720,720',
'720,,720,720,720,,720,720,720,720,720,,,,,,,,,,,,,,,,,,,,720,,,720,',
',720,720,,,720,,,,,,720,,,,,,,,720,,,,,720,720,720,720,,720,720,,,,720',
'720,,52,52,52,,52,720,,720,52,52,,,,52,,52,52,52,52,52,52,52,,,,,,52',
'52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,52,52,52,52,52,52,,52,52,52',
',52,52,52,52,52,,,,,,,,,,,,,,,,,,,,52,,,52,,,52,52,,,52,,,,,,52,,,,',
',,,52,,,,,52,52,52,52,,52,52,,,,52,52,,53,53,53,,53,52,,52,53,53,,,',
'53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53',
'53,53,53,53,53,53,53,53,53,53,53,,53,53,53,53,53,,,,,,,,,,,,,,,,,,,',
'53,,,53,,,53,53,,,53,,53,,,,53,,,,,,,,53,,,,,53,53,53,53,,53,53,,,,53',
'53,,54,54,54,,54,53,,53,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54',
'54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54,54,54,54,54,54,54,54,54,',
'54,54,54,54,54,,,,,,,,,,,,,,,,,,,,54,,,54,,,54,54,,,54,,,,,,54,,,,,',
',,54,,,,,54,54,54,54,,54,54,,,,54,54,,412,412,412,,412,54,,54,412,412',
',,,412,,412,412,412,412,412,412,412,,,,,,412,412,412,412,412,412,412',
',,412,,,,,,,412,,,412,412,412,412,412,412,412,412,412,412,412,412,,412',
'412,412,412,412,,,,,,,,,,,,,,,,,,,,412,,,412,,,412,412,,,412,,412,,412',
',412,,,,,,,,412,,,,,412,412,412,412,,412,412,,,,412,412,,57,57,57,,57',
'412,,412,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57',
',,57,,,,,,,57,,,57,57,57,57,57,57,57,57,,57,57,57,,57,57,57,57,57,,',
',,,,,,,,,,,,,,,,,57,,,57,,,57,57,,,57,,,,,,57,,,,,,,,57,,,,,57,57,57',
'57,,57,57,,,,57,57,,58,58,58,,58,57,,57,58,58,,,,58,,58,58,58,58,58',
'58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,58,58,58,58,58',
'58,,58,58,58,,58,58,58,58,58,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,58,,,58',
',,,,,58,,,,,,,,58,,,,,58,58,58,58,,58,58,,,,58,58,,61,61,61,,61,58,',
'58,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61',
',,,,598,,61,,,61,61,61,61,61,61,61,61,,61,61,61,,61,61,61,61,61,598',
'598,598,598,598,598,598,598,598,598,598,,598,598,,,598,598,,61,,,61',
',,61,61,,,61,,,598,,598,61,598,598,598,598,598,598,598,61,598,,,,61',
'61,61,61,,61,61,,,,61,61,61,598,,,,61,61,,61,62,62,62,,62,,,,62,62,',
',,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,',
',62,62,62,62,62,62,62,62,,62,62,62,,62,62,,657,62,657,657,657,657,657',
',,,,,,,,,,,,,,62,,,62,,,62,62,,,62,,62,,,,657,,,,,,,,,657,657,657,657',
'62,62,62,62,,62,62,,,,62,62,,63,63,63,,63,62,,62,63,63,,,,63,,63,63',
'63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63',
'63,63,63,63,,63,63,63,,63,63,,844,63,844,844,844,844,844,,,,,,,,,,,',
'63,,,63,,,63,,,63,63,,,63,,,,,,844,,,,,,,,,844,844,844,844,63,63,63',
'63,,63,63,,,,63,63,,64,64,64,,64,63,,63,64,64,,,,64,,64,64,64,64,64',
'64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,,64,,,64,64,64,64,64,64,64',
'64,,64,64,64,,64,64,,910,64,910,910,910,910,910,,,,,,,,,,,,,,,64,,,64',
',,64,64,,,64,,,,,,910,,,,,,,,,910,910,910,910,64,64,64,64,,64,64,,,',
'64,64,,414,414,414,,414,64,,64,414,414,,,,414,,414,414,414,414,414,414',
'414,,,,,,414,414,414,414,414,414,414,,,414,,,,,,,414,,,414,414,414,414',
'414,414,414,414,,414,414,414,,414,414,414,414,414,,,,,,,,,,,,,,,,,,',
',414,,,414,,,414,414,,,414,,,,,,414,,,,,,,,414,,,,,414,414,414,414,',
'414,414,,,,414,414,,40,40,40,,40,414,,414,40,40,,,,40,,40,40,40,40,40',
'40,40,,,,,,40,40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40',
'40,,40,40,40,,40,40,40,40,40,,,,,,,,,,,,,,,,,,,,40,,,40,,,40,40,,,40',
',,,,,40,,,,,,,,40,,,,,40,40,40,40,,40,40,,,,40,40,,39,39,39,,39,40,',
'40,39,39,,,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39',
',,,,,,39,,,39,39,39,39,39,39,39,39,,39,39,39,,39,39,39,39,39,,,,,,,',
',,,,,,,,,,,,39,,,39,,,39,39,,,39,,,,,,39,,,,,,,,39,,,,,39,39,39,39,',
'39,39,,,,39,39,,38,38,38,,38,39,,39,38,38,,,,38,,38,38,38,38,38,38,38',
',,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,38,38,38,38,38,38,,38',
'38,38,,38,38,38,38,38,,,,,,,,,,,,,,,,,,,,38,,,38,,,38,38,,,38,,,,,,38',
',,,,,,,38,,,,,38,38,38,38,,38,38,,,,38,38,,796,796,796,,796,38,,38,796',
'796,,,,796,,796,796,796,796,796,796,796,,,,,,796,796,796,796,796,796',
'796,,,796,,,,,,,796,,,796,796,796,796,796,796,796,796,,796,796,796,',
'796,796,796,796,796,,,,,,,,,,,,,,,,,,,,796,,,796,,,796,796,,,796,,796',
',,,796,,,,,,,,796,,,,,796,796,796,796,,796,796,,,,796,796,,100,100,100',
'100,100,796,,796,100,100,,,,100,,100,100,100,100,100,100,100,,,,,,100',
'100,100,100,100,100,100,,,100,,,,,,100,100,100,100,100,100,100,100,100',
'100,100,100,,100,100,100,,100,100,100,100,100,616,616,616,616,616,616',
'616,616,616,616,616,,616,616,,,616,616,,100,,616,100,,,100,100,,,100',
',100,616,,616,100,616,616,616,616,616,616,616,100,616,,,,100,100,100',
'100,,100,100,,,,100,100,,616,,616,,100,100,,100,104,104,104,,104,,,',
'104,104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104,104',
'104,104,,,104,,,,,,,104,,,104,104,104,104,104,104,104,104,,104,104,104',
',104,104,104,104,104,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,104,,,104,,',
',,,104,,,,,,,,104,,,,,104,104,104,104,,104,104,,,,104,104,,105,105,105',
',105,104,,104,105,105,,,,105,,105,105,105,105,105,105,105,,,,,,105,105',
'105,105,105,105,105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,105',
',105,105,105,,105,105,105,105,105,,,,,,,,,,,,,,,,,,,,105,,,105,,,105',
'105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,,105,105,,,,105,105',
',106,106,106,,106,105,,105,106,106,,,,106,,106,106,106,106,106,106,106',
',,,,,106,106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,106,106,106',
'106,106,106,,106,106,106,,106,106,106,106,106,,,,,,,,,,,,,,,,,,,,106',
',,106,,,106,106,,,106,,,,,,106,,,,,,,,106,,,,,106,106,106,106,,106,106',
',,,106,106,,107,107,107,,107,106,,106,107,107,,,,107,,107,107,107,107',
'107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,,,107,,,107,107',
'107,107,107,107,107,107,,107,107,107,,107,107,107,107,107,,,,,,,,,,',
',,,,,,,,,107,,,107,,,107,107,,,107,,,,,,107,,,,,,,,107,,,,,107,107,107',
'107,,107,107,,,,107,107,,108,108,108,108,108,107,,107,108,108,,,,108',
',108,108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108',
',,,,,108,108,108,108,108,108,108,108,108,108,108,108,,108,108,108,,108',
'108,108,108,108,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,108,,,108,,108,,',
',108,,,,,,,,108,,,,,108,108,108,108,,108,108,,,,108,108,,813,813,813',
',813,108,,108,813,813,,,,813,,813,813,813,813,813,813,813,,,,,,813,813',
'813,813,813,813,813,,,813,,,,,,,813,,,813,813,813,813,813,813,813,813',
',813,813,813,,813,813,813,813,813,,,,,,,,,,,,,,,,,,,,813,,,813,,,813',
'813,,,813,,,,,,813,,,,,,,,813,,,,,813,813,813,813,,813,813,,,,813,813',
',823,823,823,,823,813,,813,823,823,,,,823,,823,823,823,823,823,823,823',
',,,,,823,823,823,823,823,823,823,,,823,,,,,,,823,,,823,823,823,823,823',
'823,823,823,,823,823,823,,823,823,,870,823,870,870,870,870,870,,,,,',
',,,,,,,,,823,,,823,,,823,823,,,823,,,,,,870,870,,,,,,,,870,870,870,870',
'823,823,823,823,,823,823,,,,823,823,,791,791,791,,791,823,,823,791,791',
',,,791,,791,791,791,791,791,791,791,,,,,,791,791,791,791,791,791,791',
',,791,,,,,,,791,,,791,791,791,791,791,791,791,791,,791,791,791,,791',
'791,791,791,791,,,,,,,,,,,,,,,,,,,,791,,,791,,,791,791,,,791,,,,,,791',
',,,,,,,791,,,,,791,791,791,791,,791,791,,,,791,791,,32,32,32,,32,791',
',791,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32',
',,,,,,32,,,32,32,32,32,32,32,32,32,,32,32,32,,32,32,,,32,723,723,723',
'723,723,723,723,723,723,723,723,,723,723,,,723,723,,32,,,32,,,32,32',
',,32,,,723,,723,,723,723,723,723,723,723,723,,723,,,,32,32,32,32,,32',
'32,,,,32,32,,723,,32,,,32,,32,31,31,31,,31,,,,31,31,,,,31,,31,31,31',
'31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31,31,31,31,31',
'31,31,31,,31,31,31,,31,31,,659,31,659,659,659,659,659,,,,,,,,,,,,,,',
'31,,,31,,,31,31,,,31,,31,,,,659,,,,,,,,,659,659,659,659,31,31,31,31',
',31,31,,,,31,31,,195,195,195,,195,31,,31,195,195,,,,195,,195,195,195',
'195,195,195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,,195,,,195',
'195,195,195,195,195,195,195,,195,195,195,,195,195,195,195,195,,,,,,',
',,,,,,,,,,,,,195,,,195,,,195,195,,,195,,195,,,,195,,,,,,,,195,,,,,195',
'195,195,195,,195,195,,,,195,195,,196,196,196,,196,195,,195,196,196,',
',,196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196,196,196',
',,196,,,,,,,196,,,196,196,196,196,196,196,196,196,,196,196,196,,196',
'196,196,196,196,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,196,,,196,,196,,',
',196,,,,,,,,196,,,,,196,196,196,196,,196,196,,,,196,196,,197,197,197',
',197,196,,196,197,197,,,,197,,197,197,197,197,197,197,197,,,,,,197,197',
'197,197,197,197,197,,,197,,,,,,,197,,,197,197,197,197,197,197,197,197',
',197,197,197,,197,197,197,197,197,,,,,,,,,,,,,,,,,,,,197,,,197,,,197',
'197,,,197,,,,,,197,,,,,,,,197,,,,,197,197,197,197,,197,197,,,,197,197',
',198,198,198,,198,197,,197,198,198,,,,198,,198,198,198,198,198,198,198',
',,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,198,198,198',
'198,198,198,198,198,198,198,,198,198,198,198,198,,,,,,,,,,,,,,,,,,,',
'198,,,198,,,198,198,,,198,,198,,198,,198,,,,,,,,198,,,,,198,198,198',
'198,,198,198,,,,198,198,,415,415,415,,415,198,,198,415,415,,,,415,,415',
'415,415,415,415,415,415,,,,,,415,415,415,415,415,415,415,,,415,,,,,',
',415,,,415,415,415,415,415,415,415,415,,415,415,415,,415,415,415,415',
'415,,,,,,,,,,,,,,,,,,,,415,,,415,,,415,415,,,415,,,,,,415,,,,,,,,415',
',,,,415,415,415,415,,415,415,,,,415,415,,416,416,416,,416,415,,415,416',
'416,,,,416,,416,416,416,416,416,416,416,,,,,,416,416,416,416,416,416',
'416,,,416,,,,,,,416,,,416,416,416,416,416,416,416,416,,416,416,416,',
'416,416,416,416,416,,,,,,,,,,,,,,,,,,,,416,,,416,,,416,416,,,416,,,',
',,416,,,,,,,,416,,,,,416,416,416,416,,416,416,,,,416,416,,201,201,201',
',201,416,,416,201,201,,,,201,,201,201,201,201,201,201,201,,,,,,201,201',
'201,201,201,201,201,,,201,,,,,,,201,,,201,201,201,201,201,201,201,201',
',201,201,201,,201,201,201,201,201,,,,,,,,,,,,,,,,,,,,201,,,201,,,201',
'201,,,201,,,,,,201,,,,,,,,201,,,,,201,201,201,201,,201,201,,,,201,201',
',202,202,202,,202,201,,201,202,202,,,,202,,202,202,202,202,202,202,202',
',,,,,202,202,202,202,202,202,202,,,202,,,,,,,202,,,202,202,202,202,202',
'202,202,202,,202,202,202,,202,202,202,202,202,,,,,,,,,,,,,,,,,,,,202',
',,202,,,202,202,,,202,,,,,,202,,,,,,,,202,,,,,202,202,202,202,,202,202',
',,,202,202,,203,203,203,,203,202,,202,203,203,,,,203,,203,203,203,203',
'203,203,203,,,,,,203,203,203,203,203,203,203,,,203,,,,,,,203,,,203,203',
'203,203,203,203,203,203,,203,203,203,,203,203,203,203,203,,,,,,,,,,',
',,,,,,,,,203,,,203,,,203,203,,,203,,,,,,203,,,,,,,,203,,,,,203,203,203',
'203,,203,203,,,,203,203,,204,204,204,,204,203,,203,204,204,,,,204,,204',
'204,204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204,,,,,',
',204,,,204,204,204,204,204,204,204,204,,204,204,204,,204,204,204,204',
'204,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,204,,,204,,,,,,204,,,,,,,,204',
',,,,204,204,204,204,,204,204,,,,204,204,,205,205,205,,205,204,,204,205',
'205,,,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205,205,205',
'205,,,205,,,,,,,205,,,205,205,205,205,205,205,205,205,,205,205,205,',
'205,205,205,205,205,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,205,,,205,,,',
',,205,,,,,,,,205,,,,,205,205,205,205,,205,205,,,,205,205,205,764,764',
'764,,764,205,,205,764,764,,,,764,,764,764,764,764,764,764,764,,,,,,764',
'764,764,764,764,764,764,,,764,,,,,,,764,,,764,764,764,764,764,764,764',
'764,,764,764,764,,764,764,,315,764,315,315,315,315,315,,,,,,,,,,,,,',
',764,,,764,,,764,764,,,764,,,,,,315,315,,,,,,,,315,315,315,315,764,764',
'764,764,,764,764,,,,764,764,,495,495,495,,495,764,,764,495,495,,,,495',
',495,495,495,495,495,495,495,,,,,,495,495,495,495,495,495,495,,,495',
',,,,,,495,,,495,495,495,495,495,495,495,495,495,495,495,495,,495,495',
'495,495,495,,,,,,,,,,,,,,,,,,,,495,,,495,,,495,495,,,495,,495,,,,495',
',,,,,,,495,,,,,495,495,495,495,,495,495,,,,495,495,,491,491,491,,491',
'495,,495,491,491,,,,491,,491,491,491,491,491,491,491,,,,,,491,491,491',
'491,491,491,491,,,491,,,,,,,491,,,491,491,491,491,491,491,491,491,,491',
'491,491,,491,491,491,491,491,,,,,,,,,,,,,,,,,,,,491,,,491,,,491,491',
',,491,,491,,,,491,,,,,,,,491,,,,,491,491,491,491,,491,491,,,,491,491',
',24,24,24,,24,491,,491,24,24,,,,24,,24,24,24,24,24,24,24,,,,,,24,24',
'24,24,24,24,24,,,24,,,,,,,24,,,24,24,24,24,24,24,24,24,24,24,24,24,',
'24,24,24,24,24,,,,,,,,,,,,,,,,,,,,24,,,24,,,24,24,,,24,,24,,24,,24,',
',,,,,,24,,,,,24,24,24,24,,24,24,,,,24,24,,749,749,749,,749,24,,24,749',
'749,,,,749,,749,749,749,749,749,749,749,,,,,,749,749,749,749,749,749',
'749,,,749,,,,,,,749,,,749,749,749,749,749,749,749,749,749,749,749,749',
',749,749,749,749,749,,,,,,,,,,,,,,,,,,,,749,,,749,,,749,749,,,749,,749',
',749,,749,,,,,,,,749,,,,,749,749,749,749,,749,749,,,,749,749,,23,23',
'23,,23,749,,749,23,23,,,,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23',
'23,23,,,23,,,,,,,23,,,23,23,23,23,23,23,23,23,23,23,23,23,,23,23,23',
'23,23,,,,,,,,,,,,,,,,,,,,23,,,23,,,23,23,,,23,,23,,23,,23,,,,,,,,23',
',,,,23,23,23,23,,23,23,,,,23,23,,215,215,215,,215,23,,23,215,215,,,',
'215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,',
'215,,,,,,,215,,,215,215,215,215,215,215,215,215,,215,215,215,,215,215',
'215,215,215,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,215,,,215,,,,,,215,,',
',,,,,215,,,,,215,215,215,215,,215,215,,,,215,215,,22,22,22,,22,215,',
'215,22,22,,,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,,,22',
',,,,,,22,,,22,22,22,22,22,22,22,22,22,22,22,22,,22,22,22,22,22,,,,,',
',,,,,,,,,,,,,,22,,,22,,,22,22,,,22,,22,,22,,22,,,,,,,,22,,,,,22,22,22',
'22,,22,22,,,,22,22,,746,746,746,,746,22,,22,746,746,,,,746,,746,746',
'746,746,746,746,746,,,,,,746,746,746,746,746,746,746,,,746,,,,,,,746',
',,746,746,746,746,746,746,746,746,746,746,746,746,,746,746,746,746,746',
',,,,,,,,,,,,,,,,,,,746,,,746,,,746,746,,,746,,746,,746,,746,,,,,,,,746',
',,,,746,746,746,746,,746,746,,,,746,746,,218,218,218,,218,746,,746,218',
'218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218',
'218,,,218,,,,,,,218,,,218,218,218,218,218,218,218,218,,218,218,218,',
'218,218,218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,218,,,218,,,',
',,218,,,,,,,,218,,,,,218,218,218,218,,218,218,,,,218,218,,219,219,219',
',219,218,,218,219,219,,,,219,,219,219,219,219,219,219,219,,,,,,219,219',
'219,219,219,219,219,,,219,,,,,,,219,,,219,219,219,219,219,219,219,219',
',219,219,219,,219,219,219,219,219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219',
'219,,,219,,,,,,219,,,,,,,,219,,,,,219,219,219,219,,219,219,,,,219,219',
',220,220,220,,220,219,,219,220,220,,,,220,,220,220,220,220,220,220,220',
',,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,220,220,220',
'220,220,220,,220,220,220,,220,220,220,220,220,,,,,,,,,,,,,,,,,,,,220',
',,220,,,220,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,,220,220',
',,,220,220,,221,221,221,,221,220,,220,221,221,,,,221,,221,221,221,221',
'221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221',
'221,221,221,221,221,221,,221,221,221,,221,221,221,221,221,,,,,,,,,,',
',,,,,,,,,221,,,221,,,221,221,,,221,,,,,,221,,,,,,,,221,,,,,221,221,221',
'221,,221,221,,,,221,221,,222,222,222,,222,221,,221,222,222,,,,222,,222',
'222,222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,',
',222,,,222,222,222,222,222,222,222,222,,222,222,222,,222,222,222,222',
'222,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,222,,,222,,,,,,222,,,,,,,,222',
',,,,222,222,222,222,,222,222,,,,222,222,,223,223,223,,223,222,,222,223',
'223,,,,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,223,223,223,223,223,223,,223,223,223,',
'223,223,223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,223,,,223,,,',
',,223,,,,,,,,223,,,,,223,223,223,223,,223,223,,,,223,223,,224,224,224',
',224,223,,223,224,224,,,,224,,224,224,224,224,224,224,224,,,,,,224,224',
'224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224,224,224,224,224',
',224,224,224,,224,224,224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224',
'224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,,224,224,,,,224,224',
',225,225,225,,225,224,,224,225,225,,,,225,,225,225,225,225,225,225,225',
',,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,225,225,225',
'225,225,225,,225,225,225,,225,225,225,225,225,,,,,,,,,,,,,,,,,,,,225',
',,225,,,225,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,,225,225',
',,,225,225,,226,226,226,,226,225,,225,226,226,,,,226,,226,226,226,226',
'226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226',
'226,226,226,226,226,226,,226,226,226,,226,226,226,226,226,,,,,,,,,,',
',,,,,,,,,226,,,226,,,226,226,,,226,,,,,,226,,,,,,,,226,,,,,226,226,226',
'226,,226,226,,,,226,226,,227,227,227,,227,226,,226,227,227,,,,227,,227',
'227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227,,,227,,,,,',
',227,,,227,227,227,227,227,227,227,227,,227,227,227,,227,227,227,227',
'227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,227,,,227,,,,,,227,,,,,,,,227',
',,,,227,227,227,227,,227,227,,,,227,227,,228,228,228,,228,227,,227,228',
'228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228,228,228',
'228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,,228,228,228,',
'228,228,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,228,,,228,,,',
',,228,,,,,,,,228,,,,,228,228,228,228,,228,228,,,,228,228,,229,229,229',
',229,228,,228,229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229',
'229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229,229',
',229,229,229,,229,229,229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229,,,229',
'229,,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,,229,229,,,,229,229',
',230,230,230,,230,229,,229,230,230,,,,230,,230,230,230,230,230,230,230',
',,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230',
'230,230,230,,230,230,230,,230,230,230,230,230,,,,,,,,,,,,,,,,,,,,230',
',,230,,,230,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,,230,230',
',,,230,230,,231,231,231,,231,230,,230,231,231,,,,231,,231,231,231,231',
'231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231',
'231,231,231,231,231,231,,231,231,231,,231,231,231,231,231,,,,,,,,,,',
',,,,,,,,,231,,,231,,,231,231,,,231,,,,,,231,,,,,,,,231,,,,,231,231,231',
'231,,231,231,,,,231,231,,232,232,232,,232,231,,231,232,232,,,,232,,232',
'232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,',
',232,,,232,232,232,232,232,232,232,232,,232,232,232,,232,232,232,232',
'232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,232,,,232,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,,232,232,,,,232,232,,233,233,233,,233,232,,232,233',
'233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233',
'233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233,,233,233,233,',
'233,233,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,233,,,233,,,',
',,233,,,,,,,,233,,,,,233,233,233,233,,233,233,,,,233,233,,234,234,234',
',234,233,,233,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234,234',
'234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,234',
',234,234,234,,234,234,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234',
'234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,,234,234,,,,234,234',
',235,235,235,,235,234,,234,235,235,,,,235,,235,235,235,235,235,235,235',
',,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235,235,235',
'235,235,235,,235,235,235,,235,235,235,235,235,,,,,,,,,,,,,,,,,,,,235',
',,235,,,235,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,,235,235',
',,,235,235,,236,236,236,,236,235,,235,236,236,,,,236,,236,236,236,236',
'236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236',
'236,236,236,236,236,236,,236,236,236,,236,236,236,236,236,,,,,,,,,,',
',,,,,,,,,236,,,236,,,236,236,,,236,,,,,,236,,,,,,,,236,,,,,236,236,236',
'236,,236,236,,,,236,236,,237,237,237,,237,236,,236,237,237,,,,237,,237',
'237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,',
',237,,,237,237,237,237,237,237,237,237,,237,237,237,,237,237,237,237',
'237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,237,,,237,,,,,,237,,,,,,,,237',
',,,,237,237,237,237,,237,237,,,,237,237,,238,238,238,,238,237,,237,238',
'238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238,238,238,238,238',
'238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,238,,238,238,238,',
'238,238,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,238,,,238,,,',
',,238,,,,,,,,238,,,,,238,238,238,238,,238,238,,,,238,238,,239,239,239',
',239,238,,238,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239,239',
'239,239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239,239,239,239',
',239,239,239,,239,239,239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239',
'239,,,239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,,239,239,,,,239,239',
',240,240,240,,240,239,,239,240,240,,,,240,,240,240,240,240,240,240,240',
',,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240',
'240,240,240,,240,240,240,,240,240,240,240,240,,,,,,,,,,,,,,,,,,,,240',
',,240,,,240,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240,,240,240',
',,,240,240,,241,241,241,,241,240,,240,241,241,,,,241,,241,241,241,241',
'241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241',
'241,241,241,241,241,241,,241,241,241,,241,241,241,241,241,,,,,,,,,,',
',,,,,,,,,241,,,241,,,241,241,,,241,,,,,,241,,,,,,,,241,,,,,241,241,241',
'241,,241,241,,,,241,241,,242,242,242,,242,241,,241,242,242,,,,242,,242',
'242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,',
',242,,,242,242,242,242,242,242,242,242,,242,242,242,,242,242,242,242',
'242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,242,,,242,,,,,,242,,,,,,,,242',
',,,,242,242,242,242,,242,242,,,,242,242,,243,243,243,,243,242,,242,243',
'243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243,243,243',
'243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,243,,243,243,243,',
'243,243,243,243,243,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,243,,,243,,,',
',,243,,,,,,,,243,,,,,243,243,243,243,,243,243,,,,243,243,,735,735,735',
',735,243,,243,735,735,,,,735,,735,735,735,735,735,735,735,,,,,,735,735',
'735,735,735,735,735,,,735,,,,,,,735,,,735,735,735,735,735,735,735,735',
',735,735,735,,735,735,735,735,735,,,,,,,,,,,,,,,,,,,,735,,,735,,,735',
'735,,,735,,,,,,735,,,,,,,,735,,,,,735,735,735,735,,735,735,,,,735,735',
',733,733,733,,733,735,,735,733,733,,,,733,,733,733,733,733,733,733,733',
',,,,,733,733,733,733,733,733,733,,,733,,,,,,,733,,,733,733,733,733,733',
'733,733,733,,733,733,733,,733,733,733,733,733,,,,,,,,,,,,,,,,,,,,733',
',,733,,,733,733,,,733,,,,,,733,,,,,,,,733,,,,,733,733,733,733,,733,733',
',,,733,733,,732,732,732,,732,733,,733,732,732,,,,732,,732,732,732,732',
'732,732,732,,,,,,732,732,732,732,732,732,732,,,732,,,,,,,732,,,732,732',
'732,732,732,732,732,732,,732,732,732,,732,732,732,732,732,,,,,,,,,,',
',,,,,,,,,732,,,732,,,732,732,,,732,,,,,,732,,,,,,,,732,,,,,732,732,732',
'732,,732,732,,,,732,732,,252,252,252,,252,732,,732,252,252,,,,252,,252',
'252,252,252,252,252,252,,,,,,252,252,252,252,252,252,252,,,252,,,,,',
',252,,,252,252,252,252,252,252,252,252,,252,252,252,,252,252,252,252',
'252,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,252,,,252,,,,,,252,,,,,,,,252',
',,,,252,252,252,252,,252,252,,,,252,252,,731,731,731,,731,252,,252,731',
'731,,,,731,,731,731,731,731,731,731,731,,,,,,731,731,731,731,731,731',
'731,,,731,,,,,,,731,,,731,731,731,731,731,731,731,731,,731,731,731,',
'731,731,731,731,731,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,731,,,731,,,',
',,731,,,,,,,,731,,,,,731,731,731,731,,731,731,,,,731,731,,254,254,254',
',254,731,,731,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254',
'254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254,254',
',254,254,254,,254,254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,,,254',
'254,,,254,,,,,,254,,,,,,,,254,,,,,254,254,254,254,,254,254,,,,254,254',
',259,259,259,,259,254,,254,259,259,,,,259,,259,259,259,259,259,259,259',
',,,,,259,259,259,259,259,259,259,,,259,,,,,,,259,,,259,259,259,259,259',
'259,259,259,,259,259,259,,259,259,259,259,259,,,,,,,,,,,,,,,,,,,,259',
',,259,,,259,259,,,259,,,,,,259,,,,,,,,259,,,,,259,259,259,259,,259,259',
',,,259,259,,489,489,489,,489,259,,259,489,489,,,,489,,489,489,489,489',
'489,489,489,,,,,,489,489,489,489,489,489,489,,,489,,,,,,,489,,,489,489',
'489,489,489,489,489,489,,489,489,489,,489,489,489,489,489,,,,,,,,,,',
',,,,,,,,,489,,,489,,,489,489,,,489,,,,,,489,,,,,,,,489,,,,,489,489,489',
'489,,489,489,,,,489,489,,534,534,534,,534,489,,489,534,534,,,,534,,534',
'534,534,534,534,534,534,,,,,,534,534,534,534,534,534,534,,,534,,,,,',
',534,,,534,534,534,534,534,534,534,534,,534,534,534,,534,534,534,534',
'534,,,,,,,,,,,,,,,,,,,,534,,,534,,,534,534,,,534,,534,,,,534,,,,,,,',
'534,,,,,534,534,534,534,,534,534,,,,534,534,,498,498,498,,498,534,,534',
'498,498,,,,498,,498,498,498,498,498,498,498,,,,,,498,498,498,498,498',
'498,498,,,498,,,,,,,498,,,498,498,498,498,498,498,498,498,498,498,498',
'498,,498,498,498,498,498,,,,,,,,,,,,,,,,,,,,498,,,498,,,498,498,,,498',
',,,,,498,,,,,,,,498,,,,,498,498,498,498,,498,498,,,,498,498,,265,265',
'265,,265,498,,498,265,265,,,,265,,265,265,265,265,265,265,265,,,,,,265',
'265,265,265,265,265,265,,,265,,,,,,,265,,,265,265,265,265,265,265,265',
'265,265,265,265,265,,265,265,265,265,265,,,,,,,,,,,,,,,,,,,,265,,,265',
',,265,265,,,265,,265,,265,,265,,,,,,,,265,,,,,265,265,265,265,,265,265',
',,,265,265,,266,266,266,,266,265,,265,266,266,,,,266,,266,266,266,266',
'266,266,266,,,,,,266,266,266,266,266,266,266,,,266,,,,,,,266,,,266,266',
'266,266,266,266,266,266,266,266,266,266,,266,266,266,266,266,,,,,,,',
',,,,,,,,,,,,266,,,266,,,266,266,,,266,,266,,266,,266,,,,,,,,266,,,,',
'266,266,266,266,,266,266,,,,266,266,,274,274,274,,274,266,,266,274,274',
',,,274,,274,274,274,274,274,274,274,,,,,,274,274,274,274,274,274,274',
',,274,,,,,,,274,,,274,274,274,274,274,274,274,274,274,274,274,274,,274',
'274,274,274,274,,,,,,,,,,,,,,,,,,,,274,,,274,,,274,274,,,274,,274,,274',
',274,,,,,,,,274,,,,,274,274,274,274,,274,274,,,,274,274,274,718,718',
'718,,718,274,,274,718,718,,,,718,,718,718,718,718,718,718,718,,,,,,718',
'718,718,718,718,718,718,,,718,,,,,,,718,,,718,718,718,718,718,718,718',
'718,,718,718,718,,718,718,718,718,718,,,,,,,,,,,,,,,,,,,,718,,,718,',
',718,718,,,718,,,,,,718,,,,,,,,718,,,,,718,718,718,718,,718,718,,,,718',
'718,,882,882,882,,882,718,,718,882,882,,,,882,,882,882,882,882,882,882',
'882,,,,,,882,882,882,882,882,882,882,,,882,,,,,,,882,,,882,882,882,882',
'882,882,882,882,,882,882,882,,882,882,882,882,882,,,,,,,,,,,,,,,,,,',
',882,,,882,,,882,882,,,882,,882,,882,,882,,,,,,,,882,,,,,882,882,882',
'882,,882,882,,,,882,882,,18,18,18,,18,882,,882,18,18,,,,18,,18,18,18',
'18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,18,18,18',
'18,18,18,,18,18,18,,18,18,18,18,18,,,,,,,,,,,,,,,,,,,,18,,,18,,,18,18',
',,18,,,,,,18,,,,,,,,18,,,,,18,18,18,18,,18,18,,,,18,18,,535,535,535',
',535,18,,18,535,535,,,,535,,535,535,535,535,535,535,535,,,,,,535,535',
'535,535,535,535,535,,,535,,,,,,,535,,,535,535,535,535,535,535,535,535',
'535,535,535,535,,535,535,535,535,535,,,,,,,,,,,,,,,,,,,,535,,,535,,',
'535,535,,,535,,535,,535,,535,,,,,,,,535,,,,,535,535,535,535,,535,535',
',,,535,535,,885,885,885,,885,535,,535,885,885,,,,885,,885,885,885,885',
'885,885,885,,,,,,885,885,885,885,885,885,885,,,885,,,,,,,885,,,885,885',
'885,885,885,885,885,885,885,885,885,885,,885,885,885,885,885,,,,,,,',
',,,,,,,,,,,,885,,,885,,,885,885,,,885,,885,,885,,885,,,,,,,,885,,,,',
'885,885,885,885,,885,885,,,,885,885,,280,280,280,,280,885,,885,280,280',
',,,280,,280,280,280,280,280,280,280,,,,,,280,280,280,280,280,280,280',
',,280,,,,,,,280,,,280,280,280,280,280,280,280,280,,280,280,280,,280',
'280,,,280,19,19,19,19,19,19,19,19,19,19,19,,19,19,,,19,19,,280,,,280',
',,280,280,,,280,,,19,,19,,19,19,19,19,19,19,19,,19,,,,280,280,280,280',
',280,280,,,,280,280,,19,,280,,,280,,280,888,888,888,,888,,,,888,888',
',,,888,,888,888,888,888,888,888,888,,,,,,888,888,888,888,888,888,888',
',,888,,,,,,,888,,,888,888,888,888,888,888,888,888,888,888,888,888,,888',
'888,888,888,888,,,,,,,,,,,,,,,,,,,,888,,,888,,,888,888,,,888,,888,,888',
',888,,,,,,,,888,,,,,888,888,888,888,,888,888,,,,888,888,,445,445,445',
',445,888,,888,445,445,,,,445,,445,445,445,445,445,445,445,,,,,,445,445',
'445,445,445,445,445,,,445,,,,,,,445,,,445,445,445,445,445,445,445,445',
'445,445,445,445,,445,445,445,445,445,,,,,,,,,,,,,,,,,,,,445,,,445,,',
'445,445,,,445,,445,,445,,445,,,,,,,,445,,,,,445,445,445,445,,445,445',
',,,445,445,,380,380,380,,380,445,,445,380,380,,,,380,,380,380,380,380',
'380,380,380,,,,,,380,380,380,380,380,380,380,,,380,,,,,,,380,,,380,380',
'380,380,380,380,380,380,,380,380,380,,380,380,380,380,380,,,,,,,,,,',
',,,,,,,,,380,,,380,,,380,380,,,380,,,,,,380,,,,,,,,380,,,,,380,380,380',
'380,,380,380,,,,380,380,,690,690,690,,690,380,,380,690,690,,,,690,,690',
'690,690,690,690,690,690,,,,,,690,690,690,690,690,690,690,,,690,,,,,',
',690,,,690,690,690,690,690,690,690,690,,690,690,690,,690,690,690,690',
'690,,,,,,,,,,,,,,,,,,,,690,,,690,,,690,690,,,690,,,,,,690,,,,,,,,690',
',,,,690,690,690,690,,690,690,,,,690,690,,353,353,353,,353,690,,690,353',
'353,,,,353,,353,353,353,353,353,353,353,,,,,,353,353,353,353,353,353',
'353,,,353,,,,,,,353,,,353,353,353,353,353,353,353,353,,353,353,353,',
'353,353,353,353,353,,,,,,,,,,,,,,,,,,,,353,,,353,,,353,353,,,353,,,',
',,353,,,,,,,,353,,,,,353,353,353,353,,353,353,,,,353,353,,545,545,545',
',545,353,,353,545,545,,,,545,,545,545,545,545,545,545,545,,,,,,545,545',
'545,545,545,545,545,,,545,,,,,,,545,,,545,545,545,545,545,545,545,545',
'545,545,545,545,,545,545,545,545,545,,,,,,,,,,,,,,,,,,,,545,,,545,,',
'545,545,,,545,,545,,545,,545,,,,,,,,545,,,,,545,545,545,545,,545,545',
',,,545,545,,548,548,548,,548,545,,545,548,548,,,,548,,548,548,548,548',
'548,548,548,,,,,,548,548,548,548,548,548,548,,,548,,,,,,,548,,,548,548',
'548,548,548,548,548,548,,548,548,548,,548,548,548,548,548,,,,,,,,,,',
',,,,,,,,,548,,,548,,,548,548,,,548,,,,,,548,,,,,,,,548,,,,,548,548,548',
'548,,548,548,,,,548,548,,485,485,485,,485,548,,548,485,485,,,,485,,485',
'485,485,485,485,485,485,,,,,,485,485,485,485,485,485,485,,,485,,,,,',
',485,,,485,485,485,485,485,485,485,485,,485,485,485,,485,485,485,485',
'485,,,,,,,,,,,,,,,,,,,,485,,,485,,,485,485,,,485,,,,,,485,,,,,,,,485',
',,,,485,485,485,485,,485,485,,,,485,485,,320,320,320,,320,485,,485,320',
'320,,,,320,,320,320,320,320,320,320,320,,,,,,320,320,320,320,320,320',
'320,,,320,,,,,,,320,,,320,320,320,320,320,320,320,320,,320,320,320,',
'320,320,320,320,320,,,,,,,,,,,,,,,,,,,,320,,,320,,,320,320,,,320,,,',
',,320,,,,,,,,320,,,,,320,320,320,320,,320,320,,,,320,320,,576,576,576',
',576,320,,320,576,576,,,,576,,576,576,576,576,576,576,576,,,,,,576,576',
'576,576,576,576,576,,,576,,,,,,,576,,,576,576,576,576,576,576,576,576',
',576,576,576,,576,576,576,576,576,,,,,,,,,,,,,,,,,,,,576,,,576,,,576',
'576,,,576,,,,,,576,,,,,,,,576,,,,,576,576,576,576,,576,576,,,,576,576',
',578,578,578,,578,576,,576,578,578,,,,578,,578,578,578,578,578,578,578',
',,,,,578,578,578,578,578,578,578,,,578,,,,,,,578,,,578,578,578,578,578',
'578,578,578,,578,578,578,,578,578,578,578,578,,,,,,,,,,,,,,,,,,,,578',
',,578,,,578,578,,,578,,578,,,,578,,,,,,,,578,,,,,578,578,578,578,,578',
'578,,,,578,578,,293,293,293,,293,578,,578,293,293,,,,293,,293,293,293',
'293,293,293,293,,,,,,293,293,293,293,293,293,293,,,293,,,,,,,293,,,293',
'293,293,293,293,293,293,293,,293,293,293,,293,293,,503,293,503,503,503',
'503,503,,,,,,,,,,,,,,,293,,,293,,,293,293,,,293,,,,,,503,,,,,,,,,503',
'503,503,503,293,293,293,293,,293,293,,,,293,293,,664,664,664,,664,293',
',293,664,664,,,,664,,664,664,664,664,664,664,664,,,,,,664,664,664,664',
'664,664,664,,,664,,,,,,,664,,,664,664,664,664,664,664,664,664,,664,664',
'664,,664,664,664,664,664,,,,,,,,,,,,,,,,,,,,664,,,664,,,664,664,,,664',
',,,,,664,,,,,,,,664,,,,,664,664,664,664,,664,664,,,,664,664,,484,484',
'484,,484,664,,664,484,484,,,,484,,484,484,484,484,484,484,484,,,,,,484',
'484,484,484,484,484,484,,,484,,,,,,,484,,,484,484,484,484,484,484,484',
'484,,484,484,484,,484,484,484,484,484,,,,,,,,,,,,,,,,,,,,484,,,484,',
',484,484,,,484,,,,,,484,,,,,,,,484,,,,,484,484,484,484,,484,484,,,,484',
'484,,483,483,483,,483,484,,484,483,483,,,,483,,483,483,483,483,483,483',
'483,,,,,,483,483,483,483,483,483,483,,,483,,,,,,,483,,,483,483,483,483',
'483,483,483,483,,483,483,483,,483,483,483,483,483,,,,,,,,,,,,,,,,,,',
',483,,,483,,,483,483,,,483,,,,,,483,,,,,,,,483,,,,,483,483,483,483,',
'483,483,,,,483,483,,480,480,480,,480,483,,483,480,480,,,,480,,480,480',
'480,480,480,480,480,,,,,,480,480,480,480,480,480,480,,,480,,,,,,,480',
',,480,480,480,480,480,480,480,480,,480,480,480,,480,480,,552,480,552',
'552,552,552,552,,,,,,,,,,,,,,,480,,,480,,,480,480,,,480,,,,,,552,552',
',,,,,,,552,552,552,552,480,480,480,480,,480,480,,,,480,480,,338,338',
'338,,338,480,,480,338,338,,,,338,,338,338,338,338,338,338,338,,,,,,338',
'338,338,338,338,338,338,,,338,,,,,,,338,,,338,338,338,338,338,338,338',
'338,,338,338,338,,338,338,338,338,338,,,,,,,,,,,,,,,,,,,,338,,,338,',
',338,338,,,338,,,,,,338,,,,,,,,338,,,,,338,338,338,338,,338,338,,,,338',
'338,,302,302,302,,302,338,,338,302,302,,,,302,,302,302,302,302,302,302',
'302,,,,,,302,302,302,302,302,302,302,,,302,,,,,,,302,,,302,302,302,302',
'302,302,302,302,,302,302,302,,302,302,302,302,302,,,,,,,,,,,,,,,,,,',
',302,,,302,302,,302,302,,,302,,,,,,302,,,,,,,,302,,,,,302,302,302,302',
',302,302,,,,302,302,,637,637,637,,637,302,,302,637,637,,,,637,,637,637',
'637,637,637,637,637,,,,,,637,637,637,637,637,637,637,,,637,,,,,,,637',
',,637,637,637,637,637,637,637,637,,637,637,637,,637,637,,,637,,,,,,',
',,,,,,,,,,,,,637,,,637,,,637,637,,,637,,,,,,,,,,,,,,,,,,,637,637,637',
'637,,637,637,,,,637,637,,579,579,579,,579,637,,637,579,579,,,,579,,579',
'579,579,579,579,579,579,,,,,,579,579,579,579,579,579,579,,,579,,,,,',
',579,,,579,579,579,579,579,579,579,579,,579,579,579,,579,579,579,579',
'579,,,,,,,,,,,,,,,,,,,,579,,,579,,,579,579,,,579,,,,,,579,,,,,,,,579',
',,,,579,579,579,579,,579,579,,,,579,579,,582,582,582,,582,579,,579,582',
'582,,,,582,,582,582,582,582,582,582,582,,,,,,582,582,582,582,582,582',
'582,,,582,,,,,,,582,,,582,582,582,582,582,582,582,582,,582,582,582,',
'582,582,582,582,582,,,,,,,,,,,,,,,,,,,,582,,,582,,,582,582,,,582,,,',
',,582,,,,,,,,582,,,,,582,582,582,582,,582,582,,,,582,582,,583,583,583',
',583,582,,582,583,583,,,,583,,583,583,583,583,583,583,583,,,,,,583,583',
'583,583,583,583,583,,,583,,,,,,,583,,,583,583,583,583,583,583,583,583',
',583,583,583,,583,583,583,583,583,,,,,,,,,,,,,,,,,,,,583,,,583,,,583',
'583,,,583,,,,,,583,,,,,,,,583,,,,,583,583,583,583,,583,583,,,,583,583',
',626,626,626,,626,583,,583,626,626,,,,626,,626,626,626,626,626,626,626',
',,,,,626,626,626,626,626,626,626,,,626,,,,,,,626,,,626,626,626,626,626',
'626,626,626,,626,626,626,,626,626,,,626,,,,,,,,,,,,,,,,,,,,626,,,626',
',,626,626,,,626,,,,,,,,,,,,,,,,,,,626,626,626,626,,626,626,,,,626,626',
',473,473,473,,473,626,,626,473,473,,,,473,,473,473,473,473,473,473,473',
',,,,,473,473,473,473,473,473,473,,,473,,,,,,,473,,,473,473,473,473,473',
'473,473,473,473,473,473,473,,473,473,473,473,473,,,,,,,,,,,,,,,,,,,',
'473,,,473,,,473,473,,,473,,473,,473,,473,,,,,,,,473,,,,,473,473,473',
'473,,473,473,,,,473,473,,5,5,5,5,5,473,,473,5,5,,,,5,,5,5,5,5,5,5,5',
',,,,,5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5',
'5,,,,,,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,5,,,,,5,5,5,5,,5',
'5,,,,5,5,,587,587,587,,587,5,,5,587,587,,,,587,,587,587,587,587,587',
'587,587,,,,,,587,587,587,587,587,587,587,,,587,,,,,,,587,,,587,587,587',
'587,587,587,587,587,,587,587,587,,587,587,587,587,587,,,,,,,,,,,,,,',
',,,,,587,,,587,,,587,587,,,587,,,,,,587,,,,,,,,587,,,,,587,587,587,587',
',587,587,,,,587,587,,607,607,607,,607,587,,587,607,607,,,,607,,607,607',
'607,607,607,607,607,,,,,,607,607,607,607,607,607,607,,,607,,,,,,,607',
',,607,607,607,607,607,607,607,607,,607,607,607,,607,607,607,607,607',
',,,,,,,,,,,,,,,,,,,607,,,607,,,607,607,,,607,,,,,,607,,,,,,,,607,,,',
',607,607,607,607,,607,607,,,,607,607,,471,471,471,,471,607,,607,471',
'471,,,,471,,471,471,471,471,471,471,471,,,,,,471,471,471,471,471,471',
'471,,,471,,,,,,,471,,,471,471,471,471,471,471,471,471,,471,471,471,',
'471,471,,,471,,,,,,,,,,,,,,,,,,,,471,,,471,,,471,471,,,471,,,,,,,,,',
',,,,,,,,,471,471,471,471,,471,471,,,,471,471,,590,590,590,,590,471,',
'471,590,590,,,,590,,590,590,590,590,590,590,590,,,,,,590,590,590,590',
'590,590,590,,,590,,,,,,,590,,,590,590,590,590,590,590,590,590,,590,590',
'590,,590,590,590,590,590,,,,,,,,,,,,,,,,,,,,590,,,590,,,590,590,,,590',
',,,,,590,,,,,,,,590,,,,,590,590,590,590,,590,590,,,,590,590,,461,461',
'461,,461,590,,590,461,461,,,,461,,461,461,461,461,461,461,461,,,,,,461',
'461,461,461,461,461,461,,,461,,,,,,,461,,,461,461,461,461,461,461,461',
'461,461,461,461,461,,461,461,461,461,461,,,,,,,,,,,,,,,,,,,,461,,,461',
',,461,461,,,461,,,,461,,461,,,,,,,,461,,,,,461,461,461,461,,461,461',
',,,461,461,,449,449,449,,449,461,,461,449,449,,,,449,,449,449,449,449',
'449,449,449,,,,,,449,449,449,449,449,449,449,,,449,,,,,,,449,,,449,449',
'449,449,449,449,449,449,,449,449,449,,449,449,449,449,449,,,,,,,,,,',
',,,,,,,,,449,,,449,,,449,449,,,449,,,,,,449,,,,,,,,449,,,,,449,449,449',
'449,,449,449,,,,449,449,,319,319,319,,319,449,,449,319,319,,,,319,,319',
'319,319,319,319,319,319,,,,,,319,319,319,319,319,319,319,,,319,,,,,',
',319,,,319,319,319,319,319,319,319,319,,319,319,319,,319,319,319,319',
'319,,,,,,,,,,,,,,,,,,,,319,,,319,,,319,319,,,319,,,,,,319,,,,,,,,319',
',,,,319,319,319,319,,319,319,,,,319,319,,447,447,447,,447,319,,319,447',
'447,,,,447,,447,447,447,447,447,447,447,,,,,,447,447,447,447,447,447',
'447,,,447,,,,,,,447,,,447,447,447,447,447,447,447,447,447,447,447,447',
',447,447,447,447,447,814,814,814,814,814,814,814,814,814,814,814,,814',
'814,,,814,814,,447,,,447,,,447,447,,,447,,,814,447,814,447,814,814,814',
'814,814,814,814,447,814,,,,447,447,447,447,,447,447,,,,447,447,,814',
'452,,,,447,,447,452,452,452,,,452,452,452,,452,,,,,,,,,,452,,,,,,,,',
',452,452,,452,452,452,452,452,,,,,,,,,,,,455,,,,,,,455,455,455,,,455',
'455,455,,455,,,,,,452,,,,455,,,452,,,,,452,452,455,455,,455,455,455',
'455,455,,,,,,,,,,,,,,452,,,,,,,,,391,,,,,452,,391,391,391,452,455,391',
'391,391,,391,,455,,,,,455,455,391,391,391,,,,,,,,,391,391,,391,391,391',
'391,391,,,455,,,,,,,,,,,,,,455,,,,,455,391,391,391,391,391,391,391,391',
'391,391,391,391,391,391,,,391,391,391,,,391,,391,391,,,391,391,,391',
',391,,391,,391,391,391,391,391,391,391,27,391,391,391,,,,27,27,27,,',
'27,27,27,,27,391,391,,391,,391,,,27,27,27,,,,,,,,,27,27,,27,27,27,27',
'27,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,',
',27,27,27,,,27,,27,27,,,27,27,,27,,27,,27,,27,27,27,27,27,27,27,28,27',
'27,27,,,,28,28,28,,,28,28,28,,28,27,27,,27,,27,,,,28,28,,,,,,,,,28,28',
',28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,,,28,28,28,,,28,,28,28,,,28,28,,28,,28,,28,,28,28,28,28',
'28,28,28,,28,,28,,,,,,,,,,,,,,28,28,,28,,28,573,573,573,573,573,573',
'573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573',
'573,,,,573,573,573,573,573,573,573,573,573,573,,,,,,573,573,573,573',
'573,573,573,573,573,,,573,,,,,,,,573,573,,573,573,573,573,573,573,573',
',,573,573,,,,573,573,573,573,,,,,,,,,,,,,,573,573,,573,573,573,573,573',
'573,573,573,573,573,573,,,573,573,,,,,,,,,,,573,369,369,369,369,369',
'369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369',
'369,369,,,,369,369,369,369,369,369,369,369,369,369,,,,,,369,369,369',
'369,369,369,369,369,369,,,369,,,,,,,,369,369,,369,369,369,369,369,369',
'369,,,369,369,,,,369,369,369,369,,,,,,,,,,,,,,369,369,,369,369,369,369',
'369,369,369,369,369,369,369,,,369,369,,,,,,,,,,,369,6,6,6,6,6,6,6,6',
'6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,,,,6,6,6,6,6,6,6,6,6,6,,,,,,6,6,6,6',
'6,6,6,6,6,6,,6,,,,,,,,6,6,,6,6,6,6,6,6,6,,,6,6,,,,6,6,6,6,,,,,,,,,,',
',,,6,6,,6,6,6,6,6,6,6,6,6,6,6,,,6,6,,,,,,,,,,,6,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,,,,,,7,7,7,7,7,7',
'7,7,7,,,7,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,,7',
'7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,,7,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65',
'65,65,65,,,,,,65,65,65,65,65,65,65,65,65,65,65,65,,65,,,,,,65,65,,65',
'65,65,65,65,65,65,,,65,65,,,,65,65,65,65,,,,,,65,,,,,,,,65,65,,65,65',
'65,65,65,65,65,65,65,65,65,,,65,703,703,703,703,703,703,703,703,703',
'703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,,,,703,703',
'703,703,703,703,703,703,703,703,,,,,,703,703,703,703,703,703,703,703',
'703,,,703,,,,,,,,703,703,,703,703,703,703,703,703,703,,,703,703,,,,703',
'703,703,703,,,,,,,,,,,,,,703,703,,703,703,703,703,703,703,703,703,703',
'703,703,486,486,703,,486,,,,,,,,486,486,,486,486,486,486,486,486,486',
',,486,486,,,,486,486,486,486,,,,,,486,,,,,,,,486,486,,486,486,486,486',
'486,486,486,486,486,486,486,889,889,486,,889,,,,,,,,889,889,,889,889',
'889,889,889,889,889,,,889,889,,,,889,889,889,889,,,,,,889,,,,,,,,889',
'889,,889,889,889,889,889,889,889,889,889,889,889,543,543,889,,543,,',
',,,,,543,543,,543,543,543,543,543,543,543,,,543,543,,,,543,543,543,543',
',,,,,543,,,,,,,,543,543,,543,543,543,543,543,543,543,543,543,543,543',
'890,890,543,,890,,,,,,,,890,890,,890,890,890,890,890,890,890,,,890,890',
',,,890,890,890,890,,,,,,890,,,,,,,,890,890,,890,890,890,890,890,890',
'890,890,890,890,890,918,918,890,,918,,,,,,,,918,918,,918,918,918,918',
'918,918,918,,,918,918,,,,918,918,918,918,,,,,,918,,,,,,,,918,918,,918',
'918,918,918,918,918,918,918,918,918,918,537,537,918,,537,,,,,,,,537',
'537,,537,537,537,537,537,537,537,,,537,537,,,,537,537,537,537,,,,,,537',
',,,,,,,537,537,,537,537,537,537,537,537,537,537,537,537,537,199,199',
'537,,199,,,,,,,,199,199,,199,199,199,199,199,199,199,,,199,199,,,,199',
'199,199,199,,,,,,199,,,,,,,,199,199,,199,199,199,199,199,199,199,199',
'199,199,199,475,475,199,,475,,,,,,,,475,475,,475,475,475,475,475,475',
'475,,,475,475,,,,475,475,475,475,,,,,,475,,,,,,,,475,475,,475,475,475',
'475,475,475,475,475,475,475,475,474,474,475,,474,,,,,,,,474,474,,474',
'474,474,474,474,474,474,,,474,474,,,,474,474,474,474,,,,,,474,,,,,,',
',474,474,,474,474,474,474,474,474,474,474,474,474,474,536,536,474,,536',
',,,,,,,536,536,,536,536,536,536,536,536,536,,,536,536,,,,536,536,536',
'536,,,,,,536,,,,,,,,536,536,,536,536,536,536,536,536,536,536,536,536',
'536,263,263,536,,263,,,,,,,,263,263,,263,263,263,263,263,263,263,,,263',
'263,,,,263,263,263,263,,,,,,,,,,,,,,263,263,,263,263,263,263,263,263',
'263,263,263,263,263,262,262,263,,262,,,,,,,,262,262,,262,262,262,262',
'262,262,262,,,262,262,,,,262,262,262,262,,,,,,,,,,,,,,262,262,,262,262',
'262,262,262,262,262,262,262,262,262,411,411,262,,411,,,,,,,,411,411',
',411,411,411,411,411,411,411,,,411,411,,,,411,411,411,411,,,,,,411,',
',,,,,,411,411,,411,411,411,411,411,411,411,411,411,411,411,410,410,411',
',410,,,,,,,,410,410,,410,410,410,410,410,410,410,,,410,410,,,,410,410',
'410,410,,,,,,410,,,,,,,,410,410,,410,410,410,410,410,410,410,410,410',
'410,410,200,200,410,,200,,,,,,,,200,200,,200,200,200,200,200,200,200',
',,200,200,,,,200,200,200,200,,,,,,200,,,,,,,,200,200,,200,200,200,200',
'200,200,200,200,200,200,200,544,544,200,,544,,,,,,,,544,544,,544,544',
'544,544,544,544,544,,,544,544,,,,544,544,544,544,,,,,,544,,,,,,,,544',
'544,,544,544,544,544,544,544,544,544,544,544,544,487,487,544,,487,,',
',,,,,487,487,,487,487,487,487,487,487,487,,,487,487,,,,487,487,487,487',
',,,,,487,,,,,,,,487,487,,487,487,487,487,487,487,487,487,487,487,487',
',,487,812,812,812,812,812,812,812,812,812,812,812,,812,812,,,812,812',
',,,,,,,,,,,,,,812,,812,,812,812,812,812,812,812,812,,812,,488,488,488',
'488,488,488,488,488,488,488,488,,488,488,,812,488,488,,,,,,,,,,,,,,',
'488,,488,,488,488,488,488,488,488,488,,488,,247,247,247,247,247,247',
'247,247,247,247,247,,247,247,,488,247,247,,,,,,,,,,,,,,,247,,247,,247',
'247,247,247,247,247,247,,247,,442,442,442,442,442,442,442,442,442,442',
'442,,442,442,,247,442,442,,,,,,,,,,,,,,,442,,442,,442,442,442,442,442',
'442,442,,442,,730,730,730,730,730,730,730,730,730,730,730,,730,730,442',
'442,730,730,,,,,,,,,,,,,,,730,,730,,730,730,730,730,730,730,730,,730',
',728,728,728,728,728,728,728,728,728,728,728,,728,728,,730,728,728,',
',,,,,,,,,,,,,728,,728,,728,728,728,728,728,728,728,,728,,725,725,725',
'725,725,725,725,725,725,725,725,,725,725,,728,725,725,,,,,,,,,,,,,,',
'725,,725,,725,725,725,725,725,725,725,,725,,719,719,719,719,719,719',
'719,719,719,719,719,,719,719,,725,719,719,,,,,,,,,,,,,,,719,,719,,719',
'719,719,719,719,719,719,,719,,716,716,716,716,716,716,716,716,716,716',
'716,,716,716,,719,716,716,,,,,,,,,,,,,,,716,,716,,716,716,716,716,716',
'716,716,,716,,638,638,638,638,638,638,638,638,638,638,638,,638,638,',
'716,638,638,,,,,,,,,,,,,,,638,,638,,638,638,638,638,638,638,638,,638',
',403,403,403,403,403,403,403,403,403,403,403,,403,403,,638,403,403,',
',,,,,,,,,,,,,403,,403,,403,403,403,403,403,403,403,,403,,,,,,,,,,,,',
',,,,403' ]
        racc_action_check = arr = ::Array.new(23141, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  4113,  1475,   nil,   117,  1478, 19280, 21125, 21249,  1269,  1245,
  1214,  1207,  1253,  1124,   528,   630,   nil,    61, 15772, 16147,
  1172,   nil, 10397, 10147,  9897,   449,   130, 20638, 20747,   nil,
  3113,  8022,  7889,   nil,   987,   508,  1005,   500,  6506,  6381,
  6256,   880,   999,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  4616,  4488,  4873,  4998,  5123,     0,   nil,  5373,  5498,   nil,
   nil,  5623,  5756,  5881,  6006, 21373,   nil,   nil,   nil,   nil,
   nil,   386,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   130,   nil,   nil,   390,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   991,   nil,
  6756,   nil,   nil,   nil,  6889,  7014,  7139,  7264,  7389,  1353,
   nil,   393,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   850,   nil,  3363,  3238,  8147,  8272,  8397,  8522, 21905,
 22385,  8897,  9022,  9147,  9272,  9397,   nil,   nil,   996,   265,
   826,   234,   719,   750,   nil, 10272,     0,   744, 10647, 10772,
 10897, 11022, 11147, 11272, 11397, 11522, 11647, 11772, 11897, 12022,
 12147, 12272, 12397, 12522, 12647, 12772, 12897, 13022, 13147, 13272,
 13397, 13522, 13647, 13772,   nil,   nil,   nil, 22645,   nil,   592,
   588,   nil, 14272,   622, 14522,   nil,   nil,   nil,   nil, 14647,
   nil,   nil, 22205, 22145,   533, 15147, 15272,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 15397,   475,  1993,   470,   500,   451,
 16147,  1618,   998,  1351,   -31,  1361,   353,   302,   266,   nil,
   322,   442,    86, 17655,   nil,   319,   185,   335,  1226,   nil,
   477,   nil, 18405,   581,   626,   731,   nil,    63,   526,   629,
   630,   698,   797,   nil,   nil,  9535,   806,   140,    48, 20155,
 17280,   294,   970,   870,    65,  1121,   962,    98,  1050,   nil,
   nil,   502,   398,   258,   nil,   746,   nil,    55, 18280,   nil,
   nil,   543,   237,    76,   611,   623,   612,   588,   569,   535,
   nil,   447,   nil, 16780,   nil,   313,    61,   318,   202,    39,
   259,   nil,  1368,   nil,   nil,   nil,   nil,   nil,   nil, 21001,
   nil,   nil,   nil,   nil,  1014,  1018,   nil,   nil,  2743,   nil,
 16530,  1005,   nil,  1013,   nil,   nil,  4488,  1019,   nil,   425,
   393, 20529,   nil,   nil,   nil,   608,  1085,   499,   nil,   nil,
  2871,  2980,   nil, 23013,   nil,   nil,   nil,   268,   nil,  1180,
 22325, 22265,  5248,   289,  6131,  8647,  8772,  3113,  1493,  1338,
  1263,  1258,  1271,  1284,  1288,  3488,  2929,  3363,  1743,  1368,
  1618,  1243,  1868,  1993,  2118,  2243,  3238,  2618,  1213,   566,
  2493,  2368, 22691,   232,   nil, 16405,   nil, 20280,   nil, 20030,
   nil,   nil, 20408,   nil,   nil, 20463,   nil,   nil,  1360,   nil,
   nil, 19905,   173,   114,  1317,   nil,  1298,  1276,   nil,   nil,
  1255, 19655,  1256, 19155, 22025, 21965,   871,  1292,   nil,   nil,
 18155,  1226,   nil, 18030, 17905, 17155, 21545, 22505, 22599, 14772,
  1271,  9772,   nil,  1145,   nil,  9647,   nil,   nil, 15022,   nil,
   nil,   nil,   112, 17668,  1136,  1127,  1126,  1112,   nil,   nil,
   nil,   nil,   nil,   nil,    90,  1167,   nil,   854,   nil,   nil,
   nil,   nil,  1160,   nil,   nil,  1134,  4363,  1166,   nil,  2493,
   185,   123,  1138,  1137, 14897, 15897, 22085, 21845,   135,   nil,
   nil,  1397,   nil, 21665, 22445, 16905,   nil,   nil, 17030,   607,
   312,  1368, 18168,   nil,   nil,   nil,   281,   nil,   nil,   nil,
   698,   nil,   nil,   nil,   975,   nil,   nil,   262,   nil,   nil,
   956,   nil,   nil, 20877,   nil,   nil, 17405,   950, 17530, 18655,
   458,   983, 18780, 18905,   957,   nil,   nil, 19405,   909,   nil,
 19780,   nil,   nil,   310,   273,   260,     0,   855,  5623,   839,
   nil,   605,   nil,  3988,   832,   nil,   805, 19530,   nil,   nil,
   nil,   nil,   nil,   nil,   373,   nil,  6756,    -6,   751,   nil,
   684,   nil,  2743,  2118,   nil,    16, 19030,   570,   nil,   571,
   284,   286,   565,   360,   748,   529,   469, 18530, 22967,   518,
   486,   154,   506,   nil,  2243,   376,   398,   nil,   nil,   nil,
   603,   nil,   743,   868,   -13,  1229,   nil,  5769,   nil,  8035,
   nil,   nil,  1169,   438, 17780,   nil,   nil,   758,   nil,    39,
   494,   134,   113,   nil,   nil,   717,   nil,   284,   nil,   nil,
   nil,   nil,   332,   nil,   163,   283,   123,   124,   186,    89,
 16655,   268,  1243,   nil,   406,  1493,   324,   nil,   nil,   554,
  1743,  2835,   403, 21485,   nil,   nil,   nil,   nil,   nil,   nil,
  1868,   nil,   nil,   nil,   nil,   nil, 22921,   471, 15522, 22875,
  4748,   nil,   nil,  7889,   nil, 22829,   nil,   nil, 22783,   nil,
 22737, 14397, 14147, 14022,   109, 13897,   621,   640,   650,   nil,
   691,   672,   335,   nil,   820,   nil, 10522,   nil,  2368, 10022,
   nil,   nil,   730,   749,   857,   747,   453,   nil,   nil,   nil,
  2618,   nil,   nil,   153,  9522,   nil,   nil,   783,   887,   778,
   795,   nil,   nil,   nil,   799,   806,   nil,   nil,   820,   823,
   nil,   825,   nil,   nil,   832,   729,   833,   979,   nil,   959,
   nil,  7764,   971,  3613,  3738,   nil,  6631,  4238,   117,    54,
   nil,  1000,   nil,  3863,   nil,  1011,   895,   nil,   nil,   917,
   920,   nil, 22553,  7514, 20280,  4676,   nil,  4580,   nil,   nil,
  1140,   nil,   979,  7639,   nil,   975,   993,   977,   nil,   982,
   nil,   nil,   nil,   nil,  3488,  1362,  1237,  1076,  1123,   nil,
   nil,   nil,   nil,  1133,  5894,   nil,   nil,   919,   nil,   890,
   nil,   765,   nil,   nil,   nil,   502,   883,  1060,   nil,   152,
   nil,  1193,  1195,   nil,   215,   nil,   nil,  1203,   nil,   nil,
  7652,   nil,  1092,  1100,  1101,  1102,   nil,  1107,   nil,   873,
  1196,   nil, 15647,   nil,   nil, 16022,   nil,  1252, 16280, 21605,
 21725,  1365,   nil,  1170,  1183,  1184,  1193,  1194,   585,  1204,
  1008,  1243,   nil,   nil,   nil,   nil,   nil,  1118,   nil,   993,
  6019,   nil,   nil,  1044,   nil,  1015,   nil,   nil, 21785,   nil,
  1235,   nil,  1250,   151,   124,   181,  1493,   nil,   794,   nil,
   nil,   nil,  1104,  1308,   727,  1438,  1439,  1323,  1328,  1332,
  1333,  1375,  1378,   nil,   164,  1350,  1351,   nil,   nil,   nil,
   nil,   671,   nil,   nil,   nil,   nil,  1360,   nil ]

racc_action_default = [
    -4,  -545,    -1,  -531,    -5,  -545,  -545,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -273,   -32,   -33,  -533,  -545,   -38,
   -40,   -41,  -283,  -318,  -319,   -45,  -248,  -248,  -248,   -58,
    -4,   -62,   -70,   -72,  -545,  -460,  -545,  -545,  -545,  -545,
  -545,  -533,  -225,  -266,  -267,  -268,  -269,  -270,  -271,  -272,
  -521,    -4,  -545,  -544,  -513,  -291,  -373,  -545,  -545,  -296,
  -299,  -531,  -545,  -545,  -545,  -545,  -320,  -321,  -409,  -410,
  -411,  -412,  -413,  -428,  -416,  -417,  -430,  -432,  -421,  -426,
  -442,  -430,  -444,  -445,  -519,  -449,  -450,  -520,  -452,  -453,
  -454,  -455,  -456,  -457,  -458,  -459,  -462,  -463,  -545,    -3,
  -532,  -540,  -541,  -542,  -545,  -545,  -545,  -545,  -545,    -7,
    -8,  -545,   -99,  -100,  -101,  -102,  -103,  -104,  -105,  -106,
  -107,  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,
  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,   -13,  -108,    -4,    -4,  -545,  -545,  -545,  -234,  -545,
  -545,  -545,  -545,  -545,  -545,  -533,  -534,   -37,  -545,  -460,
  -545,  -273,  -545,  -545,  -217,  -545,    -4,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,  -545,
  -545,  -545,  -545,  -545,  -379,  -381,   -42,  -226,  -236,  -258,
  -258,  -241,  -545,  -259,  -545,  -283,  -318,  -319,  -515,  -545,
   -43,   -44,  -545,  -545,   -50,  -234,  -545,  -290,  -384,  -393,
  -395,   -56,  -390,   -57,  -533,   -60,    -4,  -533,  -545,   -63,
   -66,    -4,   -78,  -545,  -545,   -85,  -286,  -533,  -545,  -322,
  -391,  -545,   -68,  -545,   -74,  -280,  -446,  -447,  -545,  -202,
  -203,  -218,  -545,  -401,  -545,  -276,  -227,  -537,  -537,  -545,
  -545,  -537,  -545,  -292,  -293,  -483,   -39,  -545,  -545,  -545,
  -545,  -531,  -545,  -532,  -460,  -545,  -545,  -273,  -545,  -332,
  -333,   -94,   -95,  -545,   -97,  -545,  -273,  -545,  -545,  -460,
  -311,   -99,  -100,  -140,  -141,  -142,  -158,  -163,  -170,  -173,
  -313,  -545,  -511,  -545,  -414,  -545,  -545,  -545,  -545,  -545,
  -545,   958,    -6,  -543,   -14,   -15,   -16,   -17,   -18,  -545,
   -10,   -11,   -12,  -109,  -545,  -545,   -21,   -29,  -181,  -259,
  -545,  -545,   -22,   -30,   -31,   -23,  -183,  -533,  -235,  -522,
  -523,  -248,  -388,  -524,  -525,  -522,  -248,  -523,  -387,  -389,
  -524,  -525,   -28,  -191,   -34,   -35,   -36,  -533,  -289,  -545,
  -545,  -545,  -234,  -280,  -545,  -545,  -545,  -192,  -193,  -194,
  -195,  -196,  -197,  -198,  -199,  -204,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -219,  -220,
  -221,  -222,  -533,  -362,  -237,  -257,  -238,  -257,  -255,  -545,
  -260,  -518,  -248,  -522,  -523,  -248,   -48,   -51,  -533,  -249,
  -250,  -251,  -362,  -362,  -533,  -285,  -533,   -59,  -278,   -75,
   -64,  -545,  -533,  -234,  -545,  -545,   -84,  -545,  -446,  -447,
  -545,   -71,   -76,  -545,  -545,  -545,  -545,  -545,  -223,  -545,
  -544,  -544,  -275,  -533,  -228,  -539,  -538,  -230,  -539,  -281,
  -282,  -514,  -545,  -483,  -367,  -510,  -510,  -510,  -482,  -484,
  -485,  -486,  -487,  -488,  -489,  -545,  -492,  -545,  -494,  -500,
  -502,  -503,  -505,  -506,  -507,  -545,    -4,  -323,  -324,    -4,
  -545,  -545,  -545,  -545,  -545,  -234,  -545,  -545,  -280,  -304,
   -94,   -95,   -96,  -545,  -545,  -234,  -307,  -464,  -545,  -545,
  -545,    -4,  -483,  -315,  -529,  -530,  -533,  -415,  -429,  -434,
  -545,  -436,  -418,  -431,  -545,  -433,  -420,  -545,  -423,  -425,
  -545,  -443,    -9,  -545,   -19,   -20,  -545,  -265,  -545,  -545,
  -392,  -545,  -545,  -545,   -52,  -233,  -385,  -545,   -54,  -386,
  -545,  -288,  -535,  -522,  -523,  -522,  -523,  -533,  -181,  -545,
  -363,  -367,  -365,    -4,  -258,  -256,  -261,  -545,  -516,  -517,
   -46,  -382,   -47,  -383,  -362,  -231,   -38,  -545,  -258,  -247,
  -533,  -253,    -4,    -4,  -284,   -61,  -545,   -67,   -73,  -533,
  -522,  -523,  -232,   -81,   -83,  -545,   -69,  -545,  -190,  -200,
  -201,  -533,  -544,  -330,    -4,  -402,  -544,  -403,  -404,  -277,
  -537,  -374,    -4,    -4,  -367,  -545,  -376,  -545,  -475,  -545,
  -478,  -480,  -545,  -545,  -545,  -491,  -334,  -545,  -336,  -338,
  -345,  -489,  -533,  -504,  -508,  -544,  -325,  -544,  -297,  -326,
  -327,  -300,  -545,  -303,  -545,  -533,  -522,  -523,  -526,  -279,
  -545,   -94,   -95,   -98,  -533,    -4,  -545,  -466,  -309,  -545,
    -4,  -483,  -545,  -545,  -512,  -435,  -438,  -439,  -440,  -441,
    -4,  -419,  -422,  -424,  -427,  -110,  -182,  -263,  -545,  -184,
  -545,  -536,   -25,  -186,   -26,  -187,   -53,   -27,  -188,   -55,
  -189,  -545,  -545,  -545,  -392,  -545,  -510,  -510,  -510,  -361,
  -545,  -367,  -489,  -498,  -545,  -239,  -257,  -262,    -4,  -545,
  -244,  -252,  -533,  -545,  -545,   -65,   -79,   -77,  -287,    -2,
    -4,  -408,  -331,  -545,  -545,  -406,  -229,  -545,  -545,  -533,
  -368,  -369,  -371,  -372,  -510,  -510,  -495,  -509,  -510,  -510,
  -501,  -510,  -490,  -496,  -533,  -545,  -343,  -545,  -493,  -545,
  -328,  -545,  -545,    -4,    -4,  -302,  -545,    -4,  -392,  -545,
  -392,  -545,  -465,    -4,  -312,  -545,  -533,  -468,  -316,  -545,
  -264,   -24,  -185,  -545,  -224,  -352,  -354,  -545,  -357,  -359,
  -545,  -364,  -545,  -545,  -380,  -258,  -545,  -258,  -243,  -258,
  -254,  -394,  -396,  -407,    -4,   -86,  -545,  -545,   -93,  -405,
  -377,  -378,  -375,  -545,  -545,  -471,  -473,  -545,  -476,  -545,
  -479,  -545,  -481,  -335,  -337,  -341,  -545,  -346,  -294,  -545,
  -295,  -545,  -545,  -261,  -544,  -305,  -308,  -545,  -314,  -467,
  -483,  -437,  -510,  -510,  -510,  -510,  -499,  -510,  -366,  -497,
  -545,  -240,  -257,   -49,  -242,  -257,  -245,  -401,  -234,  -545,
  -545,   -92,  -370,  -510,  -510,  -510,  -510,  -339,  -545,  -344,
  -545,    -4,  -298,  -301,  -397,  -398,  -399,    -4,  -310,    -4,
  -545,  -349,  -351,  -545,  -355,  -545,  -358,  -360,  -545,  -280,
  -258,  -400,  -533,  -522,  -523,  -526,   -91,  -469,  -545,  -472,
  -474,  -477,  -545,  -342,  -544,  -545,  -545,  -510,  -510,  -510,
  -510,  -279,  -526,  -246,  -392,  -510,  -340,  -329,  -306,  -317,
  -347,  -545,  -350,  -353,  -356,  -470,  -510,  -348 ]

clist = [
'115,115,204,490,14,350,248,248,248,14,408,308,311,103,268,272,457,118',
'118,700,387,533,304,444,446,307,302,207,306,481,279,508,35,99,14,285',
'285,35,656,12,504,110,192,789,12,289,289,542,120,120,608,526,529,737',
'642,14,494,497,292,115,501,780,35,282,282,771,327,336,336,12,854,103',
'264,271,273,109,289,289,289,465,317,318,467,35,321,738,605,458,605,776',
'12,322,672,10,324,339,339,339,10,678,681,608,619,773,14,377,384,277',
'356,305,391,396,14,360,316,316,876,580,316,275,337,340,558,10,565,568',
'313,364,365,366,367,553,35,603,857,740,493,319,793,12,35,775,611,778',
'10,613,320,12,794,690,907,695,622,623,803,329,246,260,261,551,552,316',
'316,316,316,703,666,381,381,870,362,546,328,452,455,314,351,741,368',
'310,352,752,248,620,459,854,621,392,769,770,309,573,502,10,401,651,315',
'14,14,614,245,10,443,899,376,382,385,627,462,876,402,463,591,904,646',
'763,636,354,355,508,14,369,357,358,567,35,35,330,654,359,705,682,12',
'12,597,710,774,191,100,759,1,792,784,,,933,780,776,35,248,248,,,892',
',12,,693,248,404,405,406,407,615,,,,872,508,624,,625,477,,,822,268,628',
'272,946,14,,,776,285,14,10,10,,,,773,482,,289,629,,285,649,873,,874',
'947,,748,,470,289,35,10,,,282,35,,12,666,739,,786,12,391,396,,,282,',
'734,893,,,103,,,713,,726,909,,,729,,530,531,,,,547,,608,,532,,466,,',
',685,472,756,,704,755,115,,275,,694,865,10,275,,581,,10,,316,316,745',
'585,118,,,,589,632,,605,,,828,,750,,937,550,248,632,392,766,460,647',
',604,572,401,,,464,,556,120,,,,798,,508,797,618,,,,,800,751,806,599',
'905,,,,,,666,,666,584,,,585,,588,585,,,758,632,,,,,,650,,632,,248,,',
',,392,381,,,648,,,401,482,,,,392,285,,788,,482,,401,,,285,289,,,,,,',
',,289,2,,834,610,,,612,,282,897,666,684,,,,,,282,,,,,,305,248,,,699',
'605,392,278,605,,,248,14,401,392,14,,,,401,,,679,679,,,,,641,666,,666',
',,,,,14,,830,35,697,698,35,,906,709,12,,115,12,,,696,,,842,,,,,,,666',
'581,35,118,,508,921,,853,12,722,724,901,,,727,,,881,,884,,886,,316,',
'14,715,,,869,,,581,120,,761,,10,585,765,10,589,,482,14,14,,,285,,,,',
'35,757,,,,289,285,12,808,10,,,,14,,,289,944,,35,35,14,14,282,,,12,12',
',,,801,,,282,581,805,,,,,35,,,581,,,,12,35,35,,,374,375,,12,12,,943',
',10,115,,14,,,,,14,,802,829,,,922,278,807,799,14,10,10,,825,,,827,,',
',,,35,736,811,,,35,,12,,,10,,12,,,35,,,10,10,316,,12,,,14,,,,,,,,,,',
',14,,,,838,,,278,,,867,,278,,289,,35,,,,,,779,12,10,781,,,35,10,,,835',
'14,14,12,632,14,,10,,,,14,,679,,,,,859,,,,,,,,,,,35,35,336,,35,,,12',
'12,,35,12,289,14,,,10,12,920,,,,,316,,,,,10,,339,,839,,,,,,,,,35,,,',
',,248,12,,,,392,,,936,,,,401,,10,10,,,10,,,,,,10,,,13,,,,,13,14,,581',
',,,14,401,14,,,,208,,,,208,208,208,312,,,10,,13,283,283,,35,,,,,,35',
'12,35,,,875,,12,877,12,,13,208,,,,,208,208,,,208,325,335,335,,658,660',
'661,,,,894,,,895,,896,,,,,,,,,,,,,,,,,,10,,,,,13,10,,10,208,208,208',
'208,13,,,,,,,,,,,,,,675,,,677,,,,26,,,,,26,,,,938,,,939,,940,,,,26,',
',,26,26,26,,,945,,,26,,,,,,,379,383,,,,,,,,,,,,956,26,26,,,,,26,26,',
',26,,,13,13,208,208,208,208,744,,208,208,208,208,208,,,,,,,,,,,13,,753',
'754,,,,448,,450,,,,26,451,,,26,26,26,26,26,,,762,,,,,,,,767,768,,,,',
',,,,,,,,,,,208,208,,,,,,,,208,,13,,,,283,13,,,,,,,,,,,,283,,,,816,818',
'819,,,,,,,809,,,,,,,,,,,,,208,208,,26,26,26,26,26,26,,,26,26,26,26,26',
'845,846,,208,848,850,,852,,826,26,,,,,,577,,208,,,833,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,861,862,,,864,26,26,,,,,,,,26,,26,,,,,26,,208,,,,606',
',312,,609,,,,,,,,,,887,,617,911,912,914,916,,917,,,,,,,,,,26,26,,,,',
'927,929,930,931,,,,208,645,,,,606,26,,312,,283,,208,,,,,,,283,,26,,',
',,,,208,,,,,,,,934,950,952,953,954,,935,,379,955,,,,,,,,,,,957,,,,,',
',,,13,,,13,,,,,,208,,,,,,26,,,,208,,,208,717,,13,,,,,,,,,,,,,,,,,,,',
',,,,,,,747,,,,208,208,,,,208,,,26,,,,,,,,,,,,26,13,,,,,,,,,,,,,,,26',
',,,13,13,,,283,,,,,,,,,783,,283,,,,,,,13,,,,,,,,13,13,,26,,,26,,,,,',
'26,,,,,,,,,,26,,,26,,,26,,,,,,,,,810,208,,,,,13,,,,,13,,,,,,,,,,13,26',
'26,,,,26,,,,208,,,,,,,,,,,,26,,214,,,,247,247,247,,,,,,,,13,,,26,26',
',299,300,301,,,,13,,,,836,,,863,,247,247,,,26,,,,,,,,26,26,,,,,,,,,208',
',13,13,,,13,,,,,,13,,,,,,,,,,,,,,,,26,,,,879,26,,,,,26,,,,,13,,,,,26',
',,,,,,,,,26,,,,863,,,606,,,,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,208,26,,,',
',,,,,,,,13,,,,,,13,,13,,378,247,386,247,,,403,,,26,,26,26,,,26,,,,,214',
'26,,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432',
'433,434,435,436,437,438,439,440,441,442,,,,26,,,,,247,,247,,,,,247,',
',,,,247,247,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,26,488,,,,,,,,,,,,26',
',,,,,26,,26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,403,598,386,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,247,,247,,247,,,,,,,,,,,,616,,,,,,,,,,,,247,,,,,,,,,,638',
'639,640,,,,,,247,,,,247,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247',
'247,,,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,716,,247,719,,,723,725',
',,,728,,,730,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,247,,812,,,,,,,,,,,723,725,728,,814,,,,,,,,,,,247,,,247,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,,,,,,812',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'247,,,247,,,247' ]
        racc_goto_table = arr = ::Array.new(2504, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'49,49,26,4,21,48,28,28,28,21,40,60,60,87,61,61,34,52,52,88,19,84,3,63',
'63,58,26,15,57,44,42,113,45,8,21,21,21,45,115,17,122,11,11,82,17,55',
'55,46,53,53,149,81,81,110,5,21,59,59,43,49,59,145,45,45,45,117,21,21',
'21,17,104,87,33,33,33,9,55,55,55,40,13,13,40,45,13,111,64,19,64,144',
'17,8,106,14,45,45,45,45,14,83,83,149,64,118,21,22,22,39,135,24,32,32',
'21,135,24,24,146,20,24,38,47,47,139,14,139,139,78,13,13,13,13,90,45',
'35,107,115,91,92,93,17,45,111,62,111,14,62,94,17,95,96,97,98,35,35,99',
'14,30,30,30,100,101,24,24,24,24,102,105,58,58,103,9,86,85,32,32,80,89',
'108,9,77,76,69,28,68,66,104,65,61,115,116,56,54,119,14,49,120,121,21',
'21,36,123,14,124,107,15,15,15,44,126,146,15,127,40,128,129,130,44,133',
'134,113,21,25,136,137,138,45,45,16,122,140,141,84,17,17,19,142,143,12',
'10,6,1,5,106,,,107,145,144,45,28,28,,,117,,17,,46,28,24,24,24,24,40',
',,,110,113,40,,40,26,,,115,61,40,61,107,21,,,144,21,21,14,14,,,,118',
'42,,55,19,,21,40,111,,111,82,,35,,43,55,45,14,,,45,45,,17,105,113,,105',
'17,32,32,,,45,,20,111,,,87,,,139,,34,88,,,34,,13,13,,,,87,,149,,8,,39',
',,,19,39,20,,40,44,49,,38,,19,83,14,38,,26,,14,,24,24,63,61,52,,,,61',
'32,,64,,,64,,63,,111,24,28,32,61,59,30,22,,60,11,49,,,30,,24,53,,,,20',
',113,81,60,,,,,20,40,122,26,5,,,,,,105,,105,33,,,61,,33,61,,,40,32,',
',,,,60,,32,,28,,,,,61,58,,,57,,,49,42,,,,61,21,,40,,42,,49,,,21,55,',
',,,,,,,55,2,,81,33,,,33,,45,105,105,58,,,,,,45,,,,,,24,28,,,3,64,61',
'2,64,,,28,21,49,61,21,,,,49,,,87,87,,,,,24,105,,105,,,,,,21,,40,45,87',
'87,45,,84,21,17,,49,17,,,13,,,40,,,,,,,105,26,45,52,,113,4,,40,17,15',
'15,81,,,15,,,63,,63,,63,,24,,21,11,,,40,,,26,53,,57,,14,61,57,14,61',
',42,21,21,,,21,,,,,45,42,,,,55,21,17,48,14,,,,21,,,55,20,,45,45,21,21',
'45,,,17,17,,,,3,,,45,26,3,,,,,45,,,26,,,,17,45,45,,,2,2,,17,17,,63,',
'14,49,,21,,,,,21,,87,60,,,19,2,87,13,21,14,14,,58,,,58,,,,,,45,109,15',
',,45,,17,,,14,,17,,,45,,,14,14,24,,17,,,21,,,,,,,,,,,,21,,,,21,,,2,',
',3,,2,,55,,45,,,,,,109,17,14,109,,,45,14,,,45,21,21,17,32,21,,14,,,',
'21,,87,,,,,13,,,,,,,,,,,45,45,21,,45,,,17,17,,45,17,55,21,,,14,17,60',
',,,,24,,,,,14,,45,,14,,,,,,,,,45,,,,,,28,17,,,,61,,,3,,,,49,,14,14,',
',14,,,,,,14,,,18,,,,,18,21,,26,,,,21,49,21,,,,18,,,,18,18,18,23,,,14',
',18,18,18,,45,,,,,,45,17,45,,,109,,17,109,17,,18,18,,,,,18,18,,,18,18',
'18,18,,112,112,112,,,,109,,,109,,109,,,,,,,,,,,,,,,,,,14,,,,,18,14,',
'14,18,18,18,18,18,,,,,,,,,,,,,,2,,,2,,,,37,,,,,37,,,,109,,,109,,109',
',,,37,,,,37,37,37,,,109,,,37,,,,,,,23,23,,,,,,,,,,,,109,37,37,,,,,37',
'37,,,37,,,18,18,18,18,18,18,2,,18,18,18,18,18,,,,,,,,,,,18,,2,2,,,,23',
',23,,,,37,23,,,37,37,37,37,37,,,2,,,,,,,,2,2,,,,,,,,,,,,,,,,18,18,,',
',,,,,18,,18,,,,18,18,,,,,,,,,,,,18,,,,112,112,112,,,,,,,2,,,,,,,,,,',
',,18,18,,37,37,37,37,37,37,,,37,37,37,37,37,112,112,,18,112,112,,112',
',2,37,,,,,,23,,18,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,2,,,2,37,37',
',,,,,,,37,,37,,,,,37,,18,,,,23,,23,,23,,,,,,,,,,2,,23,112,112,112,112',
',112,,,,,,,,,,37,37,,,,,112,112,112,112,,,,18,23,,,,23,37,,23,,18,,18',
',,,,,,18,,37,,,,,,,18,,,,,,,,2,112,112,112,112,,2,,23,112,,,,,,,,,,',
'112,,,,,,,,,18,,,18,,,,,,18,,,,,,37,,,,18,,,18,23,,18,,,,,,,,,,,,,,',
',,,,,,,,,,,,23,,,,18,18,,,,18,,,37,,,,,,,,,,,,37,18,,,,,,,,,,,,,,,37',
',,,18,18,,,18,,,,,,,,,23,,18,,,,,,,18,,,,,,,,18,18,,37,,,37,,,,,,37',
',,,,,,,,,37,,,37,,,37,,,,,,,,,23,18,,,,,18,,,,,18,,,,,,,,,,18,37,37',
',,,37,,,,18,,,,,,,,,,,,37,,27,,,,27,27,27,,,,,,,,18,,,37,37,,27,27,27',
',,,18,,,,18,,,23,,27,27,,,37,,,,,,,,37,37,,,,,,,,,18,,18,18,,,18,,,',
',,18,,,,,,,,,,,,,,,,37,,,,18,37,,,,,37,,,,,18,,,,,37,,,,,,,,,,37,,,',
'23,,,23,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,18,37,,,,,,,,,,,,18,,,,,,18',
',18,,27,27,27,27,,,27,,,37,,37,37,,,37,,,,,27,37,,27,27,27,27,27,27',
'27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,,,37,,',
',,27,,27,,,,,27,,,,,,27,27,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,37,27',
',,,,,,,,,,,37,,,,,,37,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,,27,27,27,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,27,,27,,27,,,,,,,,,,,,27,,,,,,,,,,,,27,,,,,,,',
',,27,27,27,,,,,,27,,,,27,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27',
'27,,,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,,27,27,,,27,27,,,,27',
',,27,,,,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'27,,27,,,,,,,,,,,27,27,27,,27,,,,,,,,,,,27,,,27,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,,27,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,27,,,27,,,27' ]
        racc_goto_check = arr = ::Array.new(2504, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   240,   495,   -29,  -300,  -436,  -403,   nil,    30,    70,
   235,    35,   230,    23,    93,     9,   165,    39,   899,  -178,
  -270,     4,   -90,   870,    57,   111,   -15,  1615,   -16,   nil,
   134,   nil,   -89,    46,  -248,  -310,  -257,  1028,    89,    77,
  -195,   nil,    -1,    26,  -264,    32,  -286,    57,   -60,    -6,
   nil,   nil,    11,    42,  -182,    14,   137,   -25,   -28,  -251,
   -42,   -12,  -310,  -226,  -359,  -275,   -82,   nil,  -278,  -440,
   nil,   nil,   nil,   nil,   nil,   nil,   115,   125,    71,   nil,
   119,  -266,  -632,  -431,  -301,   110,  -166,    10,  -533,   111,
  -220,  -169,    78,  -540,    86,  -533,  -390,  -715,  -395,  -544,
  -181,  -190,  -388,  -639,  -715,  -351,  -425,  -653,  -424,   127,
  -548,  -516,   460,  -284,   nil,  -466,  -466,  -590,  -552,  -123,
  -307,   140,  -275,   180,   -42,   nil,   -61,   -59,  -651,  -277,
  -431,   nil,   nil,   146,   145,    32,   145,   145,  -134,  -233,
   150,  -330,  -326,  -421,  -568,  -598,  -701,   nil,   nil,  -397 ]

racc_goto_default = [
   nil,   nil,   303,   nil,   nil,   790,   nil,     3,   nil,     4,
   323,   nil,   nil,   nil,   212,    16,    11,   213,   298,   nil,
   nil,   211,   nil,   253,    15,   nil,   409,    19,    20,    21,
   388,    25,   635,   nil,   nil,   nil,   nil,   288,    29,   nil,
   nil,    31,    34,    33,   nil,   209,   334,   nil,   117,   394,
   116,   119,    69,    70,   nil,    42,   nil,   643,   249,   nil,
   250,   399,   586,   nil,   251,   nil,   nil,   266,   nil,   nil,
    43,    44,    45,    46,    47,    48,    49,   nil,   267,    55,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   527,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   668,   516,   nil,   669,   nil,   505,
   nil,   507,   nil,   777,   600,   nil,   nil,   nil,   513,   nil,
   nil,   nil,   702,   nil,   nil,   398,   nil,   nil,   nil,   nil,
   nil,    68,    71,    72,   nil,   nil,   nil,   nil,   nil,   563,
   nil,   nil,   nil,   506,   518,   519,   743,   522,   525,   258 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 138, :_reduce_none,
  4, 140, :_reduce_2,
  2, 139, :_reduce_3,
  0, 144, :_reduce_4,
  1, 144, :_reduce_5,
  3, 144, :_reduce_6,
  2, 144, :_reduce_7,
  0, 162, :_reduce_8,
  4, 146, :_reduce_9,
  3, 146, :_reduce_10,
  3, 146, :_reduce_11,
  3, 146, :_reduce_12,
  2, 146, :_reduce_13,
  3, 146, :_reduce_14,
  3, 146, :_reduce_15,
  3, 146, :_reduce_16,
  3, 146, :_reduce_17,
  3, 146, :_reduce_18,
  4, 146, :_reduce_19,
  4, 146, :_reduce_20,
  3, 146, :_reduce_21,
  3, 146, :_reduce_22,
  3, 146, :_reduce_23,
  6, 146, :_reduce_24,
  5, 146, :_reduce_25,
  5, 146, :_reduce_26,
  5, 146, :_reduce_27,
  3, 146, :_reduce_28,
  3, 146, :_reduce_29,
  3, 146, :_reduce_30,
  3, 146, :_reduce_31,
  1, 146, :_reduce_none,
  1, 161, :_reduce_none,
  3, 161, :_reduce_34,
  3, 161, :_reduce_35,
  3, 161, :_reduce_36,
  2, 161, :_reduce_37,
  1, 161, :_reduce_none,
  1, 150, :_reduce_none,
  1, 152, :_reduce_none,
  1, 152, :_reduce_none,
  2, 152, :_reduce_42,
  2, 152, :_reduce_43,
  2, 152, :_reduce_44,
  1, 166, :_reduce_none,
  4, 166, :_reduce_46,
  4, 166, :_reduce_47,
  0, 173, :_reduce_48,
  5, 171, :_reduce_49,
  2, 165, :_reduce_50,
  3, 165, :_reduce_51,
  4, 165, :_reduce_52,
  5, 165, :_reduce_53,
  4, 165, :_reduce_54,
  5, 165, :_reduce_55,
  2, 165, :_reduce_56,
  2, 165, :_reduce_57,
  1, 153, :_reduce_58,
  3, 153, :_reduce_59,
  1, 176, :_reduce_60,
  3, 176, :_reduce_61,
  1, 175, :_reduce_none,
  2, 175, :_reduce_63,
  3, 175, :_reduce_64,
  5, 175, :_reduce_65,
  2, 175, :_reduce_66,
  4, 175, :_reduce_67,
  2, 175, :_reduce_68,
  4, 175, :_reduce_69,
  1, 175, :_reduce_70,
  3, 175, :_reduce_71,
  1, 179, :_reduce_none,
  3, 179, :_reduce_73,
  2, 178, :_reduce_74,
  3, 178, :_reduce_75,
  1, 181, :_reduce_76,
  3, 181, :_reduce_77,
  1, 180, :_reduce_78,
  4, 180, :_reduce_79,
  3, 180, :_reduce_80,
  3, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_83,
  2, 180, :_reduce_84,
  1, 180, :_reduce_85,
  1, 151, :_reduce_86,
  4, 151, :_reduce_87,
  3, 151, :_reduce_88,
  3, 151, :_reduce_89,
  3, 151, :_reduce_90,
  3, 151, :_reduce_91,
  2, 151, :_reduce_92,
  1, 151, :_reduce_93,
  1, 183, :_reduce_94,
  1, 183, :_reduce_none,
  2, 184, :_reduce_96,
  1, 184, :_reduce_97,
  3, 184, :_reduce_98,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 188, :_reduce_104,
  1, 188, :_reduce_none,
  1, 148, :_reduce_none,
  1, 148, :_reduce_none,
  1, 149, :_reduce_108,
  0, 191, :_reduce_109,
  4, 149, :_reduce_110,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 164, :_reduce_181,
  5, 164, :_reduce_182,
  3, 164, :_reduce_183,
  5, 164, :_reduce_184,
  6, 164, :_reduce_185,
  5, 164, :_reduce_186,
  5, 164, :_reduce_187,
  5, 164, :_reduce_188,
  5, 164, :_reduce_189,
  4, 164, :_reduce_190,
  3, 164, :_reduce_191,
  3, 164, :_reduce_192,
  3, 164, :_reduce_193,
  3, 164, :_reduce_194,
  3, 164, :_reduce_195,
  3, 164, :_reduce_196,
  3, 164, :_reduce_197,
  3, 164, :_reduce_198,
  3, 164, :_reduce_199,
  4, 164, :_reduce_200,
  4, 164, :_reduce_201,
  2, 164, :_reduce_202,
  2, 164, :_reduce_203,
  3, 164, :_reduce_204,
  3, 164, :_reduce_205,
  3, 164, :_reduce_206,
  3, 164, :_reduce_207,
  3, 164, :_reduce_208,
  3, 164, :_reduce_209,
  3, 164, :_reduce_210,
  3, 164, :_reduce_211,
  3, 164, :_reduce_212,
  3, 164, :_reduce_213,
  3, 164, :_reduce_214,
  3, 164, :_reduce_215,
  3, 164, :_reduce_216,
  2, 164, :_reduce_217,
  2, 164, :_reduce_218,
  3, 164, :_reduce_219,
  3, 164, :_reduce_220,
  3, 164, :_reduce_221,
  3, 164, :_reduce_222,
  3, 164, :_reduce_223,
  6, 164, :_reduce_224,
  1, 164, :_reduce_none,
  1, 160, :_reduce_none,
  1, 193, :_reduce_none,
  2, 193, :_reduce_none,
  4, 193, :_reduce_229,
  2, 193, :_reduce_230,
  3, 198, :_reduce_231,
  0, 199, :_reduce_232,
  1, 199, :_reduce_none,
  0, 156, :_reduce_234,
  1, 156, :_reduce_none,
  1, 167, :_reduce_236,
  2, 167, :_reduce_237,
  2, 167, :_reduce_238,
  4, 167, :_reduce_239,
  6, 167, :_reduce_240,
  1, 167, :_reduce_241,
  4, 202, :_reduce_242,
  3, 202, :_reduce_243,
  2, 202, :_reduce_244,
  4, 202, :_reduce_245,
  6, 202, :_reduce_246,
  1, 202, :_reduce_247,
  0, 204, :_reduce_248,
  2, 170, :_reduce_249,
  1, 203, :_reduce_250,
  0, 205, :_reduce_251,
  3, 203, :_reduce_252,
  0, 206, :_reduce_253,
  4, 203, :_reduce_254,
  2, 201, :_reduce_255,
  2, 200, :_reduce_256,
  1, 200, :_reduce_257,
  0, 200, :_reduce_258,
  1, 195, :_reduce_259,
  2, 195, :_reduce_260,
  3, 195, :_reduce_261,
  4, 195, :_reduce_262,
  3, 159, :_reduce_263,
  4, 159, :_reduce_264,
  2, 159, :_reduce_265,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_274,
  3, 192, :_reduce_275,
  0, 228, :_reduce_276,
  4, 192, :_reduce_277,
  3, 192, :_reduce_278,
  3, 192, :_reduce_279,
  2, 192, :_reduce_280,
  3, 192, :_reduce_281,
  3, 192, :_reduce_282,
  1, 192, :_reduce_283,
  4, 192, :_reduce_284,
  3, 192, :_reduce_285,
  1, 192, :_reduce_286,
  5, 192, :_reduce_287,
  4, 192, :_reduce_288,
  3, 192, :_reduce_289,
  2, 192, :_reduce_290,
  1, 192, :_reduce_none,
  2, 192, :_reduce_292,
  2, 192, :_reduce_293,
  6, 192, :_reduce_294,
  6, 192, :_reduce_295,
  0, 229, :_reduce_296,
  0, 230, :_reduce_297,
  7, 192, :_reduce_298,
  0, 231, :_reduce_299,
  0, 232, :_reduce_300,
  7, 192, :_reduce_301,
  5, 192, :_reduce_302,
  4, 192, :_reduce_303,
  0, 233, :_reduce_304,
  0, 234, :_reduce_305,
  9, 192, :_reduce_306,
  0, 235, :_reduce_307,
  6, 192, :_reduce_308,
  0, 236, :_reduce_309,
  7, 192, :_reduce_310,
  0, 237, :_reduce_311,
  5, 192, :_reduce_312,
  0, 238, :_reduce_313,
  6, 192, :_reduce_314,
  0, 239, :_reduce_315,
  0, 240, :_reduce_316,
  9, 192, :_reduce_317,
  1, 192, :_reduce_318,
  1, 192, :_reduce_319,
  1, 192, :_reduce_320,
  1, 192, :_reduce_321,
  1, 155, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  2, 218, :_reduce_325,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 219, :_reduce_none,
  5, 219, :_reduce_329,
  1, 142, :_reduce_none,
  2, 142, :_reduce_331,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 241, :_reduce_none,
  3, 241, :_reduce_335,
  1, 244, :_reduce_336,
  3, 244, :_reduce_337,
  1, 243, :_reduce_none,
  4, 243, :_reduce_339,
  6, 243, :_reduce_340,
  3, 243, :_reduce_341,
  5, 243, :_reduce_342,
  2, 243, :_reduce_343,
  4, 243, :_reduce_344,
  1, 243, :_reduce_345,
  3, 243, :_reduce_346,
  6, 245, :_reduce_347,
  8, 245, :_reduce_348,
  4, 245, :_reduce_349,
  6, 245, :_reduce_350,
  4, 245, :_reduce_351,
  2, 245, :_reduce_none,
  6, 245, :_reduce_353,
  2, 245, :_reduce_354,
  4, 245, :_reduce_355,
  6, 245, :_reduce_356,
  2, 245, :_reduce_357,
  4, 245, :_reduce_358,
  2, 245, :_reduce_359,
  4, 245, :_reduce_360,
  1, 245, :_reduce_361,
  0, 172, :_reduce_362,
  1, 172, :_reduce_363,
  3, 251, :_reduce_364,
  1, 251, :_reduce_365,
  4, 251, :_reduce_366,
  0, 252, :_reduce_367,
  2, 252, :_reduce_368,
  1, 253, :_reduce_369,
  3, 253, :_reduce_370,
  1, 254, :_reduce_371,
  1, 254, :_reduce_none,
  0, 258, :_reduce_373,
  3, 217, :_reduce_374,
  4, 256, :_reduce_375,
  2, 256, :_reduce_376,
  3, 257, :_reduce_377,
  3, 257, :_reduce_378,
  0, 261, :_reduce_379,
  5, 260, :_reduce_380,
  2, 168, :_reduce_381,
  4, 168, :_reduce_382,
  4, 168, :_reduce_383,
  2, 216, :_reduce_384,
  4, 216, :_reduce_385,
  4, 216, :_reduce_386,
  3, 216, :_reduce_387,
  3, 216, :_reduce_388,
  3, 216, :_reduce_389,
  2, 216, :_reduce_390,
  1, 216, :_reduce_391,
  4, 216, :_reduce_392,
  0, 263, :_reduce_393,
  5, 215, :_reduce_394,
  0, 264, :_reduce_395,
  5, 215, :_reduce_396,
  5, 221, :_reduce_397,
  1, 265, :_reduce_398,
  1, 265, :_reduce_none,
  6, 141, :_reduce_400,
  0, 141, :_reduce_401,
  1, 266, :_reduce_402,
  1, 266, :_reduce_none,
  1, 266, :_reduce_none,
  2, 267, :_reduce_405,
  1, 267, :_reduce_none,
  2, 143, :_reduce_407,
  1, 143, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_412,
  1, 269, :_reduce_413,
  2, 269, :_reduce_414,
  3, 270, :_reduce_415,
  1, 270, :_reduce_416,
  1, 270, :_reduce_417,
  3, 209, :_reduce_418,
  4, 210, :_reduce_419,
  3, 211, :_reduce_420,
  0, 274, :_reduce_421,
  3, 274, :_reduce_422,
  1, 275, :_reduce_423,
  2, 275, :_reduce_424,
  3, 212, :_reduce_425,
  0, 277, :_reduce_426,
  3, 277, :_reduce_427,
  0, 271, :_reduce_428,
  2, 271, :_reduce_429,
  0, 272, :_reduce_430,
  2, 272, :_reduce_431,
  0, 273, :_reduce_432,
  2, 273, :_reduce_433,
  1, 276, :_reduce_434,
  2, 276, :_reduce_435,
  0, 279, :_reduce_436,
  4, 276, :_reduce_437,
  1, 278, :_reduce_438,
  1, 278, :_reduce_439,
  1, 278, :_reduce_440,
  1, 278, :_reduce_none,
  1, 189, :_reduce_442,
  3, 190, :_reduce_443,
  1, 268, :_reduce_444,
  1, 268, :_reduce_445,
  2, 268, :_reduce_446,
  2, 268, :_reduce_447,
  1, 182, :_reduce_448,
  1, 182, :_reduce_449,
  1, 182, :_reduce_450,
  1, 182, :_reduce_451,
  1, 182, :_reduce_452,
  1, 182, :_reduce_453,
  1, 182, :_reduce_454,
  1, 182, :_reduce_455,
  1, 182, :_reduce_456,
  1, 182, :_reduce_457,
  1, 182, :_reduce_458,
  1, 182, :_reduce_459,
  1, 213, :_reduce_460,
  1, 154, :_reduce_461,
  1, 158, :_reduce_462,
  1, 158, :_reduce_463,
  1, 223, :_reduce_464,
  3, 223, :_reduce_465,
  2, 223, :_reduce_466,
  3, 225, :_reduce_467,
  2, 225, :_reduce_468,
  6, 259, :_reduce_469,
  8, 259, :_reduce_470,
  4, 259, :_reduce_471,
  6, 259, :_reduce_472,
  4, 259, :_reduce_473,
  6, 259, :_reduce_474,
  2, 259, :_reduce_475,
  4, 259, :_reduce_476,
  6, 259, :_reduce_477,
  2, 259, :_reduce_478,
  4, 259, :_reduce_479,
  2, 259, :_reduce_480,
  4, 259, :_reduce_481,
  1, 259, :_reduce_482,
  0, 259, :_reduce_483,
  1, 255, :_reduce_484,
  1, 255, :_reduce_485,
  1, 255, :_reduce_486,
  1, 255, :_reduce_487,
  1, 242, :_reduce_none,
  1, 242, :_reduce_489,
  3, 242, :_reduce_490,
  2, 242, :_reduce_491,
  1, 281, :_reduce_none,
  3, 281, :_reduce_493,
  1, 246, :_reduce_494,
  3, 246, :_reduce_495,
  3, 282, :_reduce_496,
  3, 283, :_reduce_497,
  1, 247, :_reduce_498,
  3, 247, :_reduce_499,
  1, 280, :_reduce_500,
  3, 280, :_reduce_501,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  2, 248, :_reduce_504,
  1, 248, :_reduce_505,
  1, 285, :_reduce_none,
  1, 285, :_reduce_none,
  2, 250, :_reduce_508,
  2, 249, :_reduce_509,
  0, 249, :_reduce_510,
  1, 226, :_reduce_none,
  3, 226, :_reduce_512,
  0, 214, :_reduce_513,
  2, 214, :_reduce_none,
  1, 197, :_reduce_515,
  3, 197, :_reduce_516,
  3, 286, :_reduce_517,
  2, 286, :_reduce_518,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 169, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 262, :_reduce_none,
  1, 227, :_reduce_none,
  1, 227, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 163, :_reduce_none,
  1, 163, :_reduce_none,
  2, 177, :_reduce_535,
  2, 157, :_reduce_536,
  0, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 224, :_reduce_540,
  1, 224, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_none,
  0, 194, :_reduce_544 ]

racc_reduce_n = 545

racc_shift_n = 958

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tREGEXP_OPT => 118,
  :tWORDS_BEG => 119,
  :tQWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tCHARACTER => 134,
  :tEQL => 135,
  :tLOWEST => 136 }

racc_nt_base = 137

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "compstmt",
  "bodystmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "opt_terms",
  "stmt",
  "terms",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "@2",
  "operation",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "primary",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@4",
  "@5",
  "@6",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@20",
  "f_args",
  "do_block",
  "@21",
  "operation3",
  "@22",
  "@23",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@24",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'rubymotion.y', 51)
  def _reduce_2(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 67)
  def _reduce_3(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 72)
  def _reduce_4(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 76)
  def _reduce_5(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 80)
  def _reduce_6(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 84)
  def _reduce_7(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 89)
  def _reduce_8(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 93)
  def _reduce_9(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 97)
  def _reduce_10(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 103)
  def _reduce_11(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 109)
  def _reduce_12(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 113)
  def _reduce_13(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 117)
  def _reduce_14(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 122)
  def _reduce_15(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 127)
  def _reduce_16(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 131)
  def _reduce_17(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 135)
  def _reduce_18(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 143)
  def _reduce_19(val, _values, result)
                          if in_def?
                        diagnostic :error, :begin_in_method, nil, val[0]
                      end

                      result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 151)
  def _reduce_20(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 155)
  def _reduce_21(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 159)
  def _reduce_22(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 163)
  def _reduce_23(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 167)
  def _reduce_24(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 174)
  def _reduce_25(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 181)
  def _reduce_26(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 188)
  def _reduce_27(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 195)
  def _reduce_28(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 199)
  def _reduce_29(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 204)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 208)
  def _reduce_31(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'rubymotion.y', 216)
  def _reduce_34(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 220)
  def _reduce_35(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 224)
  def _reduce_36(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 228)
  def _reduce_37(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'rubymotion.y', 238)
  def _reduce_42(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 243)
  def _reduce_43(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 248)
  def _reduce_44(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'rubymotion.y', 255)
  def _reduce_46(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 260)
  def _reduce_47(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 266)
  def _reduce_48(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 270)
  def _reduce_49(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 277)
  def _reduce_50(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  *val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 282)
  def _reduce_51(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        *val[1])

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 291)
  def _reduce_52(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 296)
  def _reduce_53(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        *val[3])

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 305)
  def _reduce_54(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  *val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 310)
  def _reduce_55(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        *val[3])

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 319)
  def _reduce_56(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  *val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 324)
  def _reduce_57(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  *val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 330)
  def _reduce_58(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 334)
  def _reduce_59(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 339)
  def _reduce_60(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 343)
  def _reduce_61(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'rubymotion.y', 349)
  def _reduce_63(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 354)
  def _reduce_64(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 359)
  def _reduce_65(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 365)
  def _reduce_66(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 370)
  def _reduce_67(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 376)
  def _reduce_68(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 380)
  def _reduce_69(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 385)
  def _reduce_70(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 389)
  def _reduce_71(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'rubymotion.y', 396)
  def _reduce_73(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 401)
  def _reduce_74(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 405)
  def _reduce_75(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 410)
  def _reduce_76(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 414)
  def _reduce_77(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 419)
  def _reduce_78(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 423)
  def _reduce_79(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 427)
  def _reduce_80(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 431)
  def _reduce_81(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 435)
  def _reduce_82(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 439)
  def _reduce_83(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 444)
  def _reduce_84(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 449)
  def _reduce_85(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 454)
  def _reduce_86(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 458)
  def _reduce_87(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 462)
  def _reduce_88(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 466)
  def _reduce_89(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 470)
  def _reduce_90(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 474)
  def _reduce_91(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 479)
  def _reduce_92(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 484)
  def _reduce_93(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 489)
  def _reduce_94(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 95 omitted

module_eval(<<'.,.,', 'rubymotion.y', 495)
  def _reduce_96(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 499)
  def _reduce_97(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 503)
  def _reduce_98(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'rubymotion.y', 512)
  def _reduce_104(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'rubymotion.y', 521)
  def _reduce_108(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 525)
  def _reduce_109(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 529)
  def _reduce_110(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

module_eval(<<'.,.,', 'rubymotion.y', 550)
  def _reduce_181(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 554)
  def _reduce_182(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 564)
  def _reduce_183(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 568)
  def _reduce_184(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 578)
  def _reduce_185(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 585)
  def _reduce_186(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 592)
  def _reduce_187(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 599)
  def _reduce_188(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 606)
  def _reduce_189(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[2], [ val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 610)
  def _reduce_190(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[1], [ val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 614)
  def _reduce_191(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 618)
  def _reduce_192(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 622)
  def _reduce_193(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 626)
  def _reduce_194(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 630)
  def _reduce_195(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 634)
  def _reduce_196(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 638)
  def _reduce_197(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 642)
  def _reduce_198(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 646)
  def _reduce_199(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 650)
  def _reduce_200(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.integer(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 657)
  def _reduce_201(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.float(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 664)
  def _reduce_202(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 668)
  def _reduce_203(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 672)
  def _reduce_204(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 676)
  def _reduce_205(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 680)
  def _reduce_206(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 684)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 688)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 692)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 696)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 700)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 704)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 708)
  def _reduce_213(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 712)
  def _reduce_214(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 716)
  def _reduce_215(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 720)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 724)
  def _reduce_217(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 728)
  def _reduce_218(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 732)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 736)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 740)
  def _reduce_221(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 744)
  def _reduce_222(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 748)
  def _reduce_223(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 753)
  def _reduce_224(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 225 omitted

# reduce 226 omitted

# reduce 227 omitted

# reduce 228 omitted

module_eval(<<'.,.,', 'rubymotion.y', 764)
  def _reduce_229(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 768)
  def _reduce_230(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 773)
  def _reduce_231(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 778)
  def _reduce_232(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 233 omitted

module_eval(<<'.,.,', 'rubymotion.y', 784)
  def _reduce_234(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 235 omitted

module_eval(<<'.,.,', 'rubymotion.y', 790)
  def _reduce_236(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 794)
  def _reduce_237(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 798)
  def _reduce_238(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 803)
  def _reduce_239(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 809)
  def _reduce_240(val, _values, result)
                          val[2][-1] = @builder.objc_varargs(val[2][-1], val[4])
                      assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 816)
  def _reduce_241(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 821)
  def _reduce_242(val, _values, result)
                          result = [ val[0], *val[2].concat(val[3]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 825)
  def _reduce_243(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 829)
  def _reduce_244(val, _values, result)
                          result =  [ @builder.associate(nil, val[0], nil),
                                  *val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 834)
  def _reduce_245(val, _values, result)
                          result =  [ val[0],
                                  @builder.associate(nil, val[2], nil),
                                  *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 840)
  def _reduce_246(val, _values, result)
                          result =  [ val[0],
                                  *val[2].
                                    push(@builder.associate(nil, val[4], nil)).
                                    concat(val[5]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 847)
  def _reduce_247(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 851)
  def _reduce_248(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 856)
  def _reduce_249(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 863)
  def _reduce_250(val, _values, result)
                          result = [ nil, val[0], nil ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 867)
  def _reduce_251(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 871)
  def _reduce_252(val, _values, result)
                          result = [ val[0], [], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 875)
  def _reduce_253(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 879)
  def _reduce_254(val, _values, result)
                          result = [ val[0], val[1], val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 884)
  def _reduce_255(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 889)
  def _reduce_256(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 893)
  def _reduce_257(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 897)
  def _reduce_258(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 902)
  def _reduce_259(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 906)
  def _reduce_260(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 910)
  def _reduce_261(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 914)
  def _reduce_262(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 919)
  def _reduce_263(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 923)
  def _reduce_264(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 927)
  def _reduce_265(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

module_eval(<<'.,.,', 'rubymotion.y', 940)
  def _reduce_274(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 944)
  def _reduce_275(val, _values, result)
                          result = @builder.begin_keyword(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 948)
  def _reduce_276(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 952)
  def _reduce_277(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 956)
  def _reduce_278(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 960)
  def _reduce_279(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 964)
  def _reduce_280(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 968)
  def _reduce_281(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 972)
  def _reduce_282(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 976)
  def _reduce_283(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 980)
  def _reduce_284(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 984)
  def _reduce_285(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 988)
  def _reduce_286(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 992)
  def _reduce_287(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 997)
  def _reduce_288(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1001)
  def _reduce_289(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1005)
  def _reduce_290(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 291 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1014)
  def _reduce_292(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1020)
  def _reduce_293(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1028)
  def _reduce_294(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1035)
  def _reduce_295(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1042)
  def _reduce_296(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1046)
  def _reduce_297(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1050)
  def _reduce_298(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1055)
  def _reduce_299(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1059)
  def _reduce_300(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1063)
  def _reduce_301(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1068)
  def _reduce_302(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1076)
  def _reduce_303(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1084)
  def _reduce_304(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1088)
  def _reduce_305(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1092)
  def _reduce_306(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1098)
  def _reduce_307(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1103)
  def _reduce_308(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1117)
  def _reduce_309(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1125)
  def _reduce_310(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1135)
  def _reduce_311(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1140)
  def _reduce_312(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1152)
  def _reduce_313(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1158)
  def _reduce_314(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1167)
  def _reduce_315(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1171)
  def _reduce_316(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1177)
  def _reduce_317(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1186)
  def _reduce_318(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1190)
  def _reduce_319(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1194)
  def _reduce_320(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1198)
  def _reduce_321(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1207)
  def _reduce_325(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1216)
  def _reduce_329(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 330 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1227)
  def _reduce_331(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1236)
  def _reduce_335(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1241)
  def _reduce_336(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1245)
  def _reduce_337(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 338 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1251)
  def _reduce_339(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1256)
  def _reduce_340(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1262)
  def _reduce_341(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1267)
  def _reduce_342(val, _values, result)
                          result = val[0].
                                  push(@builder.objc_restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1273)
  def _reduce_343(val, _values, result)
                          result = [ @builder.objc_restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1277)
  def _reduce_344(val, _values, result)
                          result = [ @builder.objc_restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1282)
  def _reduce_345(val, _values, result)
                          result = [ @builder.objc_restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1286)
  def _reduce_346(val, _values, result)
                          result = [ @builder.objc_restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1292)
  def _reduce_347(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1299)
  def _reduce_348(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1307)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1313)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1320)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 352 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1327)
  def _reduce_353(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1334)
  def _reduce_354(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1338)
  def _reduce_355(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1344)
  def _reduce_356(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1351)
  def _reduce_357(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1356)
  def _reduce_358(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1362)
  def _reduce_359(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1367)
  def _reduce_360(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1373)
  def _reduce_361(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1378)
  def _reduce_362(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1382)
  def _reduce_363(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1387)
  def _reduce_364(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1391)
  def _reduce_365(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1395)
  def _reduce_366(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1400)
  def _reduce_367(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1404)
  def _reduce_368(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1409)
  def _reduce_369(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1413)
  def _reduce_370(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1418)
  def _reduce_371(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 372 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1423)
  def _reduce_373(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1427)
  def _reduce_374(val, _values, result)
                          result = [ val[1], val[2] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1434)
  def _reduce_375(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1438)
  def _reduce_376(val, _values, result)
                          result = @builder.args(nil, val[0].concat(val[1]), nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1443)
  def _reduce_377(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1447)
  def _reduce_378(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1452)
  def _reduce_379(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1456)
  def _reduce_380(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1463)
  def _reduce_381(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1469)
  def _reduce_382(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1475)
  def _reduce_383(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1482)
  def _reduce_384(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1488)
  def _reduce_385(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1494)
  def _reduce_386(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1500)
  def _reduce_387(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1504)
  def _reduce_388(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1510)
  def _reduce_389(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1516)
  def _reduce_390(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1522)
  def _reduce_391(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1526)
  def _reduce_392(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1531)
  def _reduce_393(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1535)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1541)
  def _reduce_395(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1545)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1552)
  def _reduce_397(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1558)
  def _reduce_398(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 399 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1564)
  def _reduce_400(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1577)
  def _reduce_401(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1582)
  def _reduce_402(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 403 omitted

# reduce 404 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1589)
  def _reduce_405(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 406 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1595)
  def _reduce_407(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 408 omitted

# reduce 409 omitted

# reduce 410 omitted

# reduce 411 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1605)
  def _reduce_412(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1610)
  def _reduce_413(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1614)
  def _reduce_414(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1619)
  def _reduce_415(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1623)
  def _reduce_416(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1627)
  def _reduce_417(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1632)
  def _reduce_418(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1637)
  def _reduce_419(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1643)
  def _reduce_420(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1648)
  def _reduce_421(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1652)
  def _reduce_422(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1657)
  def _reduce_423(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1661)
  def _reduce_424(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1666)
  def _reduce_425(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1671)
  def _reduce_426(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1675)
  def _reduce_427(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1680)
  def _reduce_428(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1684)
  def _reduce_429(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1689)
  def _reduce_430(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1693)
  def _reduce_431(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1698)
  def _reduce_432(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1702)
  def _reduce_433(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1707)
  def _reduce_434(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1711)
  def _reduce_435(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1715)
  def _reduce_436(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1720)
  def _reduce_437(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1728)
  def _reduce_438(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1732)
  def _reduce_439(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1736)
  def _reduce_440(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 441 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1743)
  def _reduce_442(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1748)
  def _reduce_443(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1753)
  def _reduce_444(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1757)
  def _reduce_445(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1761)
  def _reduce_446(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.integer(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1766)
  def _reduce_447(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.float(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1772)
  def _reduce_448(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1776)
  def _reduce_449(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1780)
  def _reduce_450(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1784)
  def _reduce_451(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1788)
  def _reduce_452(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1792)
  def _reduce_453(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1796)
  def _reduce_454(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1800)
  def _reduce_455(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1804)
  def _reduce_456(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1808)
  def _reduce_457(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1812)
  def _reduce_458(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1816)
  def _reduce_459(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1821)
  def _reduce_460(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1826)
  def _reduce_461(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1831)
  def _reduce_462(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1835)
  def _reduce_463(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1840)
  def _reduce_464(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1844)
  def _reduce_465(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1848)
  def _reduce_466(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1854)
  def _reduce_467(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1860)
  def _reduce_468(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1865)
  def _reduce_469(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1872)
  def _reduce_470(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1880)
  def _reduce_471(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1886)
  def _reduce_472(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1893)
  def _reduce_473(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1899)
  def _reduce_474(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1906)
  def _reduce_475(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1911)
  def _reduce_476(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1917)
  def _reduce_477(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1924)
  def _reduce_478(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1929)
  def _reduce_479(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1935)
  def _reduce_480(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1940)
  def _reduce_481(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1946)
  def _reduce_482(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1950)
  def _reduce_483(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1955)
  def _reduce_484(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1959)
  def _reduce_485(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1963)
  def _reduce_486(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1967)
  def _reduce_487(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 488 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1973)
  def _reduce_489(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1979)
  def _reduce_490(val, _values, result)
                          @static_env.declare val[2][0]

                      result = @builder.objc_kwarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1985)
  def _reduce_491(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.objc_kwarg(val[0], nil, val[1])
                    
    result
  end
.,.,

# reduce 492 omitted

module_eval(<<'.,.,', 'rubymotion.y', 1993)
  def _reduce_493(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 1998)
  def _reduce_494(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2002)
  def _reduce_495(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2007)
  def _reduce_496(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2014)
  def _reduce_497(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2021)
  def _reduce_498(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2025)
  def _reduce_499(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2030)
  def _reduce_500(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2034)
  def _reduce_501(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 502 omitted

# reduce 503 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2041)
  def _reduce_504(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2047)
  def _reduce_505(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 506 omitted

# reduce 507 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2054)
  def _reduce_508(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2061)
  def _reduce_509(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2065)
  def _reduce_510(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 511 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2071)
  def _reduce_512(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2076)
  def _reduce_513(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 514 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2082)
  def _reduce_515(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2086)
  def _reduce_516(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2091)
  def _reduce_517(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2095)
  def _reduce_518(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2106)
  def _reduce_535(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'rubymotion.y', 2110)
  def _reduce_536(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2116)
  def _reduce_540(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

module_eval(<<'.,.,', 'rubymotion.y', 2125)
  def _reduce_544(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RubyMotion
  end   # module Parser
