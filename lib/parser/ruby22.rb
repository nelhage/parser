# -*- encoding:utf-8; warn-indent:false; frozen_string_literal: true  -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'parser'

Parser.check_for_encoding_support

module Parser
  class Ruby22 < Parser::Base

module_eval(<<'...end ruby22.y/module_eval...', 'ruby22.y', 2333)

  def version
    22
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby22.y/module_eval...
##### State transition tables begin ###

clist = [
'-576,568,568,-100,268,-99,966,-576,-576,-576,268,-102,-576,-576,-576',
'217,-576,589,647,-105,-286,238,647,214,215,-576,-576,-576,-576,-104',
'-102,-97,-98,610,806,-99,-576,-576,-101,-576,-576,-576,-576,-576,612',
'444,-100,568,568,396,715,841,-83,646,398,397,218,646,815,113,-286,-69',
'568,637,112,715,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576',
'-576,-576,-576,715,-93,-576,-576,-576,218,772,-576,214,215,-576,267',
'-101,-576,-576,634,-576,267,-576,609,-576,-105,-576,-576,268,-576,-576',
'-576,-576,-576,611,-576,-576,-576,-90,-572,-103,218,263,113,113,-100',
'-91,588,112,112,-100,-576,-96,-102,-576,-576,-576,-576,-102,-576,-474',
'-576,-95,-93,-88,-89,-101,-474,-474,-474,113,-93,-474,-474,-474,112',
'-474,-99,113,-91,-101,-572,-99,112,-474,-101,-474,-474,-474,113,113',
'814,263,113,112,112,-474,-474,112,-474,-474,-474,-474,-474,113,-573',
'218,842,113,112,624,-93,-91,112,-93,267,214,215,527,268,515,529,647',
'-93,647,-92,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474,-474',
'-474,-474,564,563,-474,-474,-474,-489,-474,-474,860,-94,-474,770,-91',
'-474,-474,-91,-474,646,-474,646,-474,771,-474,-474,-91,-474,-474,-474',
'-474,-474,623,-474,-477,-474,91,92,-104,214,215,-477,-477,-477,-482',
'263,-477,-477,-477,-474,-477,-482,-474,-474,-474,-474,218,-474,-477',
'-474,-477,-477,-477,-98,-474,619,-99,-576,267,-100,-477,-477,218,-477',
'-477,-477,-477,-477,218,-102,548,979,545,544,543,597,546,806,548,574',
'545,544,543,113,546,831,91,92,112,626,-477,-477,-477,-477,-477,-477',
'-477,-477,-477,-477,-477,-477,-477,-477,93,94,-477,-477,-477,-576,-477',
'-477,-488,218,-477,597,-576,-477,-477,597,-477,-572,-477,113,-477,-576',
'-477,-477,112,-477,-477,-477,-477,-477,-289,-477,-93,-477,625,599,598',
'-289,-289,-289,-576,-102,-484,-289,-289,747,-289,-477,956,-484,-477',
'-477,-477,-477,-261,-477,833,-477,-569,-410,93,94,-477,113,-97,617,-289',
'-289,112,-289,-289,-289,-289,-289,850,599,598,595,-487,599,598,-91,113',
'614,-483,-487,-485,112,597,749,-100,-483,662,-485,-487,238,-289,-289',
'-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-289,-474,-410',
'-289,-289,-289,515,630,-474,-410,212,-289,-489,-569,-289,597,238,-474',
'-410,-289,597,-289,238,-289,-289,597,-289,-289,-289,-289,-289,597,-289',
'-576,-289,580,-569,-410,218,581,-576,-576,-576,599,598,608,-576,-576',
'-289,-576,553,-289,-289,-95,-94,79,-289,-96,-576,-89,556,-570,-104,-103',
'214,215,-105,80,-98,-576,-576,-289,-576,-576,-576,-576,-576,81,-289',
'599,598,604,-263,-573,599,598,595,-289,218,599,598,602,218,564,563,599',
'598,600,557,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576,-576',
'-576,-576,-477,517,-576,-576,-576,756,631,-477,518,218,-576,859,-570',
'-576,597,218,-477,442,-576,-83,-576,-488,-576,-576,-576,-576,-576,-576',
'-576,-576,-289,-576,-576,-576,260,-570,806,-289,-289,-289,113,261,-289',
'-289,-289,112,-289,-576,837,806,-576,-576,-90,-92,238,-576,-289,-289',
'-289,741,742,-99,-101,743,107,108,-289,-289,-88,-289,-289,-289,-289',
'-289,-474,-479,-576,-97,599,598,613,-474,-479,-576,113,666,235,238,-572',
'112,237,236,-576,233,234,579,-289,-289,-289,-289,-289,-289,-289,-289',
'-289,-289,-289,-289,-289,-289,578,-576,-289,-289,-289,238,773,-289,-477',
'218,-289,388,-480,-289,-289,-477,-289,574,-289,-480,-289,677,-289,-289',
'238,-289,-289,-289,-289,-289,862,-289,548,-289,545,544,543,235,546,238',
'527,237,236,529,233,234,527,-289,692,529,-289,-289,-289,-289,865,-289',
'235,-289,214,215,237,236,-103,290,69,70,71,9,57,701,867,235,63,64,869',
'237,236,67,704,65,66,68,30,31,72,73,116,117,118,119,120,29,28,27,101',
'100,102,103,527,871,19,526,214,215,218,635,8,45,292,10,105,104,106,95',
'56,97,96,98,873,99,107,108,874,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,-279,231,232,-290,263,252,253,-279,40,877,-290,33',
'837,806,58,59,-279,490,60,-290,35,235,879,241,44,237,236,553,233,234',
'245,243,239,20,240,880,677,556,89,79,82,83,210,84,86,85,87,520,-481',
'211,260,80,88,882,256,-481,-238,261,209,62,531,81,93,94,290,69,70,71',
'9,57,564,563,507,63,64,557,-261,886,67,508,65,66,68,30,31,72,73,888',
'506,530,263,891,29,28,27,101,100,102,103,692,893,19,895,897,899,899',
'620,8,45,292,10,105,104,106,95,56,97,96,98,218,99,107,108,677,91,92',
'42,43,41,238,242,247,248,249,244,246,254,255,250,251,-289,231,232,-290',
'905,252,253,-289,40,218,-290,33,-573,907,58,59,-289,238,60,-290,35,235',
'909,241,44,237,236,682,233,234,245,243,239,20,240,516,512,263,89,79',
'82,83,-290,84,86,85,87,218,272,-290,915,80,88,218,256,677,918,218,-290',
'62,683,81,93,94,290,69,70,71,9,57,922,-264,-332,63,64,509,799,685,67',
'-332,65,66,68,30,31,72,73,490,-332,502,501,218,29,28,27,101,100,102',
'103,-68,932,19,488,498,689,939,635,8,45,292,10,105,104,106,95,56,97',
'96,98,940,99,107,108,692,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,-289,231,232,584,693,252,253,-289,40,490,583,33,-573',
'949,58,59,-289,950,60,585,35,235,488,241,44,237,236,486,233,234,245',
'243,239,20,240,477,217,446,89,79,82,83,-486,84,86,85,87,445,958,-486',
'443,80,88,960,256,961,695,218,-486,62,736,81,93,94,5,69,70,71,9,57,692',
'969,-279,63,64,971,973,975,67,-279,65,66,68,30,31,72,73,975,-279,257',
'697,699,29,28,27,101,100,102,103,399,935,19,545,544,543,775,546,8,45',
'7,10,105,104,106,95,56,97,96,98,707,99,107,108,218,91,92,42,43,41,238',
'242,247,248,249,244,246,254,255,250,251,984,231,232,584,986,252,253',
'985,40,708,938,33,987,899,58,59,983,899,60,585,35,235,899,241,44,237',
'236,992,233,234,245,243,239,20,240,709,958,386,89,79,82,83,-486,84,86',
'85,87,711,574,-486,218,80,88,317,256,316,718,257,-486,62,477,81,93,94',
'5,69,70,71,9,57,-573,-572,440,63,64,682,736,213,67,441,65,66,68,30,31',
'72,73,477,442,-262,208,207,29,28,27,101,100,102,103,958,935,19,545,544',
'543,746,546,8,45,7,10,105,104,106,95,56,97,96,98,1011,99,107,108,1012',
'91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,584,231,232',
'576,1013,252,253,938,40,975,577,33,975,975,58,59,585,218,60,575,35,235',
'206,241,44,237,236,121,233,234,245,243,239,20,240,750,751,899,89,79',
'82,83,-487,84,86,85,87,958,757,-487,109,80,88,975,256,,,,-487,62,,81',
'93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,116,117',
'118,119,120,29,28,27,101,100,102,103,,,19,116,117,118,119,120,8,45,292',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247',
'248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231',
'232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234',
'245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62',
',81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255',
'250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
'218,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249',
'244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35',
'235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45',
'292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242',
'247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58',
'59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253',
',40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20',
'240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231',
'232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234',
'245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62',
',81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255',
'250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247',
'248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,548',
'19,545,544,543,,546,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,548,,545,544,543,,546,,701,,548,,545,544,543,,546,704',
',40,,,33,,,58,59,,,60,548,35,545,544,543,44,546,701,,,,,,,20,,904,701',
',89,79,82,83,,84,86,85,87,,,,,80,88,,,,701,,,62,,81,93,94,290,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,548,19,545,544,543,,546,8,45,292,10,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,238,548,,545,544,543,,546,701,548,,545,544',
'543,,546,252,253,,40,,,294,,,58,59,,,60,,35,235,,241,44,237,236,701',
'233,234,,,239,20,240,701,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,',
'62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,238,-595,-595,-595,-595,244,246',
',,-595,-595,,,,,,252,253,,40,,,294,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-595,-595,-595,-595,244',
'246,,,-595,-595,,,,,,252,253,,40,,,294,,,58,59,,,60,,35,235,,241,44',
'237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-595,-595,-595',
'-595,244,246,,,-595,-595,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-595,-595',
'-595,-595,244,246,,,-595,-595,,,,,,252,253,,40,,,33,,,58,59,,,60,,35',
'235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,',
',,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233',
'234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81',
'93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,33,',
',58,59,,,60,,35,235,,241,44,237,236,,233,234,,,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
'8,45,7,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238',
'242,247,248,249,244,246,254,255,250,251,,-595,-595,,,252,253,,40,,,33',
',,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9',
'57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-595,-595,-595,-595',
'244,246,,,-595,-595,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-595,-595,-595',
'-595,244,246,,,-595,-595,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248',
'249,244,246,254,255,250,251,,-595,-595,,,252,253,,40,,,33,,,58,59,,',
'60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
'8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238',
'242,247,248,249,244,246,254,,250,251,,,,,,252,253,,40,,,33,,,58,59,',
',60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,',
'8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238',
'242,247,248,249,244,246,,,250,251,,,,,,252,253,,40,,,33,,,58,59,,,60',
',35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,',
',,252,253,,223,,,229,,,58,59,,,60,,,235,,,44,237,236,,233,234,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43',
'41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59,,,60,,659,235,279,241',
'44,237,236,285,233,234,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,',
'305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,284,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,223,,',
'229,,,58,59,,,60,,,235,279,241,44,237,236,285,233,234,,,,228,,,,,89',
'282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,',
',67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,',
',,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,113,',
',,,112,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,348,,,33,,,58',
'59,,,60,,35,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,353,56,97,96,354,',
'99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,360,,,355,,,229,,,58,59,,,60',
',,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101',
'100,102,103,,,230,,,,,,,307,,,105,104,106,353,56,97,96,354,,99,107,108',
',91,92,,,313,,,,,,,,,,,,,,,,,,,,355,,,229,,,58,59,,,60,,,,,,,,,,,,,',
',,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87',
',,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,,,388,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,',
',,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,',
',,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,404,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87',
',,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,404,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
'218,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
'284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,',
'305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,659,,,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,',
'80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73',
',,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,',
'305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,,,,',
',,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,',
',,,,,,,,,,303,,,229,,,58,59,,,60,,,548,,545,544,543,553,546,,,,,,,,',
'556,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,315,,551,62,,81,93,94,69',
'70,71,,57,564,563,,63,64,557,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313',
',,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,',
',105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,',
',,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89',
'282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,',
'45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,',
',,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,',
',,89,282,82,83,,84,86,85,87,,,,,80,88,218,,,69,70,71,62,57,81,93,94',
'63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103',
',,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313',
',,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,',
',,,,,,,,,,303,,,299,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,946,',
',229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,404,,,,44,,,',
',,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313',
',,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,298,,,,,,,,,,,,,,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,',
',,,,,,,,,,876,,,229,,,58,59,,,60,,,548,,545,544,543,553,546,,,,,,,,',
'556,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,551,62,,81,93,94,69,70',
'71,9,57,564,563,,63,64,557,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,388,62',
',81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,',
'305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,',
',69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
'284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,659,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,',
'80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73',
',,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,229,,,58',
'59,,,60,,,548,,545,544,543,553,546,,,,,,,,,556,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,504,,551,62,,81,93,94,69,70,71,,57,564,563,,63,64,557',
',,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,',
',,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,285,,,,,,228,,,,',
'89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,',
',105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,',
',,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89',
'282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,',
',67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,',
',,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73',
',,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,659,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59',
',,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,520,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56',
'97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,',
'305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,876,,,229,,,58,59',
',,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,754,,,,44,,,,,,,,,228,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,,,,-578,,62,,81,93,94,-578,-578',
'-578,,,-578,-578,-578,,-578,,,,,,,,,-578,-578,-578,-578,,,,,,,,-578',
'-578,,-578,-578,-578,-578,-578,,,,,,,,,,,,,,,,,,,,,,,-578,-578,-578',
'-578,-578,-578,-578,-578,-578,-578,-578,-578,-578,-578,,,-578,-578,-578',
',,-578,,,-578,,,-578,-578,,-578,,-578,,-578,,-578,-578,,-578,-578,-578',
'-578,-578,,-578,-578,-578,,,,,,,,,,,,,,-578,,,-578,-578,-578,-578,-577',
'-578,,-578,,,,-577,-577,-577,,,-577,-577,-577,,-577,,,,,,,,,-577,-577',
'-577,-577,,,,,,,,-577,-577,,-577,-577,-577,-577,-577,,,,,,,,,,,,,,,',
',,,,,,,-577,-577,-577,-577,-577,-577,-577,-577,-577,-577,-577,-577,-577',
'-577,,,-577,-577,-577,,,-577,,,-577,,,-577,-577,,-577,,-577,,-577,,-577',
'-577,,-577,-577,-577,-577,-577,,-577,-577,-577,,,,,,,,,,,,,,-577,,,-577',
'-577,-577,-577,-280,-577,,-577,,,,-280,-280,-280,,,-280,-280,-280,,-280',
',,,,,,,,,-280,-280,-280,,,,,,,,-280,-280,,-280,-280,-280,-280,-280,',
',,,,,,,,,,,,,,,,,,,,,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280',
'-280,-280,-280,-280,,,-280,-280,-280,,,-280,,,-280,,,-280,-280,,-280',
',-280,,-280,,-280,-280,,-280,-280,-280,-280,-280,,-280,,-280,548,,545',
'544,543,553,546,,,,,,,-280,,556,-280,-280,-280,-280,-409,-280,,-280',
',,,-409,-409,-409,,,-409,-409,-409,,-409,551,,,,,,,,-409,-409,-409,564',
'563,,,,557,,,-409,-409,,-409,-409,-409,-409,-409,,,,,,,,,,,,,,,,,,,',
',,,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409,-409',
'-409,,,-409,-409,-409,,,-409,,263,-409,,,-409,-409,,-409,,-409,,-409',
',-409,-409,,-409,-409,-409,-409,-409,,-409,-409,-409,,,,,,,,,,,,,,-409',
',-244,-409,-409,,-409,,-409,-244,-244,-244,,,-244,-244,-244,,-244,,',
',,,,,,-244,-244,-244,,,,,,,,,-244,-244,,-244,-244,-244,-244,-244,,,',
',,,,,,,,,,,,,,,,,,,-244,-244,-244,-244,-244,-244,-244,-244,-244,-244',
'-244,-244,-244,-244,,,-244,-244,-244,,,-244,,263,-244,,,-244,-244,,-244',
',-244,,-244,,-244,-244,,-244,-244,-244,-244,-244,-296,-244,-244,-244',
',,,-296,-296,-296,,,-296,-296,-296,,-296,-244,,,-244,-244,,-244,,-244',
'-296,-296,,,,,,,,,-296,-296,,-296,-296,-296,-296,-296,,,,,,,,,,,,,,',
',,,,,,,,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296,-296',
'-296,-296,,,-296,-296,-296,,,-296,,272,-296,,,-296,-296,,-296,,-296',
',-296,,-296,-296,,-296,-296,-296,-296,-296,,-296,-244,-296,,,,,,-244',
'-244,-244,,,-244,-244,-244,-296,-244,,-296,-296,,-296,,-296,,-244,-244',
',,,,,,,,,-244,-244,,-244,-244,-244,-244,-244,,548,,545,544,543,553,546',
',,,,,,,,556,,,,,,,,548,,545,544,543,553,546,,,-244,,,,,551,556,-244',
',,,,263,-244,561,560,564,563,,,,557,,,,,,,551,,,,,,,-244,-244,561,560',
'564,563,,,,557,,,218,,,-244,,,-244,,,,,-244,173,184,174,197,170,190',
'180,179,200,201,195,178,177,172,198,202,203,182,171,185,189,191,183',
'176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168,175,166,167',
'163,164,165,124,126,,,125,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173,184,174,197',
'170,190,180,179,200,201,195,178,177,172,198,202,203,182,171,185,189',
'191,183,176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168,175',
'166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156,153',
'152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173,184',
'174,197,170,190,180,179,200,201,195,178,177,172,198,202,203,182,171',
'185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188,187,,,,,',
'168,175,166,167,163,164,165,124,126,123,,125,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150',
',135,156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,',
',,,88,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198,202',
'203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188',
'187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162,89,,,,,,',
',,,,,,,88,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198',
'202,203,182,171,185,189,191,183,176,,,,192,199,194,371,370,372,369,169',
'188,187,,,,,,168,175,166,167,366,367,368,364,126,97,96,365,,99,,,,,',
'157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,',
',,,376,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
',,162,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198,202',
'203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169,188',
'187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,413,417,162,,414',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,420,424,162,,419,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,638,417,162,,639,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,',
',151,150,,135,156,153,152,161,148,149,143,141,133,155,134,673,424,162',
',674,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,670,417,162,,671,,,,,,,,157,158,,154,136,137,138,145,142',
'144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153',
'152,161,148,149,143,141,133,155,134,981,424,162,,980,,,,,,,,157,158',
',154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,',
',,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,721,417',
'162,,722,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143',
'141,133,155,134,723,424,162,,724,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,475,417,162,,476,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,726',
'424,162,,727,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,',
',,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149',
'143,141,133,155,134,475,417,162,,476,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,1004,417,162,,1005,,,,,',
',,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147',
',,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155',
'134,638,417,162,,639,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139',
'140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,640,424,162,,641,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,1006,424,162,,1007',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,640,424,162,,641,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,,548,162,545,544,543,553,546,548,,545',
'544,543,553,546,,556,,,,,,548,556,545,544,543,553,546,,,,,,,,,556,551',
',,,,,,551,,561,560,564,563,,,,557,,564,563,,551,,557,,,,,,,561,560,564',
'563,,,548,557,545,544,543,553,546,,,,,,,,548,556,545,544,543,553,546',
',,,,,,,548,556,545,544,543,553,546,,,551,,,,,,556,,,561,560,564,563',
',551,534,557,,,,,,,561,560,564,563,,551,,557,,,,,,,561,560,564,563,',
',548,557,545,544,543,553,546,548,,545,544,543,553,546,548,556,545,544',
'543,553,546,,556,,,,,,548,556,545,544,543,553,546,,,551,,,,,,556,551',
',561,560,564,563,,551,,557,,564,563,,,,557,,564,563,,551,,557,,,,,,',
'561,560,564,563,,,548,557,545,544,543,553,546,,548,,545,544,543,553',
'546,556,,,,,,,,556,,548,,545,544,543,553,546,,,,,,551,,,556,,,,,551',
'561,560,564,563,,,,557,561,560,564,563,,,,557,551,,548,,545,544,543',
'553,546,,,564,563,,,,557,556,,548,,545,544,543,553,546,,,,,,,,,556,',
',,,551,,,,,,,,,,,564,563,,,,557,551,,,,,,,,,,,564,563,,,,557' ]
        racc_action_table = arr = ::Array.new(25135, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'640,885,908,1004,61,844,917,640,640,640,650,1005,640,640,640,19,640',
'359,473,349,58,451,482,594,594,640,640,640,640,578,722,345,346,383,712',
'1018,640,640,1006,640,640,640,640,640,384,224,721,338,339,123,845,717',
'665,473,123,123,19,482,687,3,58,665,719,439,3,571,640,640,640,640,640',
'640,640,640,640,640,640,640,640,640,570,671,640,640,640,720,640,640',
'437,437,640,61,723,640,640,429,640,650,640,383,640,224,640,640,26,640',
'640,640,640,640,384,640,640,640,844,1006,724,594,421,885,908,1004,670',
'359,885,908,1004,640,349,1005,640,640,640,640,1005,640,95,640,578,722',
'345,346,640,95,95,95,359,671,95,95,95,359,95,1018,845,721,1006,723,1018',
'845,95,1006,95,95,95,338,339,687,26,571,338,339,95,95,571,95,95,95,95',
'95,719,724,437,719,570,719,412,671,670,570,671,26,680,680,686,308,443',
'686,481,671,651,723,95,95,95,95,95,95,95,95,95,95,95,95,95,95,692,692',
'95,95,95,222,95,95,774,724,95,638,670,95,95,670,95,481,95,651,95,639',
'95,95,670,95,95,95,95,95,411,95,98,95,41,41,443,590,590,98,98,98,369',
'308,98,98,98,95,98,369,95,95,95,95,409,95,98,95,98,98,98,222,95,405',
'774,673,308,638,98,98,680,98,98,98,98,98,933,639,904,933,904,904,904',
'605,904,913,704,913,704,704,704,853,704,703,313,313,853,414,98,98,98',
'98,98,98,98,98,98,98,98,98,98,98,41,41,98,98,98,673,98,98,221,729,98',
'492,673,98,98,607,98,673,98,590,98,673,98,98,590,98,98,98,98,98,419',
'98,414,98,413,605,605,419,419,419,673,414,366,419,419,605,419,98,904',
'366,98,98,98,98,403,98,704,98,353,801,313,313,98,342,221,400,419,419',
'342,419,419,419,419,419,734,492,492,492,301,607,607,413,288,394,367',
'301,368,288,382,607,413,367,492,368,301,452,419,419,419,419,419,419',
'419,419,419,419,419,419,419,419,353,801,419,419,419,317,419,353,801',
'15,419,39,353,419,381,453,353,801,419,378,419,454,419,419,380,419,419',
'419,419,419,379,419,420,419,355,353,801,479,355,420,420,420,382,382',
'382,420,420,419,420,689,419,419,317,419,77,419,15,420,39,689,354,317',
'419,17,17,15,77,39,420,420,1007,420,420,420,420,420,77,1007,381,381',
'381,753,1007,378,378,378,1007,483,380,380,380,688,689,689,379,379,379',
'689,420,420,420,420,420,420,420,420,420,420,420,420,420,420,354,319',
'420,420,420,621,420,354,319,499,420,758,354,420,385,684,354,319,420',
'500,420,38,420,420,726,420,420,420,420,420,641,420,420,420,24,354,681',
'641,641,641,589,24,641,641,641,589,641,420,994,994,420,420,621,420,469',
'420,641,641,641,598,598,621,420,598,598,598,641,641,38,641,641,641,641',
'641,364,370,726,38,385,385,385,364,370,726,848,503,469,679,726,848,469',
'469,726,469,469,350,641,641,641,641,641,641,641,641,641,641,641,641',
'641,641,348,726,641,641,641,468,641,641,365,505,641,344,371,641,641',
'365,641,343,641,371,641,676,641,641,449,641,641,641,641,641,776,641',
'551,641,551,551,551,468,551,450,329,468,468,329,468,468,332,641,777',
'332,641,641,641,641,779,641,449,641,523,523,449,449,641,815,815,815',
'815,815,815,551,780,450,815,815,781,450,450,815,551,815,815,815,815',
'815,815,815,291,291,291,291,291,815,815,815,815,815,815,815,328,783',
'815,328,337,337,784,432,815,815,815,815,815,815,815,815,815,815,815',
'815,785,815,815,815,786,815,815,815,815,815,432,432,432,432,432,432',
'432,432,432,432,432,304,432,432,986,675,432,432,304,815,790,986,815',
'710,710,815,815,304,333,815,986,815,432,794,432,815,432,432,862,432',
'432,432,432,432,815,432,795,800,862,815,815,815,815,14,815,815,815,815',
'510,372,14,374,815,815,804,432,372,432,374,14,815,331,815,815,815,653',
'653,653,653,653,653,862,862,302,653,653,862,807,808,653,302,653,653',
'653,653,653,653,653,811,302,330,672,816,653,653,653,653,653,653,653',
'817,821,653,822,824,825,827,408,653,653,653,653,653,653,653,653,653',
'653,653,653,830,653,653,653,513,653,653,653,653,653,408,408,408,408',
'408,408,408,408,408,408,408,674,408,408,509,832,408,408,674,653,326',
'509,653,674,835,653,653,674,321,653,509,653,408,838,408,653,408,408',
'521,408,408,408,408,408,653,408,318,314,312,653,653,653,653,581,653',
'653,653,653,307,306,581,847,653,653,669,408,667,851,852,581,653,522',
'653,653,653,654,654,654,654,654,654,855,856,46,654,654,303,664,524,654',
'46,654,654,654,654,654,654,654,658,46,297,296,295,654,654,654,654,654',
'654,654,293,872,654,656,292,536,876,643,654,654,654,654,654,654,654',
'654,654,654,654,654,878,654,654,654,537,654,654,654,654,654,643,643',
'643,643,643,643,643,643,643,643,643,727,643,643,357,539,643,643,727',
'654,280,357,654,727,889,654,654,727,890,654,357,654,643,277,643,654',
'643,643,276,643,643,643,643,643,654,643,262,230,226,654,654,654,654',
'300,654,654,654,654,225,906,300,223,654,654,910,643,911,540,705,300',
'654,921,654,654,654,498,498,498,498,498,498,923,926,947,498,498,927',
'928,929,498,947,498,498,498,498,498,498,498,931,947,649,541,550,498',
'498,498,498,498,498,498,204,873,498,873,873,873,644,873,498,498,498',
'498,498,498,498,498,498,498,498,498,558,498,498,498,642,498,498,498',
'498,498,858,858,858,858,858,858,858,858,858,858,858,945,858,858,875',
'946,858,858,945,498,562,875,498,951,952,498,498,945,953,498,875,498',
'858,954,858,498,858,858,955,858,858,858,858,858,498,858,565,957,109',
'498,498,498,498,943,498,498,498,498,567,572,943,45,498,498,40,858,37',
'573,22,943,498,632,498,498,498,0,0,0,0,0,0,980,981,220,0,0,982,592,16',
'0,220,0,0,0,0,0,0,0,627,220,618,13,12,0,0,0,0,0,0,0,993,979,0,979,979',
'979,602,979,0,0,0,0,0,0,0,0,0,0,0,0,995,0,0,0,996,0,0,0,0,0,861,861',
'861,861,861,861,861,861,861,861,861,937,861,861,347,997,861,861,937',
'0,998,347,0,999,1000,0,0,937,1003,0,347,0,861,10,861,0,861,861,7,861',
'861,861,861,861,0,861,610,612,1008,0,0,0,0,944,0,0,0,0,1009,622,944',
'1,0,0,1020,861,,,,944,0,,0,0,0,566,566,566,566,566,566,,,,566,566,,',
',566,,566,566,566,566,566,566,566,6,6,6,6,6,566,566,566,566,566,566',
'566,,,566,497,497,497,497,497,566,566,566,566,566,566,566,566,566,566',
'566,566,,566,566,566,,566,566,566,566,566,21,21,21,21,21,21,21,21,21',
'21,21,,21,21,,,21,21,,566,,,566,,,566,566,,,566,,566,21,,21,566,21,21',
',21,21,21,21,21,566,21,,,,566,566,566,566,,566,566,566,566,,,,,566,566',
',21,,,,,566,,566,566,566,730,730,730,730,730,730,,,,730,730,,,,730,',
'730,730,730,730,730,730,730,,,,,,730,730,730,730,730,730,730,,,730,',
',,,,730,730,730,730,730,730,730,730,730,730,730,730,,730,730,730,,730',
'730,730,730,730,767,767,767,767,767,767,767,767,767,767,767,,767,767',
',,767,767,,730,,,730,,,730,730,,,730,,730,767,,767,730,767,767,,767',
'767,767,767,767,730,767,,,,730,730,730,730,,730,730,730,730,,,,,730',
'730,,767,,,,,730,,730,730,730,735,735,735,735,735,735,,,,735,735,,,',
'735,,735,735,735,735,735,735,735,,,,,,735,735,735,735,735,735,735,,',
'735,,,,,,735,735,735,735,735,735,735,735,735,735,735,735,,735,735,735',
',735,735,735,735,735,755,755,755,755,755,755,755,755,755,755,755,,755',
'755,,,755,755,,735,,,735,,,735,735,,,735,,735,755,,755,735,755,755,',
'755,755,755,755,755,735,755,,,,735,735,735,735,,735,735,735,735,,,,',
'735,735,,755,,,,,735,,735,735,735,745,745,745,745,745,745,,,,745,745',
',,,745,,745,745,745,745,745,745,745,,,,,,745,745,745,745,745,745,745',
',,745,,,,,,745,745,745,745,745,745,745,745,745,745,745,745,,745,745',
'745,,745,745,745,745,745,769,769,769,769,769,769,769,769,769,769,769',
',769,769,,,769,769,,745,,,745,,,745,745,,,745,,745,769,,769,745,769',
'769,,769,769,769,769,769,745,769,,,,745,745,745,745,,745,745,745,745',
',,,,745,745,,769,,,,,745,,745,745,745,793,793,793,793,793,793,,,,793',
'793,,,,793,,793,793,793,793,793,793,793,,,,,,793,793,793,793,793,793',
'793,,,793,,,,,,793,793,793,793,793,793,793,793,793,793,793,793,,793',
'793,793,,793,793,793,793,793,472,472,472,472,472,472,472,472,472,472',
'472,,472,472,,,472,472,,793,,,793,,,793,793,,,793,,793,472,,472,793',
'472,472,,472,472,472,472,472,793,472,,,,793,793,793,793,,793,793,793',
'793,,,,,793,793,472,472,,,,,793,,793,793,793,806,806,806,806,806,806',
',,,806,806,,,,806,,806,806,806,806,806,806,806,,,,,,806,806,806,806',
'806,806,806,,,806,,,,,,806,806,806,806,806,806,806,806,806,806,806,806',
',806,806,806,,806,806,806,806,806,427,427,427,427,427,427,427,427,427',
'427,427,,427,427,,,427,427,,806,,,806,,,806,806,,,806,,806,427,,427',
'806,427,427,,427,427,427,427,427,806,427,,,,806,806,806,806,,806,806',
'806,806,,,,,806,806,,427,,,,,806,,806,806,806,814,814,814,814,814,814',
',,,814,814,,,,814,,814,814,814,814,814,814,814,,,,,,814,814,814,814',
'814,814,814,,,814,,,,,,814,814,814,814,814,814,814,814,814,814,814,814',
',814,814,814,,814,814,814,814,814,762,762,762,762,762,762,762,762,762',
'762,762,,762,762,,,762,762,,814,,,814,,,814,814,,,814,,814,762,,762',
'814,762,762,,762,762,762,762,762,814,762,,,,814,814,814,814,,814,814',
'814,814,,,,,814,814,,762,,,,,814,,814,814,814,648,648,648,648,648,648',
',,,648,648,,,,648,,648,648,648,648,648,648,648,,,,,,648,648,648,648',
'648,648,648,,,648,,,,,,648,648,648,648,648,648,648,648,648,648,648,648',
',648,648,648,,648,648,648,648,648,760,760,760,760,760,760,760,760,760',
'760,760,,760,760,,,760,760,,648,,,648,,,648,648,,,648,,648,760,,760',
'648,760,760,,760,760,760,760,760,648,760,,,,648,648,648,648,,648,648',
'648,648,,,,,648,648,,760,,,,,648,,648,648,648,324,324,324,324,324,324',
',,,324,324,,,,324,,324,324,324,324,324,324,324,,,,,,324,324,324,324',
'324,324,324,,,324,,,,,,324,324,324,324,324,324,324,324,324,324,324,324',
',324,324,324,,324,324,324,324,324,678,678,678,678,678,678,678,678,678',
'678,678,,678,678,,,678,678,,324,,,324,,,324,324,,,324,,324,678,,678',
'324,678,678,,678,678,678,678,678,324,678,,,,324,324,324,324,,324,324',
'324,324,,,,,324,324,,678,,,,,324,,324,324,324,839,839,839,839,839,839',
',,,839,839,,,,839,,839,839,839,839,839,839,839,,,,,,839,839,839,839',
'839,839,839,,,839,,,,,,839,839,839,839,839,839,839,839,839,839,839,839',
',839,839,839,,839,839,839,839,839,519,519,519,519,519,519,519,519,519',
'519,519,,519,519,,,519,519,,839,,,839,,,839,839,,,839,,839,519,,519',
'839,519,519,,519,519,519,519,519,839,519,,,,839,839,839,839,,839,839',
'839,839,,,,,839,839,,519,,,,,839,,839,839,839,840,840,840,840,840,840',
',,,840,840,,,,840,,840,840,840,840,840,840,840,,,,,,840,840,840,840',
'840,840,840,,,840,,,,,,840,840,840,840,840,840,840,840,840,840,840,840',
',840,840,840,,840,840,840,840,840,765,765,765,765,765,765,765,765,765',
'765,765,,765,765,,,765,765,,840,,,840,,,840,840,,,840,,840,765,,765',
'840,765,765,,765,765,765,765,765,840,765,,,,840,840,840,840,,840,840',
'840,840,,,,,840,840,,765,,,,,840,,840,840,840,843,843,843,843,843,843',
',,,843,843,,,,843,,843,843,843,843,843,843,843,,,,,,843,843,843,843',
'843,843,843,,,843,,,,,,843,843,843,843,843,843,843,843,843,843,843,843',
',843,843,843,,843,843,843,843,843,274,274,274,274,274,274,274,274,274',
'274,274,,274,274,,,274,274,,843,,,843,,,843,843,,,843,,843,274,,274',
'843,274,274,,274,274,274,274,274,843,274,,,,843,843,843,843,,843,843',
'843,843,,,,,843,843,,274,,,,,843,,843,843,843,849,849,849,849,849,849',
',,,849,849,,,,849,,849,849,849,849,849,849,849,,,,,,849,849,849,849',
'849,849,849,,701,849,701,701,701,,701,849,849,849,849,849,849,849,849',
'849,849,849,849,,849,849,849,,849,849,849,849,849,831,,831,831,831,',
'831,,701,,833,,833,833,833,,833,701,,849,,,849,,,849,849,,,849,992,849',
'992,992,992,849,992,831,,,,,,,849,,831,833,,849,849,849,849,,849,849',
'849,849,,,,,849,849,,,,992,,,849,,849,849,849,299,299,299,299,299,299',
',,,299,299,,,,299,,299,299,299,299,299,299,299,,,,,,299,299,299,299',
'299,299,299,,956,299,956,956,956,,956,299,299,299,299,299,299,299,299',
'299,299,299,299,,299,299,299,,299,299,299,299,299,462,905,,905,905,905',
',905,956,958,,958,958,958,,958,462,462,,299,,,299,,,299,299,,,299,,299',
'462,,462,299,462,462,905,462,462,,,462,299,462,958,,,299,299,299,299',
',299,299,299,299,,,,,299,299,,,,,,,299,,299,299,299,294,294,294,294',
'294,294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294,294',
'294,294,294,294,294,,,294,,,,,,294,294,294,294,294,294,294,294,294,294',
'294,294,,294,294,294,,294,294,294,294,294,464,464,464,464,464,464,464',
',,464,464,,,,,,464,464,,294,,,294,,,294,294,,,294,,294,464,,464,294',
'464,464,,464,464,464,464,464,294,464,,,,294,294,294,294,,294,294,294',
'294,,,,,294,294,,,,,,,294,,294,294,294,33,33,33,33,33,33,,,,33,33,,',
',33,,33,33,33,33,33,33,33,,,,,,33,33,33,33,33,33,33,,,33,,,,,,33,33',
'33,33,33,33,33,33,33,33,33,33,,33,33,33,,33,33,33,33,33,463,463,463',
'463,463,463,463,,,463,463,,,,,,463,463,,33,,,33,,,33,33,,,33,,33,463',
',463,33,463,463,,463,463,463,463,463,33,463,,,,33,33,33,33,,33,33,33',
'33,,,,,33,33,,,,,,,33,,33,33,33,882,882,882,882,882,882,,,,882,882,',
',,882,,882,882,882,882,882,882,882,,,,,,882,882,882,882,882,882,882',
',,882,,,,,,882,882,882,882,882,882,882,882,882,882,882,882,,882,882',
'882,,882,882,882,882,882,466,466,466,466,466,466,466,,,466,466,,,,,',
'466,466,,882,,,882,,,882,882,,,882,,882,466,,466,882,466,466,,466,466',
'466,466,466,882,466,,,,882,882,882,882,,882,882,882,882,,,,,882,882',
',,,,,,882,,882,882,882,229,229,229,229,229,229,,,,229,229,,,,229,,229',
'229,229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,',
'229,229,229,229,229,229,229,229,229,229,229,229,,229,229,229,,229,229',
'229,229,229,465,465,465,465,465,465,465,,,465,465,,,,,,465,465,,229',
',,229,,,229,229,,,229,,229,465,,465,229,465,465,,465,465,465,465,465',
'229,465,,,,229,229,229,229,,229,229,229,229,,,,,229,229,,,,,,,229,,229',
'229,229,206,206,206,206,206,206,,,,206,206,,,,206,,206,206,206,206,206',
'206,206,,,,,,206,206,206,206,206,206,206,,,206,,,,,,206,206,206,206',
'206,206,206,206,206,206,206,206,,206,206,206,,206,206,206,206,206,461',
',,,,,,,,,,,,,,,461,461,,206,,,206,,,206,206,,,206,,206,461,,461,206',
'461,461,,461,461,,,461,206,461,,,,206,206,206,206,,206,206,206,206,',
',,,206,206,,,,,,,206,,206,206,206,942,942,942,942,942,942,,,,942,942',
',,,942,,942,942,942,942,942,942,942,,,,,,942,942,942,942,942,942,942',
',,942,,,,,,942,942,942,942,942,942,942,942,942,942,942,942,,942,942',
'942,,942,942,942,942,942,460,,,,,,,,,,,,,,,,460,460,,942,,,942,,,942',
'942,,,942,,942,460,,460,942,460,460,,460,460,,,460,942,460,,,,942,942',
'942,942,,942,942,942,942,,,,,942,942,,,,,,,942,,942,942,942,121,121',
'121,121,121,121,,,,121,121,,,,121,,121,121,121,121,121,121,121,,,,,',
'121,121,121,121,121,121,121,,,121,,,,,,121,121,121,121,121,121,121,121',
'121,121,121,121,,121,121,121,,121,121,121,121,121,448,448,448,448,448',
'448,448,448,448,448,448,,448,448,,,448,448,,121,,,121,,,121,121,,,121',
',121,448,,448,121,448,448,,448,448,448,448,448,121,448,,,,121,121,121',
'121,,121,121,121,121,,,,,121,121,,,,,,,121,,121,121,121,569,569,569',
'569,569,569,,,,569,569,,,,569,,569,569,569,569,569,569,569,,,,,,569',
'569,569,569,569,569,569,,,569,,,,,,569,569,569,569,569,569,569,569,569',
'569,569,569,,569,569,569,,569,569,569,569,569,459,,,,,,,,,,,,,,,,459',
'459,,569,,,569,,,569,569,,,569,,569,459,,459,569,459,459,,459,459,,',
'459,569,459,,,,569,569,569,569,,569,569,569,569,,,,,569,569,,,,,,,569',
',569,569,569,591,591,591,591,591,591,,,,591,591,,,,591,,591,591,591',
'591,591,591,591,,,,,,591,591,591,591,591,591,591,,,591,,,,,,591,591',
'591,591,591,591,591,591,591,591,591,591,,591,591,591,,591,591,591,591',
'591,467,467,467,467,467,467,467,,,467,467,,,,,,467,467,,591,,,591,,',
'591,591,,,591,,591,467,,467,591,467,467,,467,467,467,467,467,591,467',
',,,591,591,591,591,,591,591,591,591,,,,,591,591,,,,,,,591,,591,591,591',
'959,959,959,959,959,959,,,,959,959,,,,959,,959,959,959,959,959,959,959',
',,,,,959,959,959,959,959,959,959,,,959,,,,,,959,959,959,959,959,959',
'959,959,959,959,959,959,,959,959,959,,959,959,959,959,959,458,458,458',
'458,458,458,458,,,458,458,,,,,,458,458,,959,,,959,,,959,959,,,959,,959',
'458,,458,959,458,458,,458,458,458,458,458,959,458,,,,959,959,959,959',
',959,959,959,959,,,,,959,959,,,,,,,959,,959,959,959,965,965,965,965',
'965,965,,,,965,965,,,,965,,965,965,965,965,965,965,965,,,,,,965,965',
'965,965,965,965,965,,,965,,,,,,965,965,965,965,965,965,965,965,965,965',
'965,965,,965,965,965,,965,965,965,965,965,447,447,447,447,447,447,447',
'447,447,447,447,,447,447,,,447,447,,965,,,965,,,965,965,,,965,,965,447',
',447,965,447,447,,447,447,447,447,447,965,447,,,,965,965,965,965,,965',
'965,965,965,,,,,965,965,,,,,,,965,,965,965,965,967,967,967,967,967,967',
',,,967,967,,,,967,,967,967,967,967,967,967,967,,,,,,967,967,967,967',
'967,967,967,,,967,,,,,,967,967,967,967,967,967,967,967,967,967,967,967',
',967,967,967,,967,967,967,967,967,471,471,471,471,471,471,471,471,,471',
'471,,,,,,471,471,,967,,,967,,,967,967,,,967,,967,471,,471,967,471,471',
',471,471,471,471,471,967,471,,,,967,967,967,967,,967,967,967,967,,,',
',967,967,,,,,,,967,,967,967,967,290,290,290,290,290,,,,290,290,,,,290',
',290,290,290,290,290,290,290,,,,,,290,290,290,290,290,290,290,,,290',
',,,,,290,290,,290,290,290,290,290,290,290,290,290,,290,290,290,,290',
'290,290,290,290,470,470,470,470,470,470,470,,,470,470,,,,,,470,470,',
'290,,,290,,,290,290,,,290,,290,470,,470,290,470,470,,470,470,470,470',
'470,290,470,,,,290,290,290,290,,290,290,290,290,,,,,290,290,,,,43,43',
'43,290,43,290,290,290,43,43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43,43',
'43,43,43,43,,,43,,,,,,,43,,,43,43,43,43,43,43,43,43,,43,43,43,,43,43',
'43,43,43,457,,,,,,,,,,,,,,,,457,457,,43,,,43,,,43,43,,,43,,,457,,,43',
'457,457,,457,457,,,,43,,,,,43,43,43,43,,43,43,43,43,,,,,43,43,,,,623',
'623,623,43,623,43,43,43,623,623,,,,623,,623,623,623,623,623,623,623',
',,,,,623,623,623,623,623,623,623,,,623,,,,,,,623,,,623,623,623,623,623',
'623,623,623,623,623,623,623,,623,623,623,623,623,456,,,,,,,,,,,,,,,',
'456,456,,623,,,623,,,623,623,,,623,,623,456,623,456,623,456,456,623',
'456,456,,,,623,,,,,623,623,623,623,,623,623,623,623,,,,,623,623,,,,624',
'624,624,623,624,623,623,623,624,624,,,,624,,624,624,624,624,624,624',
'624,,,,,,624,624,624,624,624,624,624,,,624,,,,,,,624,,,624,624,624,624',
'624,624,624,624,624,624,624,624,,624,624,624,624,624,455,,,,,,,,,,,',
',,,,455,455,,624,,,624,,,624,624,,,624,,,455,624,455,624,455,455,624',
'455,455,,,,624,,,,,624,624,624,624,,624,624,624,624,,,,,624,624,,,,59',
'59,59,624,59,624,624,624,59,59,,,,59,,59,59,59,59,59,59,59,,,,,,59,59',
'59,59,59,59,59,,,59,,,,,,,59,,,59,59,59,59,59,59,59,59,59,59,59,59,',
'59,59,59,59,59,,,,,,,,,,,,,,,,,,,,59,,,59,,,59,59,,,59,,59,,,,59,,,59',
',,,,,59,,,,,59,59,59,59,,59,59,59,59,,,,,59,59,,,,60,60,60,59,60,59',
'59,59,60,60,,,,60,,60,60,60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,',
'60,,,,,,,60,,,60,60,60,60,60,60,60,60,60,60,60,60,,60,60,60,60,60,,',
',,,,,,,,,,,,,,,,,60,,,60,,,60,60,,,60,,,,,,60,,,60,,,,,,60,,,,,60,60',
'60,60,,60,60,60,60,,,,,60,60,,,,625,625,625,60,625,60,60,60,625,625',
',,,625,,625,625,625,625,625,625,625,,,,,,625,625,625,625,625,625,625',
',,625,,,,,,,625,,,625,625,625,625,625,625,625,625,,625,625,625,,625',
'625,625,625,625,,,,,,,,,,,,,,,,,,,,625,,,625,,,625,625,,,625,,,,,,625',
',,,,,,,,625,,,,,625,625,625,625,,625,625,625,625,,,,,625,625,,,,63,63',
'63,625,63,625,625,625,63,63,,,,63,,63,63,63,63,63,63,63,,,,,,63,63,63',
'63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63,63,63,,63,63,63,,63,63',
'63,63,63,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,63,,,63,,,,,,63,,,,,,,,,63',
',,,,63,63,63,63,,63,63,63,63,,,,,63,63,,,,64,64,64,63,64,63,63,63,64',
'64,,,,64,,64,64,64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,',
'64,,,64,64,64,64,64,64,64,64,,64,64,64,,64,64,64,64,64,,,,,,,,,,,,,',
',,,,,,64,,,64,,,64,64,,,64,,,,,,64,,,,,,,,,64,,,,,64,64,64,64,,64,64',
'64,64,,,,,64,64,,,,67,67,67,64,67,64,64,64,67,67,,,,67,,67,67,67,67',
'67,67,67,,,,,,67,67,67,67,67,67,67,,,67,,,,,,,67,,,67,67,67,67,67,67',
'67,67,,67,67,67,,67,67,67,67,67,,,,,,,,,,,,,,,,,,,,67,,,67,,,67,67,',
',67,,,,,,67,,,,,,,,,67,,,,,67,67,67,67,,67,67,67,67,,,,,67,67,67,,,',
',67,67,,67,67,67,68,68,68,,68,,,,68,68,,,,68,,68,68,68,68,68,68,68,',
',,,,68,68,68,68,68,68,68,,,68,,,,,,,68,,,68,68,68,68,68,68,68,68,,68',
'68,68,,68,68,,,68,,,,,,,,,,,,,,,,,,,,68,,,68,,,68,68,,,68,,68,,,,,,',
',,,,,,,,,,,68,68,68,68,,68,68,68,68,,,,,68,68,,,,69,69,69,68,69,68,68',
'68,69,69,,,,69,,69,69,69,69,69,69,69,,,,,,69,69,69,69,69,69,69,,,69',
',,,,,,69,,,69,69,69,69,69,69,69,69,,69,69,69,,69,69,,,69,,,,,,,,,,,',
',,,,,69,,,69,,,69,,,69,69,,,69,,,,,,,,,,,,,,,,,,,,69,69,69,69,,69,69',
'69,69,,,,,69,69,,,,70,70,70,69,70,69,69,69,70,70,,,,70,,70,70,70,70',
'70,70,70,,,,,,70,70,70,70,70,70,70,,,70,,,,,,,70,,,70,70,70,70,70,70',
'70,70,,70,70,70,,70,70,,,70,,,,,,,,,,,,,,,,,,,,70,,,70,,,70,70,,,70',
',,,,,,,,,,,,,,,,,,,70,70,70,70,,70,70,70,70,,,,,70,70,,,,626,626,626',
'70,626,70,70,70,626,626,,,,626,,626,626,626,626,626,626,626,,,,,,626',
'626,626,626,626,626,626,,,626,,,,,,,626,,,626,626,626,626,626,626,626',
'626,,626,626,626,,626,626,626,626,626,,,,,,,,,,,,,,,,,,,,626,,,626,',
',626,626,,,626,,,,,,626,,,,,,,,,626,,,,,626,626,626,626,,626,626,626',
'626,,,,,626,626,,,,42,42,42,626,42,626,626,626,42,42,,,,42,,42,42,42',
'42,42,42,42,,,,,,42,42,42,42,42,42,42,,,42,,,,,,,42,,,42,42,42,42,42',
'42,42,42,,42,42,42,,42,42,42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,,42,42',
',,42,,,,,,42,,,,,,,,,42,,,,,42,42,42,42,,42,42,42,42,,,,,42,42,,,,630',
'630,630,42,630,42,42,42,630,630,,,,630,,630,630,630,630,630,630,630',
',,,,,630,630,630,630,630,630,630,,,630,,,,,,,630,,,630,630,630,630,630',
'630,630,630,,630,630,630,,630,630,630,630,630,,,,,,,,,,,,,,,,,,,,630',
',,630,,,630,630,,,630,,,,,,630,,,,,,,,,630,,,,,630,630,630,630,,630',
'630,630,630,,,,,630,630,,,,631,631,631,630,631,630,630,630,631,631,',
',,631,,631,631,631,631,631,631,631,,,,,,631,631,631,631,631,631,631',
',,631,,,,,,,631,,,631,631,631,631,631,631,631,631,,631,631,631,,631',
'631,631,631,631,,,,,,,,,,,,,,,,,,,,631,,,631,,,631,631,,,631,,,,,,631',
',,,,,,,,631,,,,,631,631,631,631,,631,631,631,631,,,,,631,631,,,,585',
'585,585,631,585,631,631,631,585,585,,,,585,,585,585,585,585,585,585',
'585,,,,,,585,585,585,585,585,585,585,,,585,,,,,,,585,,,585,585,585,585',
'585,585,585,585,585,585,585,585,,585,585,585,585,585,,,,,,,,,,,,,,,',
',,,,585,,,585,,,585,585,,,585,,585,,585,,585,,,585,,,,,,585,,,,,585',
'585,585,585,,585,585,585,585,,,,,585,585,,,,,,,585,,585,585,585,111',
'111,111,111,111,,,,111,111,,,,111,,111,111,111,111,111,111,111,,,,,',
'111,111,111,111,111,111,111,,,111,,,,,,111,111,111,111,111,111,111,111',
'111,111,111,111,,111,111,111,,111,111,111,111,111,,,,,,,,,,,,,,,,,,',
',111,,,111,,,111,111,,,111,,111,,,,111,,,,,,,,,111,,,,,111,111,111,111',
',111,111,111,111,,,,,111,111,,,,,,111,111,,111,111,111,116,116,116,',
'116,,,,116,116,,,,116,,116,116,116,116,116,116,116,,,,,,116,116,116',
'116,116,116,116,,,116,,,,,,,116,,,116,116,116,116,116,116,116,116,,116',
'116,116,,116,116,116,116,116,,,,,,,,,,,,,,,,,,,,116,,,116,,,116,116',
',,116,,,,,,116,,,,,,,,,116,,,,,116,116,116,116,,116,116,116,116,,,,',
'116,116,,,,117,117,117,116,117,116,116,116,117,117,,,,117,,117,117,117',
'117,117,117,117,,,,,,117,117,117,117,117,117,117,,,117,,,,,,,117,,,117',
'117,117,117,117,117,117,117,,117,117,117,,117,117,117,117,117,,,,,,',
',,,,,,,,,,,,,117,,,117,,,117,117,,,117,,,,,,117,,,,,,,,,117,,,,,117',
'117,117,117,,117,117,117,117,,,,,117,117,,,,118,118,118,117,118,117',
'117,117,118,118,,,,118,,118,118,118,118,118,118,118,,,,,,118,118,118',
'118,118,118,118,,,118,,,,,,,118,,,118,118,118,118,118,118,118,118,,118',
'118,118,,118,118,118,118,118,,,,,,,,,,,,,,,,,,,,118,,,118,,,118,118',
',,118,,,,,,118,,,,,,,,,118,,,,,118,118,118,118,,118,118,118,118,,,,',
'118,118,,,,119,119,119,118,119,118,118,118,119,119,,,,119,,119,119,119',
'119,119,119,119,,,,,,119,119,119,119,119,119,119,,,119,,,,,,,119,,,119',
'119,119,119,119,119,119,119,,119,119,119,,119,119,119,119,119,,,,,,',
',,,,,,,,,,,,,119,,,119,,,119,119,,,119,,,,,,119,,,,,,,,,119,,,,,119',
'119,119,119,,119,119,119,119,,,,,119,119,,,,,,,119,,119,119,119,120',
'120,120,120,120,,,,120,120,,,,120,,120,120,120,120,120,120,120,,,,,',
'120,120,120,120,120,120,120,,,120,,,,,,120,120,,120,120,120,120,120',
'120,120,120,120,,120,120,120,,120,120,120,120,120,,,,,,,,,,,,,,,,,,',
',120,,,120,,,120,120,,,120,,120,,,,120,,,,,,,,,120,,,,,120,120,120,120',
',120,120,120,120,,,,,120,120,,,,634,634,634,120,634,120,120,120,634',
'634,,,,634,,634,634,634,634,634,634,634,,,,,,634,634,634,634,634,634',
'634,,,634,,,,,,,634,,,634,634,634,634,634,634,634,634,,634,634,634,',
'634,634,634,634,634,,,,,,,,,,,,,,,,,,,,634,,,634,,,634,634,,,634,,,',
',,634,,,,,,,,,634,,,,,634,634,634,634,,634,634,634,634,,,,,634,634,',
',,575,575,575,634,575,634,634,634,575,575,,,,575,,575,575,575,575,575',
'575,575,,,,,,575,575,575,575,575,575,575,,,575,,,,,,,575,,,575,575,575',
'575,575,575,575,575,575,575,575,575,,575,575,575,575,575,,,,,,,,,,,',
',,,,,,,,575,,,575,,,575,575,,,575,,575,,575,,575,,,575,,,,,,575,,,,',
'575,575,575,575,,575,575,575,575,,,,,575,575,,,,574,574,574,575,574',
'575,575,575,574,574,,,,574,,574,574,574,574,574,574,574,,,,,,574,574',
'574,574,574,574,574,,,574,,,,,,,574,,,574,574,574,574,574,574,574,574',
',574,574,574,,574,574,574,574,574,,,,,,,,,,,,,,,,,,,,574,,,574,,,574',
'574,,,574,,574,,,,574,,,,,,,,,574,,,,,574,574,574,574,,574,574,574,574',
',,,,574,574,,,,635,635,635,574,635,574,574,574,635,635,,,,635,,635,635',
'635,635,635,635,635,,,,,,635,635,635,635,635,635,635,,,635,,,,,,,635',
',,635,635,635,635,635,635,635,635,,635,635,635,,635,635,635,635,635',
',,,,,,,,,,,,,,,,,,,635,,,635,,,635,635,,,635,,,,,,635,,,,,,,,,635,,',
',,635,635,635,635,,635,635,635,635,,,,,635,635,,,,207,207,207,635,207',
'635,635,635,207,207,,,,207,,207,207,207,207,207,207,207,,,,,,207,207',
'207,207,207,207,207,,,207,,,,,,,207,,,207,207,207,207,207,207,207,207',
',207,207,207,,207,207,207,207,207,,,,,,,,,,,,,,,,,,,,207,,,207,,,207',
'207,,,207,,207,,,,207,,,,,,,,,207,,,,,207,207,207,207,,207,207,207,207',
',,,,207,207,,,,208,208,208,207,208,207,207,207,208,208,,,,208,,208,208',
'208,208,208,208,208,,,,,,208,208,208,208,208,208,208,,,208,,,,,,,208',
',,208,208,208,208,208,208,208,208,,208,208,208,,208,208,208,208,208',
',,,,,,,,,,,,,,,,,,,208,,,208,,,208,208,,,208,,,,,,208,,,,,,,,,208,,',
',,208,208,208,208,,208,208,208,208,,,,,208,208,,,,209,209,209,208,209',
'208,208,208,209,209,,,,209,,209,209,209,209,209,209,209,,,,,,209,209',
'209,209,209,209,209,,,209,,,,,,,209,,,209,209,209,209,209,209,209,209',
'209,209,209,209,,209,209,209,209,209,,,,,,,,,,,,,,,,,,,,209,,,209,,',
'209,209,,,209,,209,,209,,209,,,209,,,,,,209,,,,,209,209,209,209,,209',
'209,209,209,,,,,209,209,,,,,,,209,,209,209,209,5,5,5,5,5,,,,5,5,,,,5',
',5,5,5,5,5,5,5,,,,,,5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,',
'5,5,5,,5,5,5,5,5,,,,,,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,',
'5,,,,,5,5,5,5,,5,5,5,5,,,,,5,5,,,,554,554,554,5,554,5,5,5,554,554,,',
',554,,554,554,554,554,554,554,554,,,,,,554,554,554,554,554,554,554,',
',554,,,,,,,554,,,554,554,554,554,554,554,554,554,,554,554,554,,554,554',
'554,554,554,,,,,,,,,,,,,,,,,,,,554,,,554,,,554,554,,,554,,,,,,554,,',
',,,,,,554,,,,,554,554,554,554,,554,554,554,554,,,,,554,554,,,,212,212',
'212,554,212,554,554,554,212,212,,,,212,,212,212,212,212,212,212,212',
',,,,,212,212,212,212,212,212,212,,,212,,,,,,,212,,,212,212,212,212,212',
'212,212,212,,212,212,212,,212,212,212,212,212,,,,,,,,,,,,,,,,,,,,212',
',,212,,,212,212,,,212,,,,,,212,,,,,,,,,212,,,,,212,212,212,212,,212',
'212,212,212,,,,,212,212,,,,213,213,213,212,213,212,212,212,213,213,',
',,213,,213,213,213,213,213,213,213,,,,,,213,213,213,213,213,213,213',
',,213,,,,,,,213,,,213,213,213,213,213,213,213,213,,213,213,213,,213',
'213,213,213,213,,,,,,,,,,,,,,,,,,,,213,,,213,,,213,213,,,213,,213,,',
',213,,,,,,,,,213,,,,,213,213,213,213,,213,213,213,213,,,,,213,213,,',
',214,214,214,213,214,213,213,213,214,214,,,,214,,214,214,214,214,214',
'214,214,,,,,,214,214,214,214,214,214,214,,,214,,,,,,,214,,,214,214,214',
'214,214,214,214,214,,214,214,214,,214,214,214,214,214,,,,,,,,,,,,,,',
',,,,,214,,,214,,,214,214,,,214,,,,,,214,,,,,,,,,214,,,,,214,214,214',
'214,,214,214,214,214,,,,,214,214,,,,215,215,215,214,215,214,214,214',
'215,215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215',
'215,215,,,215,,,,,,,215,,,215,215,215,215,215,215,215,215,,215,215,215',
',215,215,215,215,215,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,215,,,215,,',
',,,215,,,,,,,,,215,,,,,215,215,215,215,,215,215,215,215,,,,,215,215',
',,,216,216,216,215,216,215,215,215,216,216,,,,216,,216,216,216,216,216',
'216,216,,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216,216',
'216,216,216,216,216,,216,216,216,,216,216,216,216,216,,,,,,,,,,,,,,',
',,,,,216,,,216,,,216,216,,,216,,,,,,216,,,,,,,,,216,,,,,216,216,216',
'216,,216,216,216,216,,,,,216,216,,,,217,217,217,216,217,216,216,216',
'217,217,,,,217,,217,217,217,217,217,217,217,,,,,,217,217,217,217,217',
'217,217,,,217,,,,,,,217,,,217,217,217,217,217,217,217,217,,217,217,217',
',217,217,217,217,217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,217,,,217,,',
',,,217,,,,,,,,,217,,,,,217,217,217,217,,217,217,217,217,,,,,217,217',
'217,,,620,620,620,217,620,217,217,217,620,620,,,,620,,620,620,620,620',
'620,620,620,,,,,,620,620,620,620,620,620,620,,,620,,,,,,,620,,,620,620',
'620,620,620,620,620,620,,620,620,620,,620,620,620,620,620,,,,,,,,,,',
',,,,,,,,,620,,,620,,,620,620,,,620,,,,,,620,,,,,,,,,620,,,,,620,620',
'620,620,,620,620,620,620,,,,,620,620,,,,529,529,529,620,529,620,620',
'620,529,529,,,,529,,529,529,529,529,529,529,529,,,,,,529,529,529,529',
'529,529,529,,,529,,,,,,,529,,,529,529,529,529,529,529,529,529,529,529',
'529,529,,529,529,529,529,529,,,,,,,,,,,,,,,,,,,,529,,,529,,,529,529',
',,529,,,,,,529,,,529,,,,,,529,,,,,529,529,529,529,,529,529,529,529,',
',,,529,529,,,,526,526,526,529,526,529,529,529,526,526,,,,526,,526,526',
'526,526,526,526,526,,,,,,526,526,526,526,526,526,526,,,526,,,,,,,526',
',,526,526,526,526,526,526,526,526,526,526,526,526,,526,526,526,526,526',
',,,,,,,,,,,,,,,,,,,526,,,526,,,526,526,,,526,,526,,,,526,,,526,,,,,',
'526,,,,,526,526,526,526,,526,526,526,526,,,,,526,526,,,,659,659,659',
'526,659,526,526,526,659,659,,,,659,,659,659,659,659,659,659,659,,,,',
',659,659,659,659,659,659,659,,,659,,,,,,,659,,,659,659,659,659,659,659',
'659,659,,659,659,659,,659,659,659,659,659,,,,,,,,,,,,,,,,,,,,659,,,659',
',,659,659,,,659,,,,,,659,,,,,,,,,659,,,,,659,659,659,659,,659,659,659',
'659,,,,,659,659,,,,662,662,662,659,662,659,659,659,662,662,,,,662,,662',
'662,662,662,662,662,662,,,,,,662,662,662,662,662,662,662,,,662,,,,,',
',662,,,662,662,662,662,662,662,662,662,,662,662,662,,662,662,662,662',
'662,,,,,,,,,,,,,,,,,,,,662,,,662,,,662,662,,,662,,,,,,662,,,,,,,,,662',
',,,,662,662,662,662,,662,662,662,662,,,,,662,662,,,,666,666,666,662',
'666,662,662,662,666,666,,,,666,,666,666,666,666,666,666,666,,,,,,666',
'666,666,666,666,666,666,,,666,,,,,,,666,,,666,666,666,666,666,666,666',
'666,,666,666,666,,666,666,,,666,,,,,,,,,,,,,,,,,,,,666,,,666,,,666,666',
',,666,,,,,,,,,,,,,,,,,,,,666,666,666,666,,666,666,666,666,,,,,666,666',
',,,520,520,520,666,520,666,666,666,520,520,,,,520,,520,520,520,520,520',
'520,520,,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520,,,520,520,520',
'520,520,520,520,520,,520,520,520,,520,520,520,520,520,,,,,,,,,,,,,,',
',,,,,520,,,520,,,520,520,,,520,,,,,,520,,,,,,,,,520,,,,,520,520,520',
'520,,520,520,520,520,,,,,520,520,,,,228,228,228,520,228,520,520,520',
'228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228,228',
'228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,,228,228,228',
',228,228,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,228,,,228,,',
',,,228,,,,,,,,,228,,,,,228,228,228,228,,228,228,228,228,,,,,228,228',
',,,35,35,35,228,35,228,228,228,35,35,,,,35,,35,35,35,35,35,35,35,,,',
',,35,35,35,35,35,35,35,,,35,,,,,,,35,,,35,35,35,35,35,35,35,35,,35,35',
'35,,35,35,,,35,,,,,,,,,,,,,,,,,,,,35,,,35,,,35,35,,,35,,,897,,897,897',
'897,897,897,,,,,,,,,897,,35,35,35,35,,35,35,35,35,,,,,35,35,,,,35,,897',
'35,,35,35,35,516,516,516,,516,897,897,,516,516,897,,,516,,516,516,516',
'516,516,516,516,,,,,,516,516,516,516,516,516,516,,,516,,,,,,,516,,,516',
'516,516,516,516,516,516,516,,516,516,516,,516,516,516,516,516,,,,,,',
',,,,,,,,,,,,,516,,,516,,,516,516,,,516,,,,,,516,,,,,,,,,516,,,,,516',
'516,516,516,,516,516,516,516,,,,,516,516,,,,231,231,231,516,231,516',
'516,516,231,231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231,231',
'231,231,231,231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,231,,231',
'231,231,,231,231,231,231,231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231',
',,231,,,,,,231,,,,,,,,,231,,,,,231,231,231,231,,231,231,231,231,,,,',
'231,231,,,,232,232,232,231,232,231,231,231,232,232,,,,232,,232,232,232',
'232,232,232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232',
'232,232,232,232,232,232,232,,232,232,232,,232,232,232,232,232,,,,,,',
',,,,,,,,,,,,,232,,,232,,,232,232,,,232,,,,,,232,,,,,,,,,232,,,,,232',
'232,232,232,,232,232,232,232,,,,,232,232,,,,233,233,233,232,233,232',
'232,232,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233,233',
'233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233,,233',
'233,233,,233,233,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,233',
',,233,,,,,,233,,,,,,,,,233,,,,,233,233,233,233,,233,233,233,233,,,,',
'233,233,,,,234,234,234,233,234,233,233,233,234,234,,,,234,,234,234,234',
'234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234',
'234,234,234,234,234,234,234,,234,234,234,,234,234,234,234,234,,,,,,',
',,,,,,,,,,,,,234,,,234,,,234,234,,,234,,,,,,234,,,,,,,,,234,,,,,234',
'234,234,234,,234,234,234,234,,,,,234,234,,,,235,235,235,234,235,234',
'234,234,235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235,235',
'235,235,235,235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,235,,235',
'235,235,,235,235,235,235,235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235',
',,235,,,,,,235,,,,,,,,,235,,,,,235,235,235,235,,235,235,235,235,,,,',
'235,235,,,,236,236,236,235,236,235,235,235,236,236,,,,236,,236,236,236',
'236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236',
'236,236,236,236,236,236,236,,236,236,236,,236,236,236,236,236,,,,,,',
',,,,,,,,,,,,,236,,,236,,,236,236,,,236,,,,,,236,,,,,,,,,236,,,,,236',
'236,236,236,,236,236,236,236,,,,,236,236,,,,237,237,237,236,237,236',
'236,236,237,237,,,,237,,237,237,237,237,237,237,237,,,,,,237,237,237',
'237,237,237,237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,,237',
'237,237,,237,237,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,237',
',,237,,,,,,237,,,,,,,,,237,,,,,237,237,237,237,,237,237,237,237,,,,',
'237,237,,,,238,238,238,237,238,237,237,237,238,238,,,,238,,238,238,238',
'238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238',
'238,238,238,238,238,238,238,,238,238,238,,238,238,238,238,238,,,,,,',
',,,,,,,,,,,,,238,,,238,,,238,238,,,238,,,,,,238,,,,,,,,,238,,,,,238',
'238,238,238,,238,238,238,238,,,,,238,238,,,,239,239,239,238,239,238',
'238,238,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239,239,239',
'239,239,239,239,,,239,,,,,,,239,,,239,239,239,239,239,239,239,239,,239',
'239,239,,239,239,239,239,239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,239',
',,239,,,,,,239,,,,,,,,,239,,,,,239,239,239,239,,239,239,239,239,,,,',
'239,239,,,,240,240,240,239,240,239,239,239,240,240,,,,240,,240,240,240',
'240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240',
'240,240,240,240,240,240,240,,240,240,240,,240,240,240,240,240,,,,,,',
',,,,,,,,,,,,,240,,,240,,,240,240,,,240,,,,,,240,,,,,,,,,240,,,,,240',
'240,240,240,,240,240,240,240,,,,,240,240,,,,241,241,241,240,241,240',
'240,240,241,241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241,241',
'241,241,241,241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,,241',
'241,241,,241,241,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241',
',,241,,,,,,241,,,,,,,,,241,,,,,241,241,241,241,,241,241,241,241,,,,',
'241,241,,,,242,242,242,241,242,241,241,241,242,242,,,,242,,242,242,242',
'242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,,,242,,,242',
'242,242,242,242,242,242,242,,242,242,242,,242,242,242,242,242,,,,,,',
',,,,,,,,,,,,,242,,,242,,,242,242,,,242,,,,,,242,,,,,,,,,242,,,,,242',
'242,242,242,,242,242,242,242,,,,,242,242,,,,243,243,243,242,243,242',
'242,242,243,243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243,243',
'243,243,243,243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,243,,243',
'243,243,,243,243,243,243,243,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,243',
',,243,,,,,,243,,,,,,,,,243,,,,,243,243,243,243,,243,243,243,243,,,,',
'243,243,,,,244,244,244,243,244,243,243,243,244,244,,,,244,,244,244,244',
'244,244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244',
'244,244,244,244,244,244,244,,244,244,244,,244,244,244,244,244,,,,,,',
',,,,,,,,,,,,,244,,,244,,,244,244,,,244,,,,,,244,,,,,,,,,244,,,,,244',
'244,244,244,,244,244,244,244,,,,,244,244,,,,245,245,245,244,245,244',
'244,244,245,245,,,,245,,245,245,245,245,245,245,245,,,,,,245,245,245',
'245,245,245,245,,,245,,,,,,,245,,,245,245,245,245,245,245,245,245,,245',
'245,245,,245,245,245,245,245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245',
',,245,,,,,,245,,,,,,,,,245,,,,,245,245,245,245,,245,245,245,245,,,,',
'245,245,,,,246,246,246,245,246,245,245,245,246,246,,,,246,,246,246,246',
'246,246,246,246,,,,,,246,246,246,246,246,246,246,,,246,,,,,,,246,,,246',
'246,246,246,246,246,246,246,,246,246,246,,246,246,246,246,246,,,,,,',
',,,,,,,,,,,,,246,,,246,,,246,246,,,246,,,,,,246,,,,,,,,,246,,,,,246',
'246,246,246,,246,246,246,246,,,,,246,246,,,,247,247,247,246,247,246',
'246,246,247,247,,,,247,,247,247,247,247,247,247,247,,,,,,247,247,247',
'247,247,247,247,,,247,,,,,,,247,,,247,247,247,247,247,247,247,247,,247',
'247,247,,247,247,247,247,247,,,,,,,,,,,,,,,,,,,,247,,,247,,,247,247',
',,247,,,,,,247,,,,,,,,,247,,,,,247,247,247,247,,247,247,247,247,,,,',
'247,247,,,,248,248,248,247,248,247,247,247,248,248,,,,248,,248,248,248',
'248,248,248,248,,,,,,248,248,248,248,248,248,248,,,248,,,,,,,248,,,248',
'248,248,248,248,248,248,248,,248,248,248,,248,248,248,248,248,,,,,,',
',,,,,,,,,,,,,248,,,248,,,248,248,,,248,,,,,,248,,,,,,,,,248,,,,,248',
'248,248,248,,248,248,248,248,,,,,248,248,,,,249,249,249,248,249,248',
'248,248,249,249,,,,249,,249,249,249,249,249,249,249,,,,,,249,249,249',
'249,249,249,249,,,249,,,,,,,249,,,249,249,249,249,249,249,249,249,,249',
'249,249,,249,249,249,249,249,,,,,,,,,,,,,,,,,,,,249,,,249,,,249,249',
',,249,,,,,,249,,,,,,,,,249,,,,,249,249,249,249,,249,249,249,249,,,,',
'249,249,,,,250,250,250,249,250,249,249,249,250,250,,,,250,,250,250,250',
'250,250,250,250,,,,,,250,250,250,250,250,250,250,,,250,,,,,,,250,,,250',
'250,250,250,250,250,250,250,,250,250,250,,250,250,250,250,250,,,,,,',
',,,,,,,,,,,,,250,,,250,,,250,250,,,250,,,,,,250,,,,,,,,,250,,,,,250',
'250,250,250,,250,250,250,250,,,,,250,250,,,,251,251,251,250,251,250',
'250,250,251,251,,,,251,,251,251,251,251,251,251,251,,,,,,251,251,251',
'251,251,251,251,,,251,,,,,,,251,,,251,251,251,251,251,251,251,251,,251',
'251,251,,251,251,251,251,251,,,,,,,,,,,,,,,,,,,,251,,,251,,,251,251',
',,251,,,,,,251,,,,,,,,,251,,,,,251,251,251,251,,251,251,251,251,,,,',
'251,251,,,,252,252,252,251,252,251,251,251,252,252,,,,252,,252,252,252',
'252,252,252,252,,,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252',
'252,252,252,252,252,252,252,,252,252,252,,252,252,252,252,252,,,,,,',
',,,,,,,,,,,,,252,,,252,,,252,252,,,252,,,,,,252,,,,,,,,,252,,,,,252',
'252,252,252,,252,252,252,252,,,,,252,252,,,,253,253,253,252,253,252',
'252,252,253,253,,,,253,,253,253,253,253,253,253,253,,,,,,253,253,253',
'253,253,253,253,,,253,,,,,,,253,,,253,253,253,253,253,253,253,253,,253',
'253,253,,253,253,253,253,253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,253',
',,253,,,,,,253,,,,,,,,,253,,,,,253,253,253,253,,253,253,253,253,,,,',
'253,253,,,,254,254,254,253,254,253,253,253,254,254,,,,254,,254,254,254',
'254,254,254,254,,,,,,254,254,254,254,254,254,254,,,254,,,,,,,254,,,254',
'254,254,254,254,254,254,254,,254,254,254,,254,254,254,254,254,,,,,,',
',,,,,,,,,,,,,254,,,254,,,254,254,,,254,,,,,,254,,,,,,,,,254,,,,,254',
'254,254,254,,254,254,254,254,,,,,254,254,,,,255,255,255,254,255,254',
'254,254,255,255,,,,255,,255,255,255,255,255,255,255,,,,,,255,255,255',
'255,255,255,255,,,255,,,,,,,255,,,255,255,255,255,255,255,255,255,,255',
'255,255,,255,255,255,255,255,,,,,,,,,,,,,,,,,,,,255,,,255,,,255,255',
',,255,,,,,,255,,,,,,,,,255,,,,,255,255,255,255,,255,255,255,255,,,,',
'255,255,,,,256,256,256,255,256,255,255,255,256,256,,,,256,,256,256,256',
'256,256,256,256,,,,,,256,256,256,256,256,256,256,,,256,,,,,,,256,,,256',
'256,256,256,256,256,256,256,,256,256,256,,256,256,256,256,256,,,,,,',
',,,,,,,,,,,,,256,,,256,,,256,256,,,256,,,,,,256,,,,,,,,,256,,,,,256',
'256,256,256,,256,256,256,256,,,,,256,256,,,,515,515,515,256,515,256',
'256,256,515,515,,,,515,,515,515,515,515,515,515,515,,,,,,515,515,515',
'515,515,515,515,,,515,,,,,,,515,,,515,515,515,515,515,515,515,515,,515',
'515,515,,515,515,515,515,515,,,,,,,,,,,,,,,,,,,,515,,,515,,,515,515',
',,515,,,,,,515,,,,,,,,,515,,,,,515,515,515,515,,515,515,515,515,,,,',
'515,515,,,,512,512,512,515,512,515,515,515,512,512,,,,512,,512,512,512',
'512,512,512,512,,,,,,512,512,512,512,512,512,512,,,512,,,,,,,512,,,512',
'512,512,512,512,512,512,512,,512,512,512,,512,512,,,512,,,,,,,,,,,,',
',,,,,,,512,,,512,,,512,512,,,512,,,,,,,,,,,,,,,,,,,,512,512,512,512',
',512,512,512,512,,,,,512,512,,,,263,263,263,512,263,512,512,512,263',
'263,,,,263,,263,263,263,263,263,263,263,,,,,,263,263,263,263,263,263',
'263,,,263,,,,,,,263,,,263,263,263,263,263,263,263,263,263,263,263,263',
',263,263,263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263,,,263,263,,,263,,263',
',263,,263,,,263,,,,,,263,,,,,263,263,263,263,,263,263,263,263,,,,,263',
'263,,,,264,264,264,263,264,263,263,263,264,264,,,,264,,264,264,264,264',
'264,264,264,,,,,,264,264,264,264,264,264,264,,,264,,,,,,,264,,,264,264',
'264,264,264,264,264,264,264,264,264,264,,264,264,264,264,264,,,,,,,',
',,,,,,,,,,,,264,,,264,,,264,264,,,264,,264,,264,,264,,,264,,,,,,264',
',,,,264,264,264,264,,264,264,264,264,,,,,264,264,,,,272,272,272,264',
'272,264,264,264,272,272,,,,272,,272,272,272,272,272,272,272,,,,,,272',
'272,272,272,272,272,272,,,272,,,,,,,272,,,272,272,272,272,272,272,272',
'272,272,272,272,272,,272,272,272,272,272,,,,,,,,,,,,,,,,,,,,272,,,272',
',,272,272,,,272,,272,,272,,272,,,272,,,,,,272,,,,,272,272,272,272,,272',
'272,272,272,,,,,272,272,272,,,677,677,677,272,677,272,272,272,677,677',
',,,677,,677,677,677,677,677,677,677,,,,,,677,677,677,677,677,677,677',
',,677,,,,,,,677,,,677,677,677,677,677,677,677,677,,677,677,677,,677',
'677,,,677,,,,,,,,,,,,,,,,,,,,677,,,677,,,677,677,,,677,,,,,,,,,,,,,',
',,,,,,677,677,677,677,,677,677,677,677,,,,,677,677,,,,506,506,506,677',
'506,677,677,677,506,506,,,,506,,506,506,506,506,506,506,506,,,,,,506',
'506,506,506,506,506,506,,,506,,,,,,,506,,,506,506,506,506,506,506,506',
'506,506,506,506,506,,506,506,506,506,506,,,,,,,,,,,,,,,,,,,,506,,,506',
',,506,506,,,506,,506,,506,,506,,,506,,,,,,506,,,,,506,506,506,506,,506',
'506,506,506,,,,,506,506,,,,504,504,504,506,504,506,506,506,504,504,',
',,504,,504,504,504,504,504,504,504,,,,,,504,504,504,504,504,504,504',
',,504,,,,,,,504,,,504,504,504,504,504,504,504,504,,504,504,504,,504',
'504,,,504,,,,,,,,,,,,,,,,,,,,504,,,504,,,504,504,,,504,,,,,,,,,,,,,',
',,,,,,504,504,504,504,,504,504,504,504,,,,,504,504,,,,279,279,279,504',
'279,504,504,504,279,279,,,,279,,279,279,279,279,279,279,279,,,,,,279',
'279,279,279,279,279,279,,,279,,,,,,,279,,,279,279,279,279,279,279,279',
'279,,279,279,279,,279,279,279,279,279,,,,,,,,,,,,,,,,,,,,279,,,279,',
',279,279,,,279,,,,,,279,,,,,,,,,279,,,,,279,279,279,279,,279,279,279',
'279,,,,,279,279,,,,886,886,886,279,886,279,279,279,886,886,,,,886,,886',
'886,886,886,886,886,886,,,,,,886,886,886,886,886,886,886,,,886,,,,,',
',886,,,886,886,886,886,886,886,886,886,,886,886,886,,886,886,,,886,',
',,,,,,,,,,,,,,,,,,886,,,886,,,886,886,,,886,,,,,,,,,,,,,,,,,,,,886,886',
'886,886,,886,886,886,886,,,,,886,886,,,,281,281,281,886,281,886,886',
'886,281,281,,,,281,,281,281,281,281,281,281,281,,,,,,281,281,281,281',
'281,281,281,,,281,,,,,,,281,,,281,281,281,281,281,281,281,281,,281,281',
'281,,281,281,281,281,281,,,,,,,,,,,,,,,,,,,,281,,,281,,,281,281,,,281',
',,,,,281,,,,,,,,,281,,,,,281,281,281,281,,281,281,281,281,,,,,281,281',
',,,284,284,284,281,284,281,281,281,284,284,,,,284,,284,284,284,284,284',
'284,284,,,,,,284,284,284,284,284,284,284,,,284,,,,,,,284,,,284,284,284',
'284,284,284,284,284,,284,284,284,,284,284,284,284,284,,,,,,,,,,,,,,',
',,,,,284,,,284,,,284,284,,,284,,,,,,284,,,,,,,,,284,,,,,284,284,284',
'284,,284,284,284,284,,,,,284,284,,,,285,285,285,284,285,284,284,284',
'285,285,,,,285,,285,285,285,285,285,285,285,,,,,,285,285,285,285,285',
'285,285,,,285,,,,,,,285,,,285,285,285,285,285,285,285,285,,285,285,285',
',285,285,285,285,285,,,,,,,,,,,,,,,,,,,,285,,,285,,,285,285,,,285,,',
',,,285,,,,,,,,,285,,,,,285,285,285,285,,285,285,285,285,,,,,285,285',
',,,682,682,682,285,682,285,285,285,682,682,,,,682,,682,682,682,682,682',
'682,682,,,,,,682,682,682,682,682,682,682,,,682,,,,,,,682,,,682,682,682',
'682,682,682,682,682,,682,682,682,,682,682,682,682,682,,,,,,,,,,,,,,',
',,,,,682,,,682,,,682,682,,,682,,682,,,,682,,,,,,,,,682,,,,,682,682,682',
'682,,682,682,682,682,,,,,682,682,,,,44,44,44,682,44,682,682,682,44,44',
',,,44,,44,44,44,44,44,44,44,,,,,,44,44,44,44,44,44,44,,,44,,,,,,,44',
',,44,44,44,44,44,44,44,44,,44,44,44,,44,44,44,44,44,,,,,,,,,,,,,,,,',
',,,44,,,44,,,44,44,,,44,,,,,,44,,,,,,,,,44,,,,,44,44,44,44,,44,44,44',
'44,,,,,44,44,,,,34,34,34,44,34,44,44,44,34,34,,,,34,,34,34,34,34,34',
'34,34,,,,,,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34,34,34,34,34,34',
'34,,34,34,34,,34,34,,,34,,,,,,,,,,,,,,,,,,,,34,,,34,,,34,34,,,34,,34',
',,,,,,,,,,,,,,,,,34,34,34,34,,34,34,34,34,,,,,34,34,,,,874,874,874,34',
'874,34,34,34,874,874,,,,874,,874,874,874,874,874,874,874,,,,,,874,874',
'874,874,874,874,874,,,874,,,,,,,874,,,874,874,874,874,874,874,874,874',
',874,874,874,,874,874,,,874,,,,,,,,,,,,,,,,,,,,874,,,874,,,874,874,',
',874,,,895,,895,895,895,895,895,,,,,,,,,895,,874,874,874,874,,874,874',
'874,874,,,,,874,874,,,,,,895,874,,874,874,874,496,496,496,496,496,895',
'895,,496,496,895,,,496,,496,496,496,496,496,496,496,,,,,,496,496,496',
'496,496,496,496,,,496,,,,,,496,496,496,496,496,496,496,496,496,496,496',
'496,,496,496,496,,496,496,496,496,496,,,,,,,,,,,,,,,,,,,,496,,,496,',
',496,496,,,496,,496,,,,496,,,,,,,,,496,,,,,496,496,496,496,,496,496',
'496,496,,,,,496,496,,,,,,496,496,,496,496,496,31,31,31,,31,,,,31,31',
',,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31',
',,31,31,31,31,31,31,31,31,31,31,31,31,,31,31,31,31,31,,,,,,,,,,,,,,',
',,,,,31,,,31,,,31,31,,,31,,31,,31,,31,,,31,,,,,,31,,,,,31,31,31,31,',
'31,31,31,31,,,,,31,31,,,,490,490,490,31,490,31,31,31,490,490,,,,490',
',490,490,490,490,490,490,490,,,,,,490,490,490,490,490,490,490,,,490',
',,,,,,490,,,490,490,490,490,490,490,490,490,,490,490,490,,490,490,490',
'490,490,,,,,,,,,,,,,,,,,,,,490,,,490,,,490,490,,,490,,,,,,490,,,,,,',
',,490,,,,,490,490,490,490,,490,490,490,490,,,,,490,490,,,,488,488,488',
'490,488,490,490,490,488,488,,,,488,,488,488,488,488,488,488,488,,,,',
',488,488,488,488,488,488,488,,,488,,,,,,,488,,,488,488,488,488,488,488',
'488,488,488,488,488,488,,488,488,488,488,488,,,,,,,,,,,,,,,,,,,,488',
',,488,,,488,488,,,488,,,,488,,488,,,488,,,,,,488,,,,,488,488,488,488',
',488,488,488,488,,,,,488,488,,,,486,486,486,488,486,488,488,488,486',
'486,,,,486,,486,486,486,486,486,486,486,,,,,,486,486,486,486,486,486',
'486,,,486,,,,,,,486,,,486,486,486,486,486,486,486,486,486,486,486,486',
',486,486,486,486,486,,,,,,,,,,,,,,,,,,,,486,,,486,,,486,486,,,486,,486',
',486,,486,,,486,,,,,,486,,,,,486,486,486,486,,486,486,486,486,,,,,486',
'486,,,,298,298,298,486,298,486,486,486,298,298,,,,298,,298,298,298,298',
'298,298,298,,,,,,298,298,298,298,298,298,298,,,298,,,,,,,298,,,298,298',
'298,298,298,298,298,298,,298,298,298,,298,298,,,298,,,,,,,,,,,,,,,,',
',,,298,,,298,,,298,298,,,298,,,899,,899,899,899,899,899,,,,,,,,,899',
',298,298,298,298,,298,298,298,298,,,,,298,298,,,,298,,899,298,,298,298',
'298,30,30,30,,30,899,899,,30,30,899,,,30,,30,30,30,30,30,30,30,,,,,',
'30,30,30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30,30,30,30,30,30,30,30',
'30,,30,30,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,,30,,30,,30,',
'30,,,30,,,,,,30,,,,,30,30,30,30,,30,30,30,30,,,,,30,30,,,,699,699,699',
'30,699,30,30,30,699,699,,,,699,,699,699,699,699,699,699,699,,,,,,699',
'699,699,699,699,699,699,,,699,,,,,,,699,,,699,699,699,699,699,699,699',
'699,,699,699,699,,699,699,699,699,699,,,,,,,,,,,,,,,,,,,,699,,,699,',
',699,699,,,699,,,,,,699,,,,,,,,,699,,,,,699,699,699,699,,699,699,699',
'699,,,,,699,699,,,,860,860,860,699,860,699,699,699,860,860,,,,860,,860',
'860,860,860,860,860,860,,,,,,860,860,860,860,860,860,860,,,860,,,,,',
',860,,,860,860,860,860,860,860,860,860,,860,860,860,,860,860,860,860',
'860,,,,,,,,,,,,,,,,,,,,860,,,860,,,860,860,,,860,,,,,,860,,,,,,,,,860',
',,,,860,860,860,860,,860,860,860,860,,,,,860,860,,,,859,859,859,860',
'859,860,860,860,859,859,,,,859,,859,859,859,859,859,859,859,,,,,,859',
'859,859,859,859,859,859,,,859,,,,,,,859,,,859,859,859,859,859,859,859',
'859,859,859,859,859,,859,859,859,859,859,,,,,,,,,,,,,,,,,,,,859,,,859',
',,859,859,,,859,,,,859,,859,,,859,,,,,,859,,,,,859,859,859,859,,859',
'859,859,859,,,,,859,859,,,,446,446,446,859,446,859,859,859,446,446,',
',,446,,446,446,446,446,446,446,446,,,,,,446,446,446,446,446,446,446',
',,446,,,,,,,446,,,446,446,446,446,446,446,446,446,,446,446,446,,446',
'446,446,446,446,,,,,,,,,,,,,,,,,,,,446,,,446,,,446,446,,,446,,,,,,446',
',,,,,,,,446,,,,,446,446,446,446,,446,446,446,446,,,,,446,446,,,,29,29',
'29,446,29,446,446,446,29,29,,,,29,,29,29,29,29,29,29,29,,,,,,29,29,29',
'29,29,29,29,,,29,,,,,,,29,,,29,29,29,29,29,29,29,29,29,29,29,29,,29',
'29,29,29,29,,,,,,,,,,,,,,,,,,,,29,,,29,,,29,29,,,29,,29,,29,,29,,,29',
',,,,,29,,,,,29,29,29,29,,29,29,29,29,,,,,29,29,,,,445,445,445,29,445',
'29,29,29,445,445,,,,445,,445,445,445,445,445,445,445,,,,,,445,445,445',
'445,445,445,445,,,445,,,,,,,445,,,445,445,445,445,445,445,445,445,,445',
'445,445,,445,445,445,445,445,,,,,,,,,,,,,,,,,,,,445,,,445,,,445,445',
',,445,,,,,,445,,,,,,,,,445,,,,,445,445,445,445,,445,445,445,445,,,,',
'445,445,,,,444,444,444,445,444,445,445,445,444,444,,,,444,,444,444,444',
'444,444,444,444,,,,,,444,444,444,444,444,444,444,,,444,,,,,,,444,,,444',
'444,444,444,444,444,444,444,,444,444,444,,444,444,444,444,444,,,,,,',
',,,,,,,,,,,,,444,,,444,,,444,444,,,444,,,,,,444,,,,,,,,,444,,,,,444',
'444,444,444,,444,444,444,444,,,,,444,444,,,,442,442,442,444,442,444',
'444,444,442,442,,,,442,,442,442,442,442,442,442,442,,,,,,442,442,442',
'442,442,442,442,,,442,,,,,,,442,,,442,442,442,442,442,442,442,442,442',
'442,442,442,,442,442,442,442,442,,,,,,,,,,,,,,,,,,,,442,,,442,,,442',
'442,,,442,,442,,442,,442,,,442,,,,,,442,,,,,442,442,442,442,,442,442',
'442,442,,,,,442,442,,,,340,340,340,442,340,442,442,442,340,340,,,,340',
',340,340,340,340,340,340,340,,,,,,340,340,340,340,340,340,340,,,340',
',,,,,,340,,,340,340,340,340,340,340,340,340,,340,340,340,,340,340,340',
'340,340,,,,,,,,,,,,,,,,,,,,340,,,340,,,340,340,,,340,,,,,,340,,,,,,',
',,340,,,,,340,340,340,340,,340,340,340,340,,,,,340,340,,,,725,725,725',
'340,725,340,340,340,725,725,,,,725,,725,725,725,725,725,725,725,,,,',
',725,725,725,725,725,725,725,,,725,,,,,,,725,,,725,725,725,725,725,725',
'725,725,,725,725,725,,725,725,725,725,725,,,,,,,,,,,,,,,,,,,,725,,,725',
',,725,725,,,725,,,,,,725,,,,,,,,,725,,,,,725,725,725,725,,725,725,725',
'725,,,,,725,725,,,,842,842,842,725,842,725,725,725,842,842,,,,842,,842',
'842,842,842,842,842,842,,,,,,842,842,842,842,842,842,842,,,842,,,,,',
',842,,,842,842,842,842,842,842,842,842,,842,842,842,,842,842,842,842',
'842,,,,,,,,,,,,,,,,,,,,842,,,842,,,842,842,,,842,,842,,,,842,,,,,,,',
',842,,,,,842,842,842,842,,842,842,842,842,,,,,842,842,,,,315,315,315',
'842,315,842,842,842,315,315,,,,315,,315,315,315,315,315,315,315,,,,',
',315,315,315,315,315,315,315,,,315,,,,,,,315,,,315,315,315,315,315,315',
'315,315,,315,315,315,,315,315,,,315,,,,,,,,,,,,,,,,,,,,315,,,315,,,315',
'315,,,315,,,,,,,,,,,,,,,,,,,,315,315,315,315,,315,315,315,315,,,,,315',
'315,,,,404,404,404,315,404,315,315,315,404,404,,,,404,,404,404,404,404',
'404,404,404,,,,,,404,404,404,404,404,404,404,,,404,,,,,,,404,,,404,404',
'404,404,404,404,404,404,,404,404,404,,404,404,404,404,404,,,,,,,,,,',
',,,,,,,,,404,,,404,,,404,404,,,404,,,,,,404,,,,,,,,,404,,,,,404,404',
'404,404,,404,404,404,404,,,,,404,404,,,,731,731,731,404,731,404,404',
'404,731,731,,,,731,,731,731,731,731,731,731,731,,,,,,731,731,731,731',
'731,731,731,,,731,,,,,,,731,,,731,731,731,731,731,731,731,731,,731,731',
'731,,731,731,731,731,731,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,731,,,731',
',,,,,731,,,,,,,,,731,,,,,731,731,731,731,,731,731,731,731,,,,,731,731',
',,,376,376,376,731,376,731,731,731,376,376,,,,376,,376,376,376,376,376',
'376,376,,,,,,376,376,376,376,376,376,376,,,376,,,,,,,376,,,376,376,376',
'376,376,376,376,376,,376,376,376,,376,376,376,376,376,,,,,,,,,,,,,,',
',,,,,376,,,376,,,376,376,,,376,,,,,,376,,,,,,,,,376,,,,,376,376,376',
'376,,376,376,376,376,,,,,376,376,,,,837,837,837,376,837,376,376,376',
'837,837,,,,837,,837,837,837,837,837,837,837,,,,,,837,837,837,837,837',
'837,837,,,837,,,,,,,837,,,837,837,837,837,837,837,837,837,,837,837,837',
',837,837,837,837,837,,,,,,,,,,,,,,,,,,,,837,,,837,,,837,837,,,837,,',
',,,837,,,,,,,,,837,,,,,837,837,837,837,,837,837,837,837,,,,,837,837',
',,,323,323,323,837,323,837,837,837,323,323,,,,323,,323,323,323,323,323',
'323,323,,,,,,323,323,323,323,323,323,323,,,323,,,,,,,323,,,323,323,323',
'323,323,323,323,323,,323,323,323,,323,323,323,323,323,,,,,,,,,,,,,,',
',,,,,323,,,323,323,,323,323,,,323,,,,,,323,,,,,,,,,323,,,,,323,323,323',
'323,,323,323,323,323,,,,,323,323,,,,983,983,983,323,983,323,323,323',
'983,983,,,,983,,983,983,983,983,983,983,983,,,,,,983,983,983,983,983',
'983,983,,,983,,,,,,,983,,,983,983,983,983,983,983,983,983,983,983,983',
'983,,983,983,983,983,983,,,,,,,,,,,,,,,,,,,,983,,,983,,,983,983,,,983',
',983,,983,,983,,,983,,,,,,983,,,,,983,983,983,983,,983,983,983,983,',
',,,983,983,,,,325,325,325,983,325,983,983,983,325,325,,,,325,,325,325',
'325,325,325,325,325,,,,,,325,325,325,325,325,325,325,,,325,,,,,,,325',
',,325,325,325,325,325,325,325,325,,325,325,325,,325,325,325,325,325',
',,,,,,,,,,,,,,,,,,,325,,,325,,,325,325,,,325,,,,,,325,,,,,,,,,325,,',
',,325,325,325,325,,325,325,325,325,,,,,325,325,,,,754,754,754,325,754',
'325,325,325,754,754,,,,754,,754,754,754,754,754,754,754,,,,,,754,754',
'754,754,754,754,754,,,754,,,,,,,754,,,754,754,754,754,754,754,754,754',
',754,754,754,,754,754,754,754,754,,,,,,,,,,,,,,,,,,,,754,,,754,,,754',
'754,,,754,,,,,,754,,,,,,,,,754,,,,,754,754,754,754,,754,754,754,754',
',,,,754,754,,,,756,756,756,754,756,754,754,754,756,756,,,,756,,756,756',
'756,756,756,756,756,,,,,,756,756,756,756,756,756,756,,,756,,,,,,,756',
',,756,756,756,756,756,756,756,756,,756,756,756,,756,756,756,756,756',
',,,,,,,,,,,,,,,,,,,756,,,756,,,756,756,,,756,,,,,,756,,,,,,,,,756,,',
',,756,756,756,756,,756,756,756,756,,,,,756,756,,,,360,360,360,756,360',
'756,756,756,360,360,,,,360,,360,360,360,360,360,360,360,,,,,,360,360',
'360,360,360,360,360,,,360,,,,,,,360,,,360,360,360,360,360,360,360,360',
',360,360,360,,360,360,360,360,360,,,,,,,,,,,,,,,,,,,,360,,,360,,,360',
'360,,,360,,,,,,360,,,,,,,,,360,,,,,360,360,360,360,,360,360,360,360',
',,,,360,360,,,,770,770,770,360,770,360,360,360,770,770,,,,770,,770,770',
'770,770,770,770,770,,,,,,770,770,770,770,770,770,770,,,770,,,,,,,770',
',,770,770,770,770,770,770,770,770,,770,770,770,,770,770,770,770,770',
',,,,,,,,,,,,,,,,,,,770,,,770,,,770,770,,,770,,,,,,770,,,,,,,,,770,,',
',,770,770,770,770,,770,770,770,770,,,,,770,770,,,,20,20,20,770,20,770',
'770,770,20,20,,,,20,,20,20,20,20,20,20,20,,,,,,20,20,20,20,20,20,20',
',,20,,,,,,,20,,,20,20,20,20,20,20,20,20,,20,20,20,,20,20,20,20,20,,',
',,,,,,,,,,,,,,,,,20,,,20,,,20,20,,,20,,,,,,20,,,,,,,,,20,,,,,20,20,20',
'20,,20,20,20,20,,,,,20,20,,,,771,771,771,20,771,20,20,20,771,771,,,',
'771,,771,771,771,771,771,771,771,,,,,,771,771,771,771,771,771,771,,',
'771,,,,,,,771,,,771,771,771,771,771,771,771,771,,771,771,771,,771,771',
'771,771,771,,,,,,,,,,,,,,,,,,,,771,,,771,,,771,771,,,771,,,,,,771,,',
',,,,,,771,,,,,771,771,771,771,,771,771,771,771,,,,,771,771,,,,772,772',
'772,771,772,771,771,771,772,772,,,,772,,772,772,772,772,772,772,772',
',,,,,772,772,772,772,772,772,772,,,772,,,,,,,772,,,772,772,772,772,772',
'772,772,772,,772,772,772,,772,772,772,772,772,,,,,,,,,,,,,,,,,,,,772',
',,772,,,772,772,,,772,,,,,,772,,,,,,,,,772,,,,,772,772,772,772,,772',
'772,772,772,,,,,772,772,,,,773,773,773,772,773,772,772,772,773,773,',
',,773,,773,773,773,773,773,773,773,,,,,,773,773,773,773,773,773,773',
',,773,,,,,,,773,,,773,773,773,773,773,773,773,773,,773,773,773,,773',
'773,773,773,773,,,,,,,,,,,,,,,,,,,,773,,,773,,,773,773,,,773,,,,,,773',
',,,,,,,,773,,,,,773,773,773,773,,773,773,773,773,,,,,773,773,,,,787',
'787,787,773,787,773,773,773,787,787,,,,787,,787,787,787,787,787,787',
'787,,,,,,787,787,787,787,787,787,787,,,787,,,,,,,787,,,787,787,787,787',
'787,787,787,787,,787,787,787,,787,787,,,787,,,,,,,,,,,,,,,,,,,,787,',
',787,,,787,787,,,787,,,,,,,,,,,,,,,,,,,,787,787,787,787,,787,787,787',
'787,,,,,787,787,,,,775,775,775,787,775,787,787,787,775,775,,,,775,,775',
'775,775,775,775,775,775,,,,,,775,775,775,775,775,775,775,,,775,,,,,',
',775,,,775,775,775,775,775,775,775,775,,775,775,775,,775,775,775,775',
'775,,,,,,,,,,,,,,,,,,,,775,,,775,,,775,775,,,775,,,,,,775,,,,,,,,,775',
',,,,775,775,775,775,,775,775,775,775,,,,,775,775,,,,341,341,341,775',
'341,775,775,775,341,341,,,,341,,341,341,341,341,341,341,341,,,,,,341',
'341,341,341,341,341,341,,,341,,,,,,,341,,,341,341,341,341,341,341,341',
'341,,341,341,341,,341,341,341,341,341,,,,,,,,,,,,,,,,,,,,341,,,341,',
',341,341,,,341,,,,,,341,,,,,,,,,341,,,,,341,341,341,341,,341,341,341',
'341,,,,,341,341,,,,619,619,619,341,619,341,341,341,619,619,,,,619,,619',
'619,619,619,619,619,619,,,,,,619,619,619,619,619,619,619,,,619,,,,,',
',619,,,619,619,619,619,619,619,619,619,,619,619,619,,619,619,619,619',
'619,,,,,,,,,,,,,,,,,,,,619,,,619,,,619,619,,,619,,619,,,,619,,,,,,,',
',619,,,,,619,619,619,619,,619,619,619,619,,,,,619,619,,,,,425,,619,',
'619,619,619,425,425,425,,,425,425,425,,425,,,,,,,,,425,425,425,425,',
',,,,,,425,425,,425,425,425,425,425,,,,,,,,,,,,,,,,,,,,,,,425,425,425',
'425,425,425,425,425,425,425,425,425,425,425,,,425,425,425,,,425,,,425',
',,425,425,,425,,425,,425,,425,425,,425,425,425,425,425,,425,425,425',
',,,,,,,,,,,,,425,,,425,425,425,425,424,425,,425,,,,424,424,424,,,424',
'424,424,,424,,,,,,,,,424,424,424,424,,,,,,,,424,424,,424,424,424,424',
'424,,,,,,,,,,,,,,,,,,,,,,,424,424,424,424,424,424,424,424,424,424,424',
'424,424,424,,,424,424,424,,,424,,,424,,,424,424,,424,,424,,424,,424',
'424,,424,424,424,424,424,,424,424,424,,,,,,,,,,,,,,424,,,424,424,424',
'424,56,424,,424,,,,56,56,56,,,56,56,56,,56,,,,,,,,,,56,56,56,,,,,,,',
'56,56,,56,56,56,56,56,,,,,,,,,,,,,,,,,,,,,,,56,56,56,56,56,56,56,56',
'56,56,56,56,56,56,,,56,56,56,,,56,,,56,,,56,56,,56,,56,,56,,56,56,,56',
'56,56,56,56,,56,,56,973,,973,973,973,973,973,,,,,,,56,,973,56,56,56',
'56,27,56,,56,,,,27,27,27,,,27,27,27,,27,973,,,,,,,,27,27,27,973,973',
',,,973,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27',
'27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,27,,27,,27,,27',
',27,27,,27,27,27,27,27,,27,27,27,,,,,,,,,,,,,,27,,415,27,27,,27,,27',
'415,415,415,,,415,415,415,,415,,,,,,,,,415,415,415,,,,,,,,,415,415,',
'415,415,415,415,415,,,,,,,,,,,,,,,,,,,,,,,415,415,415,415,415,415,415',
'415,415,415,415,415,415,415,,,415,415,415,,,415,,415,415,,,415,415,',
'415,,415,,415,,415,415,,415,415,415,415,415,28,415,415,415,,,,28,28',
'28,,,28,28,28,,28,415,,,415,415,,415,,415,28,28,,,,,,,,,28,28,,28,28',
'28,28,28,,,,,,,,,,,,,,,,,,,,,,,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,,,28,28,28,,,28,,28,28,,,28,28,,28,,28,,28,,28,28,,28,28,28,28,28',
',28,474,28,,,,,,474,474,474,,,474,474,474,28,474,,28,28,,28,,28,,474',
'474,,,,,,,,,,474,474,,474,474,474,474,474,,646,,646,646,646,646,646',
',,,,,,,,646,,,,,,,,893,,893,893,893,893,893,,,474,,,,,646,893,474,,',
',,474,474,646,646,646,646,,,,646,,,,,,,893,,,,,,,474,474,893,893,893',
'893,,,,893,,,646,,,474,,,474,,,,,474,616,616,616,616,616,616,616,616',
'616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,,,,616',
'616,616,616,616,616,616,616,616,616,,,,,,616,616,616,616,616,616,616',
'616,616,,,616,,,,,,,,616,616,,616,616,616,616,616,616,616,,,616,616',
',,,616,616,616,616,,,,,,,,,,,,,,616,616,,616,616,616,616,616,616,616',
'616,616,616,616,616,,,616,616,,,,,,,,,,,,,,616,9,9,9,9,9,9,9,9,9,9,9',
'9,9,9,9,9,9,9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9,,,,,,9,9,9,9,9,9,9',
'9,9,,,9,,,,,,,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9,9,,,,,,,,,,,,,,9,9',
',9,9,9,9,9,9,9,9,9,9,9,9,,,9,9,,,,,,,,,,,,,,9,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,,,,,,8,8,8,8,8,8,8',
'8,8,8,,8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,,8,8',
',8,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,,,,,8,395,395,395,395,395,395',
'395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395',
'395,,,,395,395,395,395,395,395,395,395,395,395,,,,,,395,395,395,395',
'395,395,395,395,395,,,395,,,,,,,,395,395,,395,395,395,395,395,395,395',
',,395,395,,,,395,395,395,395,,,,,,,,,,,,,,395,395,,395,395,395,395,395',
'395,395,395,395,395,395,395,,,395,395,,,,,,,,,,,,,,395,71,71,71,71,71',
'71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,,,,71,71,71',
'71,71,71,71,71,71,71,,,,,,71,71,71,71,71,71,71,71,71,71,71,71,,71,,',
',,,71,71,,71,71,71,71,71,71,71,,,71,71,,,,71,71,71,71,,,,,,71,,,,,,',
',71,71,,71,71,71,71,71,71,71,71,71,71,71,71,,,71,738,738,738,738,738',
'738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738',
'738,738,,,,738,738,738,738,738,738,738,738,738,738,,,,,,738,738,738',
'738,738,738,738,738,738,,,738,,,,,,,,738,738,,738,738,738,738,738,738',
'738,,,738,738,,,,738,738,738,738,,,,,,,,,,,,,,738,738,,738,738,738,738',
'738,738,738,738,738,738,738,738,210,210,738,,210,,,,,,,,210,210,,210',
'210,210,210,210,210,210,,,210,210,,,,210,210,210,210,,,,,,210,,,,,,',
',210,210,,210,210,210,210,210,210,210,210,210,210,210,210,211,211,210',
',211,,,,,,,,211,211,,211,211,211,211,211,211,211,,,211,211,,,,211,211',
'211,211,,,,,,211,,,,,,,,211,211,,211,211,211,211,211,211,211,211,211',
'211,211,211,440,440,211,,440,,,,,,,,440,440,,440,440,440,440,440,440',
'440,,,440,440,,,,440,440,440,440,,,,,,440,,,,,,,,440,440,,440,440,440',
'440,440,440,440,440,440,440,440,440,508,508,440,,508,,,,,,,,508,508',
',508,508,508,508,508,508,508,,,508,508,,,,508,508,508,508,,,,,,508,',
',,,,,,508,508,,508,508,508,508,508,508,508,508,508,508,508,508,507,507',
'508,,507,,,,,,,,507,507,,507,507,507,507,507,507,507,,,507,507,,,,507',
'507,507,507,,,,,,507,,,,,,,,507,507,,507,507,507,507,507,507,507,507',
'507,507,507,507,938,938,507,,938,,,,,,,,938,938,,938,938,938,938,938',
'938,938,,,938,938,,,,938,938,938,938,,,,,,938,,,,,,,,938,938,,938,938',
'938,938,938,938,938,938,938,938,938,938,576,576,938,,576,,,,,,,,576',
'576,,576,576,576,576,576,576,576,,,576,576,,,,576,576,576,576,,,,,,576',
',,,,,,,576,576,,576,576,576,576,576,576,576,576,576,576,576,576,577',
'577,576,,577,,,,,,,,577,577,,577,577,577,577,577,577,577,,,577,577,',
',,577,577,577,577,,,,,,577,,,,,,,,577,577,,577,577,577,577,577,577,577',
'577,577,577,577,577,259,259,577,,259,,,,,,,,259,259,,259,259,259,259',
'259,259,259,,,259,259,,,,259,259,259,259,,,,,,,,,,,,,,259,259,,259,259',
'259,259,259,259,259,259,259,259,259,259,583,583,259,,583,,,,,,,,583',
'583,,583,583,583,583,583,583,583,,,583,583,,,,583,583,583,583,,,,,,583',
',,,,,,,583,583,,583,583,583,583,583,583,583,583,583,583,583,583,584',
'584,583,,584,,,,,,,,584,584,,584,584,584,584,584,584,584,,,584,584,',
',,584,584,584,584,,,,,,584,,,,,,,,584,584,,584,584,584,584,584,584,584',
'584,584,584,584,584,984,984,584,,984,,,,,,,,984,984,,984,984,984,984',
'984,984,984,,,984,984,,,,984,984,984,984,,,,,,984,,,,,,,,984,984,,984',
'984,984,984,984,984,984,984,984,984,984,984,517,517,984,,517,,,,,,,',
'517,517,,517,517,517,517,517,517,517,,,517,517,,,,517,517,517,517,,',
',,,517,,,,,,,,517,517,,517,517,517,517,517,517,517,517,517,517,517,517',
'518,518,517,,518,,,,,,,,518,518,,518,518,518,518,518,518,518,,,518,518',
',,,518,518,518,518,,,,,,518,,,,,,,,518,518,,518,518,518,518,518,518',
'518,518,518,518,518,518,985,985,518,,985,,,,,,,,985,985,,985,985,985',
'985,985,985,985,,,985,985,,,,985,985,985,985,,,,,,985,,,,,,,,985,985',
',985,985,985,985,985,985,985,985,985,985,985,985,441,441,985,,441,,',
',,,,,441,441,,441,441,441,441,441,441,441,,,441,441,,,,441,441,441,441',
',,,,,441,,,,,,,,441,441,,441,441,441,441,441,441,441,441,441,441,441',
'441,,737,441,737,737,737,737,737,869,,869,869,869,869,869,,737,,,,,',
'867,869,867,867,867,867,867,,,,,,,,,867,737,,,,,,,869,,737,737,737,737',
',,,737,,869,869,,867,,869,,,,,,,867,867,867,867,,,865,867,865,865,865',
'865,865,,,,,,,,336,865,336,336,336,336,336,,,,,,,,736,336,736,736,736',
'736,736,,,865,,,,,,736,,,865,865,865,865,,336,336,865,,,,,,,336,336',
'336,336,,736,,336,,,,,,,736,736,736,736,,,693,736,693,693,693,693,693',
'987,,987,987,987,987,987,975,693,975,975,975,975,975,,987,,,,,,534,975',
'534,534,534,534,534,,,693,,,,,,534,987,,693,693,693,693,,975,,693,,987',
'987,,,,987,,975,975,,534,,975,,,,,,,534,534,534,534,,,695,534,695,695',
'695,695,695,,969,,969,969,969,969,969,695,,,,,,,,969,,697,,697,697,697',
'697,697,,,,,,695,,,697,,,,,969,695,695,695,695,,,,695,969,969,969,969',
',,,969,697,,971,,971,971,971,971,971,,,697,697,,,,697,971,,1013,,1013',
'1013,1013,1013,1013,,,,,,,,,1013,,,,,971,,,,,,,,,,,971,971,,,,971,1013',
',,,,,,,,,,1013,1013,,,,1013' ]
        racc_action_check = arr = ::Array.new(25135, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  1282,  1409,   nil,   -71,   nil,  9162,  1407,  1274, 23309, 23181,
  1269,   nil,  1168,  1223,   764,   361,  1154,   465,   nil,   -74,
 21115,  1422,  1249,   nil,   507,   nil,    79, 22568, 22807, 18626,
 17971, 17308,   nil,  3522, 16899, 11258,   nil,  1141,   485,   363,
  1217,   189,  6903,  5192, 16768,  1139,   934,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 22434,   nil,   -70,  5585,
  5716,   -21,   nil,  5978,  6109,   nil,   nil,  6240,  6379,  6510,
  6641, 23565,   nil,   nil,   nil,   nil,   nil,   376,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   136,   nil,   nil,   248,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1256,
   nil,  7435,   nil,   nil,   nil,   nil,  7574,  7705,  7836,  7967,
  8106,  4222,   nil,    -4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  1045,   nil,  3942,  8761,  8892,  9023,
 23739, 23800,  9424,  9555,  9686,  9817,  9948, 10079,   nil,   nil,
  1214,   250,   135,  1074,   -41,   984,  1030,   nil, 11127,  3802,
  1026, 11528, 11659, 11790, 11921, 12052, 12183, 12314, 12445, 12576,
 12707, 12838, 12969, 13100, 13231, 13362, 13493, 13624, 13755, 13886,
 14017, 14148, 14279, 14410, 14541, 14672, 14803,   nil,   nil, 24227,
   nil,   nil,  1018, 15196, 15327,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15458,   nil,  2962,   nil,   973,   968,   nil, 15982,
  1001, 16244,   nil,   nil, 16375, 16506,   nil,   nil,   280,   nil,
  5061,   707,   930,   896,  3382,   900,   939,   895, 17832,  3242,
  1044,   329,   794,   959,   722,   nil,   898,   856,   170,   nil,
   nil,   nil,   887,   249,   842, 19543,   nil,   357,   908,   474,
   nil,   890,   nil, 20198,  2542, 20460,   818,   nil,   628,   570,
   794,   746,   576,   729,   nil,   nil, 24803,   726,    35,    36,
 19150, 21901,   261,   661,   536,     7,     8,  1285,   605,    -5,
   621,   nil,   nil,   361,   473,   421,   nil,  1005,   nil,    16,
 20853,   nil,   nil,   nil,   547,   591,   293,   335,   337,   181,
   548,   595,   770,   nil,   772,   nil, 19936,   nil,   397,   408,
   402,   392,   356,   -27,   -16,   504,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   298, 23437,   nil,   nil,   nil,   nil,
   280,   nil,   nil,   249, 19674,   146,   nil,   nil,   862,   140,
   nil,   113,    53,   276,   227, 22697,   nil,   nil,   nil,   358,
   470,    29,   nil,   nil, 22300, 22166,   nil,  2122,   nil,   -47,
   nil,   nil,   722,   nil,   nil,   nil,   nil,    52,   nil,   -27,
 23861, 24654, 19019,   110, 18888, 18757, 18495,  4782,  4222,   618,
   633,   -45,   357,   387,   393,  5454,  5323,  5192,  4642,  4362,
  4082,  3942,  3242,  3522,  3382,  3802,  3662,  4502,   599,   538,
  5061,  4922,  1982,   -56, 22919,   nil,   nil,   nil,   nil,   345,
   nil,   124,   -52,   395,   nil,   nil, 17701,   nil, 17570,   nil,
 17439,   nil,   279,   nil,   nil,   nil, 17169,  1422,  1142,   429,
   436,   nil,   nil,   502, 15851,   539, 15720, 23983, 23922,   865,
   757,   nil, 15065,   789,   nil, 14934, 11397, 24471, 24532,  2682,
 10996,   959,   990,   682,   926,   nil, 10472,   nil,   nil, 10341,
   nil,   nil,   nil,   nil, 24897,   nil,   910,   929,   nil,   950,
  1002,  1036,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1028,   641,   nil,   nil,  9293,   nil,   nil,   nil,  1147,   nil,
   nil,   nil,  1177,   nil,   nil,  1203,  1422,  1254,   nil,  4362,
    54,    39,  1251,  1266,  8499,  8368, 24105, 24166,     5,   nil,
   nil,   904,   nil, 24288, 24349,  7296,   nil,   nil,   nil,   460,
   217,  4502,  1206,   nil,   -13,   nil,   nil,   nil,   556,   nil,
   nil,   nil,  1205,   nil,   nil,   239,   nil,   283,   nil,   nil,
  1260,   nil,  1261,   nil,   nil,   nil, 23053,   nil,  1175, 22032,
 10210,   469,  1313,  5323,  5454,  5847,  6772,  1210,   nil,   nil,
  7034,  7165,  1183,   nil,  8237,  8630,   nil,   nil,   141,   151,
     0,   580,  1072,  1002,  1052,   nil, 22913,   nil,  2402,  1141,
   -15,   126,   nil,   862,  1002,   nil,   908,   nil,   939, 10603,
   nil,   nil, 10734,   nil,   902,   -81, 10865,   861,   nil,   862,
    98,    57,   800,   256,   862,   714,   548, 15589,  2542,   571,
   156,   572, 16637,   nil,   435,   nil,    64,    30,   399,   431,
   nil,   nil,   117, 24869,   nil, 24949,   nil, 24974,   nil, 18102,
   nil,  3088,   nil,   176,   251,  1006,   nil,   nil,   nil,   nil,
   798,   nil,    20,   nil,   nil,   nil,   nil,    42,   nil,    50,
   -45,    22,     6,    68,    92, 19281,   549,  1002,   nil,   207,
  1562, 19805,   nil,   nil,   393,  1702, 24817, 24716, 23678,   nil,
   nil,   nil,   nil,   nil,   nil,  1842,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   386, 20591,  1702, 20722,   nil,   428,   nil,
  2402,   nil,  2262,   nil,   nil,  2822,   nil,  1562,   nil,  1842,
 20984, 21246, 21377, 21508,   138, 21770,   557,   575,   nil,   581,
   597,   601,   nil,   650,   634,   643,   640, 21639,   nil,   nil,
   799,   nil,   nil,  1982,   708,   825,   nil,   nil,   nil,   nil,
   702,   362,   nil,   nil,   844,   nil,  2122,   742,   789,   nil,
   nil,   796,   nil,   nil,  2262,   722,   800,   765,   nil,   nil,
   nil,   766,   768,   nil,   769,   770,   nil,   771,   nil,   nil,
   788,  3117,   810,  3127,   nil,   943,   nil, 20067,   952,  2682,
  2822,   nil, 19412,  2962,   -19,    24,   nil,   980,   504,  3102,
   nil,   986,   866,   177,   nil,   882,   877,   nil,  1142, 18364,
 18233,  1282,   770,   nil,   nil, 24789,   nil, 24737,   nil, 24723,
   nil,   nil,   930,  1128, 17030,  1145,   989,   nil,   945,   nil,
   nil,   nil,  3662,   nil,   nil,   -11, 16113,   nil,   nil,   979,
  1087,   nil,   nil, 22936,   nil, 17077,   nil, 11305,   nil, 17879,
   nil,   nil,   nil,   nil,   243,  3258,   994,   nil,   -10,   nil,
  1123,  1125,   nil,   287,   nil,   nil,   nil,    -3,   nil,   nil,
   nil,  1050,   nil,  1016,   nil,   nil,  1017,  1021,  1022,  1023,
   nil,  1033,   nil,   162,   nil,   nil,   nil,  1282, 24044,   nil,
   nil,   nil,  4082,  1184,  1324,  1142,  1168,  1074,   nil,   nil,
   nil,  1098,  1099,  1103,  1108,  1113,  3228,  1122,  3266,  4642,
   nil,   nil,   nil,   nil,   nil,  4782,   nil,  4922,   nil, 24957,
   nil, 25013,   nil, 22497,   nil, 24883,   nil,   nil,   nil,  1268,
  1200,  1201,  1287, 20329, 24410, 24593,   725, 24876,   nil,   nil,
   nil,   nil,  3147,  1185,   585,  1329,  1333,  1230,  1235,  1238,
  1239,   nil,   nil,  1246,    -9,    -1,    26,   431,  1263,  1273,
   nil,   nil,   nil, 25030,   nil,   nil,   nil,   nil,    23,   nil,
  1279,   nil ]

racc_action_default = [
    -3,  -595,    -1,  -581,    -4,  -595,    -7,  -595,  -595,  -595,
  -595,   -29,  -595,  -595,  -595,  -279,  -595,   -40,   -43,  -583,
  -595,   -48,   -50,   -51,   -52,   -56,  -256,  -256,  -256,  -293,
  -328,  -329,   -68,   -11,   -72,   -80,   -82,  -595,  -486,  -487,
  -595,  -595,  -595,  -595,  -595,  -583,  -237,  -270,  -271,  -272,
  -273,  -274,  -275,  -276,  -277,  -278,  -571,  -281,  -283,  -594,
  -561,  -301,  -389,  -595,  -595,  -306,  -309,  -581,  -595,  -595,
  -595,  -595,  -330,  -331,  -427,  -428,  -429,  -430,  -431,  -452,
  -434,  -435,  -454,  -456,  -439,  -444,  -448,  -450,  -466,  -454,
  -468,  -470,  -471,  -472,  -473,  -569,  -475,  -476,  -570,  -478,
  -479,  -480,  -481,  -482,  -483,  -484,  -485,  -490,  -491,  -595,
    -2,  -582,  -590,  -591,  -592,    -6,  -595,  -595,  -595,  -595,
  -595,    -3,   -17,  -595,  -111,  -112,  -113,  -114,  -115,  -116,
  -117,  -118,  -119,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,  -188,  -189,
  -190,  -191,  -192,  -193,   -22,  -120,   -11,  -595,  -595,  -246,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -583,  -584,   -47,
  -595,  -486,  -487,  -595,  -279,  -595,  -595,  -229,  -595,   -11,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -595,
  -595,  -595,  -595,  -595,  -595,  -595,  -595,  -396,  -398,  -595,
  -579,  -580,   -57,  -246,  -595,  -300,  -402,  -411,  -413,   -63,
  -408,   -64,  -583,   -65,  -238,  -251,  -260,  -260,  -255,  -595,
  -261,  -595,  -452,  -563,  -595,  -595,   -66,   -67,  -581,   -12,
  -595,   -15,  -595,   -70,   -11,  -583,  -595,   -73,   -76,   -11,
   -88,   -89,  -595,  -595,   -96,  -293,  -296,  -583,  -595,  -328,
  -329,  -332,  -409,  -595,   -78,  -595,   -84,  -290,  -469,  -595,
  -214,  -215,  -230,  -595,   -11,  -595,  -583,  -239,  -587,  -587,
  -595,  -595,  -587,  -595,  -302,  -303,  -519,   -49,  -595,  -595,
  -595,  -595,  -581,  -595,  -582,  -486,  -487,  -595,  -595,  -279,
  -595,  -342,  -343,  -106,  -107,  -595,  -109,  -595,  -279,  -595,
  -595,  -486,  -487,  -321,  -111,  -112,  -153,  -154,  -155,  -171,
  -176,  -183,  -186,  -323,  -595,  -559,  -595,  -432,  -595,  -595,
  -595,  -595,  -595,  -595,  -595,  -595,  1022,    -5,  -593,   -23,
   -24,   -25,   -26,   -27,  -595,  -595,   -19,   -20,   -21,  -121,
  -595,   -30,   -39,  -266,  -595,  -595,  -265,   -31,  -196,  -583,
  -247,  -260,  -260,  -572,  -573,  -256,  -406,  -574,  -575,  -573,
  -572,  -256,  -405,  -407,  -574,  -575,   -37,  -204,   -38,  -595,
   -41,   -42,  -194,  -261,   -44,   -45,   -46,  -583,  -299,  -595,
  -595,  -595,  -246,  -290,  -595,  -595,  -595,  -205,  -206,  -207,
  -208,  -209,  -210,  -211,  -212,  -216,  -217,  -218,  -219,  -220,
  -221,  -222,  -223,  -224,  -225,  -226,  -227,  -228,  -231,  -232,
  -233,  -234,  -583,  -378,  -256,  -572,  -573,   -54,   -58,  -583,
  -257,  -378,  -378,  -583,  -295,  -252,  -595,  -253,  -595,  -258,
  -595,  -262,  -595,  -566,  -568,   -10,  -582,   -14,    -3,  -583,
   -69,  -288,   -85,   -74,  -595,  -583,  -246,  -595,  -595,   -95,
  -595,  -469,  -595,   -81,   -86,  -595,  -595,  -595,  -595,  -235,
  -595,  -419,  -595,  -284,  -595,  -240,  -589,  -588,  -242,  -589,
  -291,  -292,  -562,  -390,  -519,  -393,  -558,  -558,  -502,  -504,
  -504,  -504,  -518,  -520,  -521,  -522,  -523,  -524,  -525,  -526,
  -527,  -595,  -529,  -531,  -533,  -538,  -540,  -541,  -543,  -548,
  -550,  -551,  -553,  -554,  -555,  -595,   -11,  -333,  -334,   -11,
  -595,  -595,  -595,  -595,  -595,  -246,  -595,  -595,  -290,  -314,
  -106,  -107,  -108,  -595,  -595,  -246,  -317,  -492,  -493,  -595,
  -595,   -11,  -497,  -325,  -583,  -433,  -453,  -458,  -595,  -460,
  -436,  -455,  -595,  -457,  -438,  -595,  -441,  -595,  -443,  -446,
  -595,  -447,  -595,  -467,    -8,   -18,  -595,   -28,  -269,  -595,
  -595,  -410,  -595,  -248,  -250,  -595,  -595,   -59,  -245,  -403,
  -595,  -595,   -61,  -404,  -595,  -595,  -298,  -585,  -572,  -573,
  -572,  -573,  -583,  -194,  -595,  -379,  -583,  -381,   -11,   -53,
  -399,  -378,  -243,   -11,   -11,  -294,  -260,  -259,  -263,  -595,
  -564,  -565,  -595,   -13,  -595,   -71,  -595,   -77,   -83,  -583,
  -572,  -573,  -244,   -92,   -94,  -595,   -79,  -595,  -203,  -213,
  -583,  -594,  -594,  -282,  -583,  -287,  -587,  -595,  -583,  -595,
  -500,  -501,  -595,  -595,  -511,  -595,  -514,  -595,  -516,  -595,
  -344,  -595,  -346,  -348,  -355,  -583,  -532,  -542,  -552,  -556,
  -594,  -335,  -594,  -307,  -336,  -337,  -310,  -595,  -313,  -595,
  -583,  -572,  -573,  -576,  -289,  -595,  -106,  -107,  -110,  -583,
   -11,  -595,  -495,  -319,  -595,   -11,  -519,  -519,  -595,  -560,
  -459,  -462,  -463,  -464,  -465,   -11,  -437,  -440,  -442,  -445,
  -449,  -451,  -122,  -267,  -595,  -197,  -595,  -586,  -260,   -33,
  -199,   -34,  -200,   -60,   -35,  -202,   -36,  -201,   -62,  -195,
  -595,  -595,  -595,  -595,  -410,  -595,  -558,  -558,  -360,  -362,
  -362,  -362,  -377,  -595,  -583,  -383,  -527,  -535,  -536,  -546,
  -595,  -401,  -400,   -11,  -595,  -595,  -254,  -264,  -567,   -16,
   -75,   -90,   -87,  -297,  -594,  -340,   -11,  -420,  -594,  -421,
  -422,  -595,  -241,  -391,   -11,   -11,  -595,  -558,  -539,  -557,
  -503,  -504,  -504,  -530,  -504,  -504,  -549,  -504,  -527,  -544,
  -583,  -595,  -353,  -595,  -528,  -595,  -338,  -595,  -595,   -11,
   -11,  -312,  -595,   -11,  -410,  -595,  -410,  -595,  -595,   -11,
  -322,  -595,  -583,  -595,  -326,  -595,  -268,   -32,  -198,  -249,
  -595,  -236,  -595,  -358,  -359,  -368,  -370,  -595,  -373,  -595,
  -375,  -380,  -595,  -595,  -595,  -534,  -595,  -397,  -595,  -412,
  -414,    -9,   -11,  -426,  -341,  -595,  -595,  -424,  -285,  -595,
  -595,  -392,  -499,  -595,  -507,  -595,  -509,  -595,  -512,  -595,
  -515,  -517,  -345,  -347,  -351,  -595,  -356,  -304,  -595,  -305,
  -595,  -595,  -263,  -594,  -315,  -318,  -494,  -595,  -324,  -496,
  -498,  -497,  -461,  -558,  -537,  -361,  -362,  -362,  -362,  -362,
  -547,  -362,  -382,  -583,  -385,  -387,  -388,  -545,  -595,  -290,
   -55,  -425,   -11,   -97,   -98,  -595,  -595,  -105,  -423,  -394,
  -395,  -504,  -504,  -504,  -504,  -349,  -595,  -354,  -595,   -11,
  -308,  -311,  -415,  -416,  -417,   -11,  -320,   -11,  -357,  -595,
  -365,  -595,  -367,  -595,  -371,  -595,  -374,  -376,  -384,  -595,
  -289,  -576,  -419,  -246,  -595,  -595,  -104,  -595,  -505,  -508,
  -510,  -513,  -595,  -352,  -594,  -595,  -595,  -362,  -362,  -362,
  -362,  -386,  -418,  -583,  -572,  -573,  -576,  -103,  -504,  -350,
  -339,  -316,  -327,  -595,  -363,  -366,  -369,  -372,  -410,  -506,
  -362,  -364 ]

clist = [
'216,327,409,26,373,127,127,334,26,522,275,275,275,258,573,6,566,569',
'337,337,6,681,337,26,478,487,323,431,700,415,421,114,26,26,26,2,26,130',
'130,660,297,259,318,582,621,122,205,266,270,311,311,513,132,132,406',
'735,479,542,835,535,428,525,528,111,826,532,26,26,127,314,26,337,337',
'337,337,338,339,13,474,342,660,780,13,311,311,311,378,110,262,269,271',
'657,823,657,903,114,293,705,781,690,691,934,906,276,276,276,379,115',
'713,716,13,783,930,385,26,273,286,287,350,26,26,26,26,26,26,591,6,295',
'389,390,391,392,936,328,648,393,6,804,605,607,359,363,653,654,592,822',
'738,824,921,730,965,343,725,816,840,782,394,341,839,340,487,326,784',
'684,277,277,277,325,838,434,435,436,437,324,957,660,374,933,700,586',
'849,832,533,813,336,687,335,331,13,473,275,481,482,962,329,332,808,13',
'13,601,603,606,606,885,377,601,375,1001,425,26,26,26,26,387,930,26,26',
'26,26,26,26,903,650,380,219,993,381,330,657,657,616,416,26,382,383,642',
'384,740,936,745,667,296,731,717,275,275,651,830,676,872,395,821,402',
'275,352,542,204,688,818,415,421,1009,826,924,823,663,26,26,881,1,,728',
',,,26,734,774,,,523,405,,13,,,,405,510,492,550,,,26,,337,337,26,823',
'669,926,,26,,801,497,13,524,700,,700,,793,311,511,590,114,927,,928,',
'514,,,,,672,26,26,266,311,594,503,270,,,672,,276,863,864,,1010,26,26',
'951,276,,496,,480,,570,571,,844,,293,483,,,,293,26,846,,,13,720,963',
'114,13,495,,823,,13,,729,26,892,955,700,914,967,,,587,499,763,622,593',
'127,505,768,672,438,843,,277,,13,800,672,796,,,277,,,660,401,407,,400',
'847,426,430,,812,851,997,,275,130,748,572,748,,,,,615,700,,700,628,296',
'425,132,,,633,,,26,,,431,,,484,,644,,,,542,542,852,853,416,,,657,,,',
',700,,,,,500,680,,627,,,,,1002,632,,,968,275,550,,,14,,,,628,14,,,26',
',26,296,,,425,796,296,,26,514,220,,6,,425,,,514,311,220,220,220,26,14',
'302,302,311,416,809,,,,664,917,,649,,416,,,,,,,,,,,,,,,,220,220,275',
',220,347,357,357,,942,,,275,,,26,,,26,13,425,13,,,26,,425,,,,964,,959',
',26,,,,,,26,,792,416,714,714,786,,14,,,416,,220,220,220,220,14,14,127',
',,636,732,733,,,656,,622,810,,,785,26,26,,,,26,26,,,26,1018,,791,,,13',
',130,13,550,719,550,622,26,996,752,,,26,26,652,,132,686,655,,,811,,',
'13,785,,854,514,,,,,,665,777,337,311,,802,668,,337,,,,550,550,311,628',
',,633,14,220,220,220,622,,220,220,220,220,220,220,,622,,,,,,,,,,14,',
'817,,,13,,,26,,13,13,,26,26,127,,845,26,,,,787,848,,,883,,26,,887,,',
',220,220,405,,758,26,,,,220,,785,,,,,694,696,698,739,710,,1003,712,',
',,14,,,,14,,,,302,14,,337,,,,26,,,,,,311,672,,,302,13,,26,,778,13,,',
'14,220,26,26,786,,786,13,,,,,,,759,761,220,220,,764,766,,,430,,26,,26',
'26,,,26,550,,908,,220,26,,819,,790,819,,803,,794,795,,,,,220,,,13,,39',
'714,,,916,39,,,,920,,13,834,26,,,,311,,13,13,,,923,,,777,,777,311,777',
',38,39,301,301,,38,,,,,978,,13,13,,,13,,,786,,,13,,,,,,,220,,425,,38',
'300,300,346,362,362,362,,26,,,,,,,,855,,,,,787,13,857,787,26,787,275',
'787,,,26,,26,,345,361,361,361,,,,,,,425,39,622,,26,14,,14,,,39,39,,302',
',220,,,,878,777,302,777,416,777,,777,902,,220,,,884,38,,,,13,,,889,890',
'38,38,,819,779,,778,919,778,,778,,13,,,,,,13,,13,,777,910,911,,,913',
'894,896,,898,900,14,901,,14,,,,,787,220,787,,787,,787,,,,,220,825,39',
'827,,,14,,,,,,,,941,,,,,,,,,,,39,,,,866,868,870,,787,38,,,,,,220,220',
',,,220,220,16,,220,,,16,,,,,38,778,,778,,778,14,778,,,,14,14,,,,,982',
',,,,,16,302,,,,,39,,,,39,994,302,,301,39,,995,,,,,778,,,,988,989,990',
'991,,301,,,,351,,,38,,39,,38,,,,300,38,,,,,,,,,,,,,220,,,300,,14,220',
',,,14,,38,,,,,,16,,14,,,1019,,,,16,16,,,220,,929,,931,970,972,974,976',
',977,,,,,,,,,,,,15,,,,,15,952,,953,875,954,,,,,14,,,,,,,,,,,,,14,,,',
',15,304,304,14,14,,,,,,,,,,,,,,,,,1014,1015,1016,1017,,220,16,14,14',
',,14,,429,349,358,358,14,,,,,,1021,,,,,998,16,999,,1000,,,,,,,,,,937',
',,39,1008,39,,,14,,,301,945,,,15,,,,301,,,,,15,15,,,,,1020,,,,,38,,38',
',,,,,300,,,,,16,,,300,16,,333,,,16,,,,,,,,,,,14,,,,,39,,,39,,,,,,16',
',,14,,,,,,14,,14,,,,,39,,,,,,,38,,,38,220,15,,,,,,,,,,,,,,,,,,,,38,',
',15,,,,,,,,,,,,,,,,,,,,,,39,,,,,39,39,,,,,,,,,,,,301,,,,,,,,,,,301,',
',38,,,,,38,38,15,,,,15,,,403,304,15,,300,,433,,,,,,,,,300,,,304,,,,',
',,,,15,,,,,,,,,39,,,,,39,,,,,,,,,,39,,16,,16,,,,,,,,,,,,,38,,,,489,38',
'491,,,493,494,,,,,38,,,,,,,,,,362,,,,,,39,,,,,,,,,,,,,39,,,,,,,,39,39',
',16,,361,16,,,,,38,,,,,,,,,,,,,38,39,39,,16,39,,,38,38,,39,,,,,,,,,',
',,,,,,,,,,,,38,38,,362,38,,,,,,38,39,,,429,944,,,,,618,,15,,15,,,,16',
',304,,,16,16,361,,,304,,,,,38,,,,943,,,,,,,,,,,,,,,,,,,,,,,,39,,,,,',
',,,,,,,,,,,39,,,,15,,39,15,39,,,,,,658,38,333,,661,,,,16,,,,,16,,15',
',,38,,,,744,16,38,,38,,,,,,,,,,,,,,658,,,333,,,,,,,,,,,,,,,,,,,,,,,',
',706,,,16,15,,,,,15,15,,,,,,16,,,,433,,304,,16,16,,,,,,,227,304,,,,',
',,,274,274,274,,,,,,16,16,,,16,320,321,322,,,16,,,,,,753,,,,658,333',
'274,274,,,,,,,,,,,,,,15,,,,,15,16,,,,948,,,,,15,,,,797,,,798,,,,,,,',
',,,,,,,,,,,,807,,,,,,,,,,,,,,,358,,829,,,,15,,,16,,,,,,,,,,15,,,,,,',
'16,15,15,,,,16,,16,,,,,,,,,,,,,,,,,,15,15,,,15,856,,,,,15,,,,,,,,,,',
',,,274,408,274,,,427,432,,,,,358,,,,,,,,15,,227,,947,447,448,449,450',
'451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467',
'468,469,470,471,472,,,,,,,274,274,,,,,,,,274,,,,912,,,274,,274,,,274',
'274,15,,,,,,,333,,,,,,,,,,15,,,,,,15,,15,,,,,,,,,,,,519,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,427,643,408,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,274,,274,,,,,,,,,,,,,,,,274,,,,,,',
',,678,679,,,,,,,,,,274,,,274,,,,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,',
',,,,,,,,274,274,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,755',
',,274,274,760,762,,,,765,767,,,643,769,,,,,,,,,,,,,,,,,,,,,,,,274,,',
'274,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,858,,,,,,,,,,,,,,760,762,767,765',
',861,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,274,,,,,,,,,,,,,,,,,274,858,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,274' ]
        racc_goto_table = arr = ::Array.new(2909, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'31,67,23,41,56,57,57,86,41,8,33,33,33,138,92,7,89,89,29,29,7,10,29,41',
'39,73,31,18,115,37,37,95,41,41,41,2,41,60,60,176,49,36,63,54,24,15,15',
'71,71,64,64,51,61,61,27,96,23,161,90,137,27,69,69,6,172,69,41,41,57',
'50,41,29,29,29,29,17,17,21,37,17,176,126,21,64,64,64,149,4,38,38,38',
'74,167,74,114,95,45,116,127,121,121,131,117,68,68,68,150,5,91,91,21',
'129,173,150,41,44,44,44,93,41,41,41,41,41,41,110,7,46,17,17,17,17,132',
'68,40,7,7,11,153,153,55,55,40,40,111,127,112,127,113,108,107,4,106,129',
'105,118,2,104,103,102,73,101,124,100,70,70,70,99,11,29,29,29,29,98,117',
'176,97,130,115,94,109,115,133,134,135,136,88,85,21,139,33,141,142,143',
'70,70,144,21,21,154,154,154,154,145,148,154,84,131,57,41,41,41,41,5',
'173,41,41,41,41,41,41,114,72,151,20,117,152,66,74,74,62,71,41,155,156',
'23,157,158,132,159,51,9,160,92,33,33,42,116,51,129,30,165,28,33,19,161',
'16,137,169,37,37,117,172,170,167,14,41,41,12,1,,54,,,,41,8,24,,,29,68',
',21,,,,68,31,149,166,,,41,,29,29,41,167,23,126,,41,,24,7,21,31,115,',
'115,,40,64,63,29,95,127,,127,,49,,,,,37,41,41,71,64,29,50,71,,,37,,68',
'121,121,,90,41,41,127,68,,6,,44,,17,17,,24,,45,44,,,,45,41,24,,,21,23',
'11,95,21,4,,167,,21,,23,41,121,115,115,91,96,,,95,46,39,31,36,57,46',
'39,37,47,89,,70,,21,51,37,73,,,70,,,176,20,20,,9,8,20,20,,69,8,127,',
'33,60,154,4,154,,,,,15,115,,115,71,9,57,61,,,71,,,41,,,18,,,47,,31,',
',,161,161,137,137,71,,,74,,,,,115,,,,,47,29,,38,,,,,10,38,,,121,33,166',
',,22,,,,71,22,,,41,,41,9,,,57,73,9,,41,49,22,,7,,57,,,49,64,22,22,22',
'41,22,22,22,64,71,27,,,,2,8,,38,,71,,,,,,,,,,,,,,,,22,22,33,,22,22,22',
'22,,89,,,33,,,41,,,41,21,57,21,,,41,,57,,,,92,,89,,41,,,,,,41,,86,71',
'95,95,166,,22,,,71,,22,22,22,22,22,22,57,,,47,95,95,,,70,,31,67,,,31',
'41,41,,,,41,41,,,41,24,,138,,,21,,60,21,166,68,166,31,41,8,15,,,41,41',
'47,,61,70,47,,,31,,,21,31,,56,49,,,,,,47,120,29,64,,49,47,,29,,,,166',
'166,64,71,,,71,22,22,22,22,31,,22,22,22,22,22,22,,31,,,,,,,,,,22,,120',
',,21,,,41,,21,21,,41,41,57,,17,41,,,,168,17,,,67,,41,,67,,,,22,22,68',
',70,41,,,,22,,31,,,,,164,164,164,47,9,,23,9,,,,22,,,,22,,,,22,22,,29',
',,,41,,,,,,64,37,,,22,21,,41,,122,21,,,22,22,41,41,166,,166,21,,,,,',
',20,20,22,22,,20,20,,,20,,41,,41,41,,,41,166,,17,,22,41,,122,,9,122',
',47,,9,9,,,,,22,,,21,,53,95,,,95,53,,,,95,,21,47,41,,,,64,,21,21,,,120',
',,120,,120,64,120,,52,53,53,53,,52,,,,,31,,21,21,,,21,,,166,,,21,,,',
',,,22,,57,,52,52,52,53,53,53,53,,41,,,,,,,,9,,,,,168,21,20,168,41,168',
'33,168,,,41,,41,,52,52,52,52,,,,,,,57,53,31,,41,22,,22,,,53,53,,22,',
'22,,,,9,120,22,120,71,120,,120,47,,22,,,9,52,,,,21,,,9,9,52,52,,122',
'125,,122,47,122,,122,,21,,,,,,21,,21,,120,9,9,,,9,164,164,,164,164,22',
'164,,22,,,,,168,22,168,,168,,168,,,,,22,125,53,125,,,22,,,,,,,,9,,,',
',,,,,,,53,,,,123,123,123,,168,52,,,,,,22,22,,,,22,22,26,,22,,,26,,,',
',52,122,,122,,122,22,122,,,,22,22,,,,,9,,,,,,26,22,,,,,53,,,,53,9,22',
',53,53,,9,,,,,122,,,,164,164,164,164,,53,,,,26,,,52,,53,,52,,,,52,52',
',,,,,,,,,,,,22,,,52,,22,22,,,,22,,52,,,,,,26,,22,,,164,,,,26,26,,,22',
',125,,125,123,123,123,123,,123,,,,,,,,,,,,25,,,,,25,125,,125,22,125',
',,,,22,,,,,,,,,,,,,22,,,,,25,25,25,22,22,,,,,,,,,,,,,,,,,123,123,123',
'123,,22,26,22,22,,,22,,26,25,25,25,22,,,,,,123,,,,,125,26,125,,125,',
',,,,,,,,22,,,53,125,53,,,22,,,53,22,,,25,,,,53,,,,,25,25,,,,,125,,,',
',52,,52,,,,,,52,,,,,26,,,52,26,,65,,,26,,,,,,,,,,,22,,,,,53,,,53,,,',
',,26,,,22,,,,,,22,,22,,,,,53,,,,,,,52,,,52,22,25,,,,,,,,,,,,,,,,,,,',
'52,,,25,,,,,,,,,,,,,,,,,,,,,,53,,,,,53,53,,,,,,,,,,,,53,,,,,,,,,,,53',
',,52,,,,,52,52,25,,,,25,,,65,25,25,,52,,65,,,,,,,,,52,,,25,,,,,,,,,25',
',,,,,,,,53,,,,,53,,,,,,,,,,53,,26,,26,,,,,,,,,,,,,52,,,,65,52,65,,,65',
'65,,,,,52,,,,,,,,,,53,,,,,,53,,,,,,,,,,,,,53,,,,,,,,53,53,,26,,52,26',
',,,,52,,,,,,,,,,,,,52,53,53,,26,53,,,52,52,,53,,,,,,,,,,,,,,,,,,,,,',
'52,52,,53,52,,,,,,52,53,,,26,53,,,,,65,,25,,25,,,,26,,25,,,26,26,52',
',,25,,,,,52,,,,52,,,,,,,,,,,,,,,,,,,,,,,,53,,,,,,,,,,,,,,,,,53,,,,25',
',53,25,53,,,,,,65,52,65,,65,,,,26,,,,,26,,25,,,52,,,,25,26,52,,52,,',
',,,,,,,,,,,65,,,65,,,,,,,,,,,,,,,,,,,,,,,,,65,,,26,25,,,,,25,25,,,,',
',26,,,,65,,25,,26,26,,,,,,,32,25,,,,,,,,32,32,32,,,,,,26,26,,,26,32',
'32,32,,,26,,,,,,65,,,,65,65,32,32,,,,,,,,,,,,,,25,,,,,25,26,,,,26,,',
',,25,,,,65,,,65,,,,,,,,,,,,,,,,,,,,65,,,,,,,,,,,,,,,25,,65,,,,25,,,26',
',,,,,,,,,25,,,,,,,26,25,25,,,,26,,26,,,,,,,,,,,,,,,,,,25,25,,,25,65',
',,,,25,,,,,,,,,,,,,,32,32,32,,,32,32,,,,,25,,,,,,,,25,,32,,25,32,32',
'32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
'32,,,,,,,32,32,,,,,,,,32,,,,65,,,32,,32,,,32,32,25,,,,,,,65,,,,,,,,',
',25,,,,,,25,,25,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,32,,32,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32',
',32,,32,,,,,,,,,,,,,,,,32,,,,,,,,,32,32,,,,,,,,,,32,,,32,,,,,,,,,,,',
',,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,32,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,32,32,,,32,32,32,32,,,,32,32,,,32,32,,,,,,,,,,,,,',
',,,,,,,,,,32,,,32,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,32,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,,,,,,,,,,,,,,32',
'32,32,32,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,32,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,32' ]
        racc_goto_check = arr = ::Array.new(2909, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   269,    35,   nil,    84,   102,    60,    15,  -315,   208,
  -500,  -544,  -536,   nil,  -231,    37,   247,    12,  -186,   186,
   204,    77,   491,  -207,  -365,  1269,  1123,  -153,    45,   -45,
   128,   -19,  1925,   -19,   nil,   nil,    17,  -181,    62,  -238,
  -339,     3,  -231,   nil,    86,    63,    94,   179,   nil,     6,
    34,  -264,   904,   872,  -312,    71,   -67,    -3,   nil,   nil,
    29,    44,  -169,     1,    15,  1359,   168,   -58,    74,  -267,
   135,    21,  -252,  -252,  -395,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   135,   127,   -54,   nil,   124,  -322,
  -652,  -462,  -329,    50,  -180,    28,  -537,   105,   116,   109,
  -360,   103,    94,  -555,    91,  -562,  -427,  -764,  -437,  -553,
  -238,  -229,  -447,  -706,  -737,  -523,  -454,  -731,  -491,   nil,
    33,  -437,   165,   326,  -484,   382,  -565,  -548,   nil,  -535,
  -696,  -772,  -741,  -154,  -504,   122,  -348,  -277,    -9,   -68,
   nil,   -76,   -76,  -720,  -486,  -605,   nil,   nil,   127,     7,
    24,   140,   142,  -243,  -180,   148,   148,   149,  -361,  -360,
  -346,  -279,   nil,   nil,   231,  -442,   -46,  -601,    96,  -431,
  -599,   nil,  -631,  -755,   nil,   nil,  -449 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   344,   291,   nil,   521,
   nil,   836,   nil,   288,   289,   nil,   nil,   nil,    11,    12,
    18,   226,   319,   nil,   nil,   224,   225,   nil,   nil,    17,
   nil,   439,    21,    22,    23,    24,   nil,   675,   nil,   nil,
   nil,   308,   nil,    25,   410,    32,   nil,   nil,    34,    37,
    36,   nil,   221,   222,   356,   nil,   129,   418,   128,   131,
    75,    76,   nil,    90,    46,   280,   nil,   805,   411,   nil,
   412,   423,   629,   485,   278,   264,    47,    48,    49,    50,
    51,    52,    53,    54,    55,   nil,   265,    61,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   567,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   702,   549,   nil,   703,   925,   776,
   537,   nil,   538,   nil,   nil,   539,   nil,   541,   645,   nil,
   nil,   nil,   547,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   422,   nil,   nil,   nil,   nil,   nil,    74,    77,    78,   nil,
   nil,   nil,   nil,   nil,   596,   nil,   nil,   nil,   nil,   nil,
   nil,   820,   737,   536,   nil,   540,   828,   552,   554,   555,
   788,   558,   559,   789,   562,   565,   283 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 145, :_reduce_none,
  2, 146, :_reduce_2,
  0, 147, :_reduce_3,
  1, 147, :_reduce_4,
  3, 147, :_reduce_5,
  2, 147, :_reduce_6,
  1, 149, :_reduce_none,
  4, 149, :_reduce_8,
  4, 152, :_reduce_9,
  2, 153, :_reduce_10,
  0, 157, :_reduce_11,
  1, 157, :_reduce_12,
  3, 157, :_reduce_13,
  2, 157, :_reduce_14,
  1, 158, :_reduce_none,
  4, 158, :_reduce_16,
  0, 174, :_reduce_17,
  4, 151, :_reduce_18,
  3, 151, :_reduce_19,
  3, 151, :_reduce_20,
  3, 151, :_reduce_21,
  2, 151, :_reduce_22,
  3, 151, :_reduce_23,
  3, 151, :_reduce_24,
  3, 151, :_reduce_25,
  3, 151, :_reduce_26,
  3, 151, :_reduce_27,
  4, 151, :_reduce_28,
  1, 151, :_reduce_none,
  3, 151, :_reduce_30,
  3, 151, :_reduce_31,
  6, 151, :_reduce_32,
  5, 151, :_reduce_33,
  5, 151, :_reduce_34,
  5, 151, :_reduce_35,
  5, 151, :_reduce_36,
  3, 151, :_reduce_37,
  3, 151, :_reduce_38,
  3, 151, :_reduce_39,
  1, 151, :_reduce_none,
  3, 162, :_reduce_41,
  3, 162, :_reduce_42,
  1, 173, :_reduce_none,
  3, 173, :_reduce_44,
  3, 173, :_reduce_45,
  3, 173, :_reduce_46,
  2, 173, :_reduce_47,
  1, 173, :_reduce_none,
  1, 161, :_reduce_none,
  1, 164, :_reduce_none,
  1, 164, :_reduce_none,
  1, 178, :_reduce_none,
  4, 178, :_reduce_53,
  0, 186, :_reduce_54,
  5, 183, :_reduce_55,
  1, 185, :_reduce_none,
  2, 177, :_reduce_57,
  3, 177, :_reduce_58,
  4, 177, :_reduce_59,
  5, 177, :_reduce_60,
  4, 177, :_reduce_61,
  5, 177, :_reduce_62,
  2, 177, :_reduce_63,
  2, 177, :_reduce_64,
  2, 177, :_reduce_65,
  2, 177, :_reduce_66,
  2, 177, :_reduce_67,
  1, 163, :_reduce_68,
  3, 163, :_reduce_69,
  1, 190, :_reduce_70,
  3, 190, :_reduce_71,
  1, 189, :_reduce_none,
  2, 189, :_reduce_73,
  3, 189, :_reduce_74,
  5, 189, :_reduce_75,
  2, 189, :_reduce_76,
  4, 189, :_reduce_77,
  2, 189, :_reduce_78,
  4, 189, :_reduce_79,
  1, 189, :_reduce_80,
  3, 189, :_reduce_81,
  1, 193, :_reduce_none,
  3, 193, :_reduce_83,
  2, 192, :_reduce_84,
  3, 192, :_reduce_85,
  1, 195, :_reduce_86,
  3, 195, :_reduce_87,
  1, 194, :_reduce_88,
  1, 194, :_reduce_89,
  4, 194, :_reduce_90,
  3, 194, :_reduce_91,
  3, 194, :_reduce_92,
  3, 194, :_reduce_93,
  3, 194, :_reduce_94,
  2, 194, :_reduce_95,
  1, 194, :_reduce_96,
  1, 170, :_reduce_97,
  1, 170, :_reduce_98,
  4, 170, :_reduce_99,
  3, 170, :_reduce_100,
  3, 170, :_reduce_101,
  3, 170, :_reduce_102,
  3, 170, :_reduce_103,
  2, 170, :_reduce_104,
  1, 170, :_reduce_105,
  1, 198, :_reduce_106,
  1, 198, :_reduce_none,
  2, 199, :_reduce_108,
  1, 199, :_reduce_109,
  3, 199, :_reduce_110,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 203, :_reduce_116,
  1, 203, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 160, :_reduce_120,
  0, 206, :_reduce_121,
  4, 160, :_reduce_122,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  3, 176, :_reduce_194,
  5, 176, :_reduce_195,
  3, 176, :_reduce_196,
  5, 176, :_reduce_197,
  6, 176, :_reduce_198,
  5, 176, :_reduce_199,
  5, 176, :_reduce_200,
  5, 176, :_reduce_201,
  5, 176, :_reduce_202,
  4, 176, :_reduce_203,
  3, 176, :_reduce_204,
  3, 176, :_reduce_205,
  3, 176, :_reduce_206,
  3, 176, :_reduce_207,
  3, 176, :_reduce_208,
  3, 176, :_reduce_209,
  3, 176, :_reduce_210,
  3, 176, :_reduce_211,
  3, 176, :_reduce_212,
  4, 176, :_reduce_213,
  2, 176, :_reduce_214,
  2, 176, :_reduce_215,
  3, 176, :_reduce_216,
  3, 176, :_reduce_217,
  3, 176, :_reduce_218,
  3, 176, :_reduce_219,
  3, 176, :_reduce_220,
  3, 176, :_reduce_221,
  3, 176, :_reduce_222,
  3, 176, :_reduce_223,
  3, 176, :_reduce_224,
  3, 176, :_reduce_225,
  3, 176, :_reduce_226,
  3, 176, :_reduce_227,
  3, 176, :_reduce_228,
  2, 176, :_reduce_229,
  2, 176, :_reduce_230,
  3, 176, :_reduce_231,
  3, 176, :_reduce_232,
  3, 176, :_reduce_233,
  3, 176, :_reduce_234,
  3, 176, :_reduce_235,
  6, 176, :_reduce_236,
  1, 176, :_reduce_none,
  1, 209, :_reduce_none,
  1, 210, :_reduce_none,
  2, 210, :_reduce_none,
  4, 210, :_reduce_241,
  2, 210, :_reduce_242,
  3, 215, :_reduce_243,
  0, 216, :_reduce_244,
  1, 216, :_reduce_none,
  0, 167, :_reduce_246,
  1, 167, :_reduce_none,
  2, 167, :_reduce_none,
  4, 167, :_reduce_249,
  2, 167, :_reduce_250,
  1, 188, :_reduce_251,
  2, 188, :_reduce_252,
  2, 188, :_reduce_253,
  4, 188, :_reduce_254,
  1, 188, :_reduce_255,
  0, 219, :_reduce_256,
  2, 182, :_reduce_257,
  2, 218, :_reduce_258,
  2, 217, :_reduce_259,
  0, 217, :_reduce_260,
  1, 212, :_reduce_261,
  2, 212, :_reduce_262,
  3, 212, :_reduce_263,
  4, 212, :_reduce_264,
  1, 172, :_reduce_265,
  1, 172, :_reduce_none,
  3, 171, :_reduce_267,
  4, 171, :_reduce_268,
  2, 171, :_reduce_269,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_280,
  0, 242, :_reduce_281,
  4, 208, :_reduce_282,
  0, 243, :_reduce_283,
  0, 244, :_reduce_284,
  6, 208, :_reduce_285,
  0, 245, :_reduce_286,
  4, 208, :_reduce_287,
  3, 208, :_reduce_288,
  3, 208, :_reduce_289,
  2, 208, :_reduce_290,
  3, 208, :_reduce_291,
  3, 208, :_reduce_292,
  1, 208, :_reduce_293,
  4, 208, :_reduce_294,
  3, 208, :_reduce_295,
  1, 208, :_reduce_296,
  5, 208, :_reduce_297,
  4, 208, :_reduce_298,
  3, 208, :_reduce_299,
  2, 208, :_reduce_300,
  1, 208, :_reduce_none,
  2, 208, :_reduce_302,
  2, 208, :_reduce_303,
  6, 208, :_reduce_304,
  6, 208, :_reduce_305,
  0, 246, :_reduce_306,
  0, 247, :_reduce_307,
  7, 208, :_reduce_308,
  0, 248, :_reduce_309,
  0, 249, :_reduce_310,
  7, 208, :_reduce_311,
  5, 208, :_reduce_312,
  4, 208, :_reduce_313,
  0, 250, :_reduce_314,
  0, 251, :_reduce_315,
  9, 208, :_reduce_316,
  0, 252, :_reduce_317,
  6, 208, :_reduce_318,
  0, 253, :_reduce_319,
  7, 208, :_reduce_320,
  0, 254, :_reduce_321,
  5, 208, :_reduce_322,
  0, 255, :_reduce_323,
  6, 208, :_reduce_324,
  0, 256, :_reduce_325,
  0, 257, :_reduce_326,
  9, 208, :_reduce_327,
  1, 208, :_reduce_328,
  1, 208, :_reduce_329,
  1, 208, :_reduce_330,
  1, 208, :_reduce_331,
  1, 166, :_reduce_none,
  1, 233, :_reduce_none,
  1, 233, :_reduce_none,
  2, 233, :_reduce_335,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  1, 234, :_reduce_none,
  5, 234, :_reduce_339,
  1, 155, :_reduce_none,
  2, 155, :_reduce_341,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  1, 258, :_reduce_344,
  3, 258, :_reduce_345,
  1, 261, :_reduce_346,
  3, 261, :_reduce_347,
  1, 260, :_reduce_none,
  4, 260, :_reduce_349,
  6, 260, :_reduce_350,
  3, 260, :_reduce_351,
  5, 260, :_reduce_352,
  2, 260, :_reduce_353,
  4, 260, :_reduce_354,
  1, 260, :_reduce_355,
  3, 260, :_reduce_356,
  4, 262, :_reduce_357,
  2, 262, :_reduce_358,
  2, 262, :_reduce_359,
  1, 262, :_reduce_360,
  2, 267, :_reduce_361,
  0, 267, :_reduce_362,
  6, 268, :_reduce_363,
  8, 268, :_reduce_364,
  4, 268, :_reduce_365,
  6, 268, :_reduce_366,
  4, 268, :_reduce_367,
  2, 268, :_reduce_none,
  6, 268, :_reduce_369,
  2, 268, :_reduce_370,
  4, 268, :_reduce_371,
  6, 268, :_reduce_372,
  2, 268, :_reduce_373,
  4, 268, :_reduce_374,
  2, 268, :_reduce_375,
  4, 268, :_reduce_376,
  1, 268, :_reduce_none,
  0, 184, :_reduce_378,
  1, 184, :_reduce_379,
  3, 272, :_reduce_380,
  1, 272, :_reduce_381,
  4, 272, :_reduce_382,
  1, 273, :_reduce_383,
  4, 273, :_reduce_384,
  1, 274, :_reduce_385,
  3, 274, :_reduce_386,
  1, 275, :_reduce_387,
  1, 275, :_reduce_none,
  0, 279, :_reduce_389,
  0, 280, :_reduce_390,
  4, 232, :_reduce_391,
  4, 277, :_reduce_392,
  1, 277, :_reduce_393,
  3, 278, :_reduce_394,
  3, 278, :_reduce_395,
  0, 283, :_reduce_396,
  5, 282, :_reduce_397,
  2, 179, :_reduce_398,
  4, 179, :_reduce_399,
  5, 179, :_reduce_400,
  5, 179, :_reduce_401,
  2, 231, :_reduce_402,
  4, 231, :_reduce_403,
  4, 231, :_reduce_404,
  3, 231, :_reduce_405,
  3, 231, :_reduce_406,
  3, 231, :_reduce_407,
  2, 231, :_reduce_408,
  1, 231, :_reduce_409,
  4, 231, :_reduce_410,
  0, 285, :_reduce_411,
  5, 230, :_reduce_412,
  0, 286, :_reduce_413,
  5, 230, :_reduce_414,
  5, 236, :_reduce_415,
  1, 287, :_reduce_416,
  1, 287, :_reduce_none,
  6, 154, :_reduce_418,
  0, 154, :_reduce_419,
  1, 288, :_reduce_420,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  2, 289, :_reduce_423,
  1, 289, :_reduce_none,
  2, 156, :_reduce_425,
  1, 156, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 221, :_reduce_430,
  1, 291, :_reduce_431,
  2, 291, :_reduce_432,
  3, 292, :_reduce_433,
  1, 292, :_reduce_434,
  1, 292, :_reduce_435,
  3, 222, :_reduce_436,
  4, 223, :_reduce_437,
  3, 224, :_reduce_438,
  0, 296, :_reduce_439,
  3, 296, :_reduce_440,
  1, 297, :_reduce_441,
  2, 297, :_reduce_442,
  3, 226, :_reduce_443,
  0, 299, :_reduce_444,
  3, 299, :_reduce_445,
  3, 225, :_reduce_446,
  3, 227, :_reduce_447,
  0, 300, :_reduce_448,
  3, 300, :_reduce_449,
  0, 301, :_reduce_450,
  3, 301, :_reduce_451,
  0, 293, :_reduce_452,
  2, 293, :_reduce_453,
  0, 294, :_reduce_454,
  2, 294, :_reduce_455,
  0, 295, :_reduce_456,
  2, 295, :_reduce_457,
  1, 298, :_reduce_458,
  2, 298, :_reduce_459,
  0, 303, :_reduce_460,
  4, 298, :_reduce_461,
  1, 302, :_reduce_462,
  1, 302, :_reduce_463,
  1, 302, :_reduce_464,
  1, 302, :_reduce_none,
  1, 204, :_reduce_466,
  3, 205, :_reduce_467,
  1, 290, :_reduce_468,
  2, 290, :_reduce_469,
  1, 207, :_reduce_470,
  1, 207, :_reduce_471,
  1, 207, :_reduce_472,
  1, 207, :_reduce_473,
  1, 196, :_reduce_474,
  1, 196, :_reduce_475,
  1, 196, :_reduce_476,
  1, 196, :_reduce_477,
  1, 196, :_reduce_478,
  1, 197, :_reduce_479,
  1, 197, :_reduce_480,
  1, 197, :_reduce_481,
  1, 197, :_reduce_482,
  1, 197, :_reduce_483,
  1, 197, :_reduce_484,
  1, 197, :_reduce_485,
  1, 228, :_reduce_486,
  1, 228, :_reduce_487,
  1, 165, :_reduce_488,
  1, 165, :_reduce_489,
  1, 169, :_reduce_490,
  1, 169, :_reduce_491,
  1, 238, :_reduce_492,
  0, 304, :_reduce_493,
  4, 238, :_reduce_494,
  2, 238, :_reduce_495,
  3, 240, :_reduce_496,
  0, 306, :_reduce_497,
  3, 240, :_reduce_498,
  4, 305, :_reduce_499,
  2, 305, :_reduce_500,
  2, 305, :_reduce_501,
  1, 305, :_reduce_502,
  2, 308, :_reduce_503,
  0, 308, :_reduce_504,
  6, 281, :_reduce_505,
  8, 281, :_reduce_506,
  4, 281, :_reduce_507,
  6, 281, :_reduce_508,
  4, 281, :_reduce_509,
  6, 281, :_reduce_510,
  2, 281, :_reduce_511,
  4, 281, :_reduce_512,
  6, 281, :_reduce_513,
  2, 281, :_reduce_514,
  4, 281, :_reduce_515,
  2, 281, :_reduce_516,
  4, 281, :_reduce_517,
  1, 281, :_reduce_518,
  0, 281, :_reduce_519,
  1, 276, :_reduce_520,
  1, 276, :_reduce_521,
  1, 276, :_reduce_522,
  1, 276, :_reduce_523,
  1, 259, :_reduce_none,
  1, 259, :_reduce_525,
  1, 310, :_reduce_526,
  1, 311, :_reduce_527,
  3, 311, :_reduce_528,
  1, 269, :_reduce_529,
  3, 269, :_reduce_530,
  1, 312, :_reduce_531,
  2, 313, :_reduce_532,
  1, 313, :_reduce_533,
  2, 314, :_reduce_534,
  1, 314, :_reduce_535,
  1, 263, :_reduce_536,
  3, 263, :_reduce_537,
  1, 307, :_reduce_538,
  3, 307, :_reduce_539,
  1, 315, :_reduce_none,
  1, 315, :_reduce_none,
  2, 264, :_reduce_542,
  1, 264, :_reduce_543,
  3, 316, :_reduce_544,
  3, 317, :_reduce_545,
  1, 270, :_reduce_546,
  3, 270, :_reduce_547,
  1, 309, :_reduce_548,
  3, 309, :_reduce_549,
  1, 318, :_reduce_none,
  1, 318, :_reduce_none,
  2, 271, :_reduce_552,
  1, 271, :_reduce_553,
  1, 319, :_reduce_none,
  1, 319, :_reduce_none,
  2, 266, :_reduce_556,
  2, 265, :_reduce_557,
  0, 265, :_reduce_558,
  1, 241, :_reduce_none,
  3, 241, :_reduce_560,
  0, 229, :_reduce_561,
  2, 229, :_reduce_none,
  1, 214, :_reduce_563,
  3, 214, :_reduce_564,
  3, 320, :_reduce_565,
  2, 320, :_reduce_566,
  4, 320, :_reduce_567,
  2, 320, :_reduce_568,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  0, 148, :_reduce_none,
  1, 148, :_reduce_none,
  0, 175, :_reduce_none,
  1, 175, :_reduce_none,
  2, 191, :_reduce_585,
  2, 168, :_reduce_586,
  0, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 239, :_reduce_590,
  1, 239, :_reduce_none,
  1, 150, :_reduce_none,
  2, 150, :_reduce_none,
  0, 211, :_reduce_594 ]

racc_reduce_n = 595

racc_shift_n = 1022

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tRATIONAL => 139,
  :tIMAGINARY => 140,
  :tLABEL_END => 141,
  :tEQL => 142,
  :tLOWEST => 143 }

racc_nt_base = 144

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tRATIONAL",
  "tIMAGINARY",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "mrhs_arg",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "simple_numeric",
  "primary",
  "arg_value",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@21",
  "@22",
  "f_args",
  "do_block",
  "@23",
  "operation3",
  "@24",
  "@25",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@26",
  "@27",
  "args_tail",
  "@28",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_asgn",
  "f_arg_item",
  "f_label",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby22.y', 52)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 57)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 61)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 65)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 69)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby22.y', 75)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 80)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 96)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 101)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 105)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 109)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 113)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby22.y', 119)
  def _reduce_16(val, _values, result)
                          diagnostic :error, :begin_in_method, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 124)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 128)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 132)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 138)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 144)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 148)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 152)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 157)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 162)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 166)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 170)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 178)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby22.y', 183)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 187)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 191)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 198)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 205)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 212)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 219)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 226)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 230)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 235)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'ruby22.y', 241)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 245)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby22.y', 251)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 255)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 259)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 263)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'ruby22.y', 275)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 281)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 285)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby22.y', 294)
  def _reduce_57(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 299)
  def _reduce_58(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 308)
  def _reduce_59(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 313)
  def _reduce_60(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 322)
  def _reduce_61(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 327)
  def _reduce_62(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 336)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 341)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 346)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 351)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 356)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 362)
  def _reduce_68(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 366)
  def _reduce_69(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 371)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 375)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ruby22.y', 381)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 386)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 391)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 397)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 402)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 408)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 412)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 417)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 421)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 82 omitted

module_eval(<<'.,.,', 'ruby22.y', 428)
  def _reduce_83(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 433)
  def _reduce_84(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 437)
  def _reduce_85(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 442)
  def _reduce_86(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 446)
  def _reduce_87(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 451)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 455)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 459)
  def _reduce_90(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 463)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 467)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 471)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 475)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 480)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 485)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 490)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 494)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 498)
  def _reduce_99(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 502)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 506)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 510)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 514)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 519)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 524)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 529)
  def _reduce_106(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'ruby22.y', 535)
  def _reduce_108(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 539)
  def _reduce_109(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 543)
  def _reduce_110(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'ruby22.y', 552)
  def _reduce_116(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'ruby22.y', 561)
  def _reduce_120(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 565)
  def _reduce_121(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 569)
  def _reduce_122(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

module_eval(<<'.,.,', 'ruby22.y', 590)
  def _reduce_194(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 594)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 604)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 608)
  def _reduce_197(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 618)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 625)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 632)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 639)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 646)
  def _reduce_202(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 652)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 658)
  def _reduce_204(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 662)
  def _reduce_205(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 666)
  def _reduce_206(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 670)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 674)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 678)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 682)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 686)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 690)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 694)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    val[1], val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 700)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 704)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 708)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 712)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 716)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 720)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 724)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 728)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 732)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 736)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 740)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 744)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 748)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 752)
  def _reduce_227(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 756)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 760)
  def _reduce_229(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 764)
  def _reduce_230(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 768)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 772)
  def _reduce_232(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 776)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 780)
  def _reduce_234(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 784)
  def _reduce_235(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 788)
  def _reduce_236(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

# reduce 240 omitted

module_eval(<<'.,.,', 'ruby22.y', 799)
  def _reduce_241(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 803)
  def _reduce_242(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 808)
  def _reduce_243(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 813)
  def _reduce_244(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 245 omitted

module_eval(<<'.,.,', 'ruby22.y', 819)
  def _reduce_246(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 247 omitted

# reduce 248 omitted

module_eval(<<'.,.,', 'ruby22.y', 825)
  def _reduce_249(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 829)
  def _reduce_250(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 834)
  def _reduce_251(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 838)
  def _reduce_252(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 842)
  def _reduce_253(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 847)
  def _reduce_254(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 853)
  def _reduce_255(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 857)
  def _reduce_256(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 862)
  def _reduce_257(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 869)
  def _reduce_258(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 874)
  def _reduce_259(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 878)
  def _reduce_260(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 883)
  def _reduce_261(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 887)
  def _reduce_262(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 891)
  def _reduce_263(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 895)
  def _reduce_264(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 900)
  def _reduce_265(val, _values, result)
                          result = @builder.array(nil, val[0], nil)
                    
    result
  end
.,.,

# reduce 266 omitted

module_eval(<<'.,.,', 'ruby22.y', 906)
  def _reduce_267(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 910)
  def _reduce_268(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 914)
  def _reduce_269(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

module_eval(<<'.,.,', 'ruby22.y', 929)
  def _reduce_280(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 933)
  def _reduce_281(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 938)
  def _reduce_282(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 944)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 949)
  def _reduce_284(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 953)
  def _reduce_285(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 959)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 963)
  def _reduce_287(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 967)
  def _reduce_288(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 971)
  def _reduce_289(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 975)
  def _reduce_290(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 979)
  def _reduce_291(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 983)
  def _reduce_292(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 987)
  def _reduce_293(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 991)
  def _reduce_294(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 995)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 999)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1003)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1008)
  def _reduce_298(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1012)
  def _reduce_299(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1016)
  def _reduce_300(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 301 omitted

module_eval(<<'.,.,', 'ruby22.y', 1025)
  def _reduce_302(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1031)
  def _reduce_303(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1039)
  def _reduce_304(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1046)
  def _reduce_305(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1053)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1057)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1061)
  def _reduce_308(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1066)
  def _reduce_309(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1070)
  def _reduce_310(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1074)
  def _reduce_311(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1079)
  def _reduce_312(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1087)
  def _reduce_313(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1095)
  def _reduce_314(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1099)
  def _reduce_315(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1103)
  def _reduce_316(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1109)
  def _reduce_317(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1114)
  def _reduce_318(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1128)
  def _reduce_319(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1136)
  def _reduce_320(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1146)
  def _reduce_321(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1151)
  def _reduce_322(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1163)
  def _reduce_323(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1169)
  def _reduce_324(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1178)
  def _reduce_325(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1182)
  def _reduce_326(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1188)
  def _reduce_327(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1197)
  def _reduce_328(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1201)
  def _reduce_329(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1205)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1209)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 332 omitted

# reduce 333 omitted

# reduce 334 omitted

module_eval(<<'.,.,', 'ruby22.y', 1218)
  def _reduce_335(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

module_eval(<<'.,.,', 'ruby22.y', 1227)
  def _reduce_339(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby22.y', 1238)
  def _reduce_341(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 342 omitted

# reduce 343 omitted

module_eval(<<'.,.,', 'ruby22.y', 1246)
  def _reduce_344(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1250)
  def _reduce_345(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1255)
  def _reduce_346(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1259)
  def _reduce_347(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 348 omitted

module_eval(<<'.,.,', 'ruby22.y', 1265)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1270)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1276)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1281)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1287)
  def _reduce_353(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1291)
  def _reduce_354(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1296)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1300)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1306)
  def _reduce_357(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1310)
  def _reduce_358(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1314)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1318)
  def _reduce_360(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1324)
  def _reduce_361(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1328)
  def _reduce_362(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1333)
  def _reduce_363(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1340)
  def _reduce_364(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1348)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1354)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1361)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 368 omitted

module_eval(<<'.,.,', 'ruby22.y', 1368)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1375)
  def _reduce_370(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1379)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1385)
  def _reduce_372(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1392)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1397)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1403)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1408)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 377 omitted

module_eval(<<'.,.,', 'ruby22.y', 1416)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1420)
  def _reduce_379(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1425)
  def _reduce_380(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1429)
  def _reduce_381(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1433)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1438)
  def _reduce_383(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1442)
  def _reduce_384(val, _values, result)
                          result = val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1447)
  def _reduce_385(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1451)
  def _reduce_386(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1456)
  def _reduce_387(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 388 omitted

module_eval(<<'.,.,', 'ruby22.y', 1461)
  def _reduce_389(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1465)
  def _reduce_390(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1470)
  def _reduce_391(val, _values, result)
                          @lexer.cmdarg = val[2]
                      @lexer.cmdarg.lexpop

                      result = [ val[1], val[3] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1480)
  def _reduce_392(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1484)
  def _reduce_393(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1489)
  def _reduce_394(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1493)
  def _reduce_395(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1498)
  def _reduce_396(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1502)
  def _reduce_397(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1509)
  def _reduce_398(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1515)
  def _reduce_399(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1521)
  def _reduce_400(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1531)
  def _reduce_401(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1541)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1547)
  def _reduce_403(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1553)
  def _reduce_404(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1559)
  def _reduce_405(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1563)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1569)
  def _reduce_407(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1575)
  def _reduce_408(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1581)
  def _reduce_409(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1585)
  def _reduce_410(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1590)
  def _reduce_411(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1594)
  def _reduce_412(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1600)
  def _reduce_413(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1604)
  def _reduce_414(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1611)
  def _reduce_415(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1617)
  def _reduce_416(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 417 omitted

module_eval(<<'.,.,', 'ruby22.y', 1623)
  def _reduce_418(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1636)
  def _reduce_419(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1641)
  def _reduce_420(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 421 omitted

# reduce 422 omitted

module_eval(<<'.,.,', 'ruby22.y', 1648)
  def _reduce_423(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 424 omitted

module_eval(<<'.,.,', 'ruby22.y', 1654)
  def _reduce_425(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 426 omitted

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

module_eval(<<'.,.,', 'ruby22.y', 1664)
  def _reduce_430(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1669)
  def _reduce_431(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1673)
  def _reduce_432(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1678)
  def _reduce_433(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1682)
  def _reduce_434(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1686)
  def _reduce_435(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1691)
  def _reduce_436(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1696)
  def _reduce_437(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1702)
  def _reduce_438(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1707)
  def _reduce_439(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1711)
  def _reduce_440(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1716)
  def _reduce_441(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1720)
  def _reduce_442(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1725)
  def _reduce_443(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1730)
  def _reduce_444(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1734)
  def _reduce_445(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1739)
  def _reduce_446(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1744)
  def _reduce_447(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1749)
  def _reduce_448(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1753)
  def _reduce_449(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1758)
  def _reduce_450(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1762)
  def _reduce_451(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1767)
  def _reduce_452(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1771)
  def _reduce_453(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1776)
  def _reduce_454(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1780)
  def _reduce_455(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1785)
  def _reduce_456(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1789)
  def _reduce_457(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1794)
  def _reduce_458(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1798)
  def _reduce_459(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1802)
  def _reduce_460(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1807)
  def _reduce_461(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1815)
  def _reduce_462(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1819)
  def _reduce_463(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1823)
  def _reduce_464(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 465 omitted

module_eval(<<'.,.,', 'ruby22.y', 1830)
  def _reduce_466(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1835)
  def _reduce_467(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1840)
  def _reduce_468(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1844)
  def _reduce_469(val, _values, result)
                          result = @builder.negate(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1849)
  def _reduce_470(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1853)
  def _reduce_471(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1857)
  def _reduce_472(val, _values, result)
                          result = @builder.rational(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1861)
  def _reduce_473(val, _values, result)
                          result = @builder.complex(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1866)
  def _reduce_474(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1870)
  def _reduce_475(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1874)
  def _reduce_476(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1878)
  def _reduce_477(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1882)
  def _reduce_478(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1887)
  def _reduce_479(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1891)
  def _reduce_480(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1895)
  def _reduce_481(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1899)
  def _reduce_482(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1903)
  def _reduce_483(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1907)
  def _reduce_484(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1911)
  def _reduce_485(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1916)
  def _reduce_486(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1920)
  def _reduce_487(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1925)
  def _reduce_488(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1929)
  def _reduce_489(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1934)
  def _reduce_490(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1938)
  def _reduce_491(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1943)
  def _reduce_492(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1947)
  def _reduce_493(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1951)
  def _reduce_494(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1955)
  def _reduce_495(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1961)
  def _reduce_496(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1966)
  def _reduce_497(val, _values, result)
                          result = @lexer.in_kwarg
                      @lexer.in_kwarg = true
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1971)
  def _reduce_498(val, _values, result)
                          @lexer.in_kwarg = val[0]
                      result = @builder.args(nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1977)
  def _reduce_499(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1981)
  def _reduce_500(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1985)
  def _reduce_501(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1989)
  def _reduce_502(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1994)
  def _reduce_503(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1998)
  def _reduce_504(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2003)
  def _reduce_505(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2010)
  def _reduce_506(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2018)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2024)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2031)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2037)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2044)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2049)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2055)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2062)
  def _reduce_514(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2067)
  def _reduce_515(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2073)
  def _reduce_516(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2078)
  def _reduce_517(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2084)
  def _reduce_518(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2088)
  def _reduce_519(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2093)
  def _reduce_520(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2097)
  def _reduce_521(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2101)
  def _reduce_522(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2105)
  def _reduce_523(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 524 omitted

module_eval(<<'.,.,', 'ruby22.y', 2111)
  def _reduce_525(val, _values, result)
                          @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2118)
  def _reduce_526(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2123)
  def _reduce_527(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2127)
  def _reduce_528(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2132)
  def _reduce_529(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2136)
  def _reduce_530(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2141)
  def _reduce_531(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2150)
  def _reduce_532(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2154)
  def _reduce_533(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2159)
  def _reduce_534(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2163)
  def _reduce_535(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2168)
  def _reduce_536(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2172)
  def _reduce_537(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2177)
  def _reduce_538(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2181)
  def _reduce_539(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 540 omitted

# reduce 541 omitted

module_eval(<<'.,.,', 'ruby22.y', 2188)
  def _reduce_542(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2194)
  def _reduce_543(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2199)
  def _reduce_544(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2204)
  def _reduce_545(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2209)
  def _reduce_546(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2213)
  def _reduce_547(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2218)
  def _reduce_548(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2222)
  def _reduce_549(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 550 omitted

# reduce 551 omitted

module_eval(<<'.,.,', 'ruby22.y', 2229)
  def _reduce_552(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2235)
  def _reduce_553(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 554 omitted

# reduce 555 omitted

module_eval(<<'.,.,', 'ruby22.y', 2242)
  def _reduce_556(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2249)
  def _reduce_557(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2253)
  def _reduce_558(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 559 omitted

module_eval(<<'.,.,', 'ruby22.y', 2259)
  def _reduce_560(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2264)
  def _reduce_561(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 562 omitted

module_eval(<<'.,.,', 'ruby22.y', 2270)
  def _reduce_563(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2274)
  def _reduce_564(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2279)
  def _reduce_565(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2283)
  def _reduce_566(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2287)
  def _reduce_567(val, _values, result)
                          result = @builder.pair_quoted(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2291)
  def _reduce_568(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])
                    
    result
  end
.,.,

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

# reduce 583 omitted

# reduce 584 omitted

module_eval(<<'.,.,', 'ruby22.y', 2302)
  def _reduce_585(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2306)
  def _reduce_586(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 587 omitted

# reduce 588 omitted

# reduce 589 omitted

module_eval(<<'.,.,', 'ruby22.y', 2312)
  def _reduce_590(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 591 omitted

# reduce 592 omitted

# reduce 593 omitted

module_eval(<<'.,.,', 'ruby22.y', 2321)
  def _reduce_594(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby22
  end   # module Parser
